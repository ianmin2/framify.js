{"version":3,"sources":["framify.es6"],"names":["angular","module","service","$http","_this","this","url","window","location","href","split","filter","urlPortion","ip","port","hlink","nav","redirect","loc","Promise","resolve","catch","e","console","log","dir","str","obj","_typeof","JSON","stringify","json","parse","md5","test","CryptoJS","MD5","toString","base64_encode","string","enc","Base64","base64_decode","upload","data","destination","reject","fd","FormData","key","append","post","transformRequest","identity","headers","Content-Type","undefined","then","d","keys","Object","vals","forEach","v","push","clone","copy","constructor","attr","hasOwnProperty","parseInt","doNothing","getNumbers","firstOnly","arguments","length","numMatch","match","notify","notificationContent","notificationClass","notificationTimeout","position","UIkit","message","status","timeout","pos","countries","name","value","makeResponse","response","command","newDate","Date","toDateString","isoDate","format","getIsoDate","toIsoDate","dObj","dateTime","toDateTime","monthNum","getMonthNum","toMonthNum","$month_array","month_array","month_o_array","id","ajax","method","target","$","getJSON","cgi","dataType","loadify","duration","modal","blockUI","isNaN","setTimeout","hide","alert","title","cb","confirm","prompt","label","placeholder","userValue","isemail","isEmail","prospective_email","isusername","isUsername","prospective_username","ispassword","isPassword","prospective_password","isnumber","isNumber","prospective_number","istelephone","isTelephone","prospective_telephone","isdateTime","isDateTime","prospective_date","matches","val1","val2","num2month","month_number","unique","array_","Array","isArray","ret_array","a","b","reverse","removeDuplicates","count","searchParam","arrayObject","cnt","app","_this2","server","host","socket","io","connect","SMS","smsData","emit","oneSMS","tel","mess","apiKey","telephone","password","bulkSMS","contacts","element","mail","run","$rootScope","$state","$localStorage","sms","storage","frame","path","absUrl","relocate","go","is_admin","isAdmin","isRoot","admin","access","changeAdmin","bool","reset","user","controller","$scope","current","ui","search","links","hasFilters","openFilters","reinit","exec","f","secure","securityFunc","parts","part","indexOf","add","fetch","fetched","counted","login","logedin","table","cryptFields","replace","token","_","extras","cryptField","r","specifics","update","do_fetch","_ret","promiseArr","tData","tkey","all","del","username","adminLogin","admin_name","islogedin","logout","authorize","deauthorize","custom","cFetched","sort","keyname","sortKey","sanitize","dPush","val","currmoin","setMoin","moin","addExtras","targetObj","extrasObj","subStrings","removeKeys","k","i","x","entity","showService","serviceData","available","showEntity","howMany","owner","UID","directive","restrict","require","link","scope","attrs","ngModel","read","$setViewValue","html","$render","$viewValue","bind","$apply","config","ChartJsProvider","setOptions","colors"],"mappings":"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","file":"../framify.min.js","sourcesContent":["angular.module('framify.js', [\n    'ui.router'\n    ,'framify-paginate'\n    ,'ngStorage'\n    ,'jsonFormatter'\n    ,'chart.js'\n    ,'ngAria'\n    ,'ngMaterial'\n    ,'ngMessages'\n])\n\n.service(\"app\"\n,['$http'\n,function($http) {\n\n        //!SETUP THE APPLICATION BASICS\n        var url = window.location.href.split('/').filter(function(urlPortion) { return (urlPortion != '' && urlPortion != 'http:' && urlPortion != 'https:') });\n\n        //! APP CONFIGURATIONS\n        this.ip = url[0].split(':')[0];\n        this.port = url[0].split(':')[1];\n        this.hlink = \"http://\" + this.ip + \":\" + this.port;\n\n        var hlink = this.hlink;\n\n        this.nav = [];\n\n        // //@ FETCH THE PRE-DEFINED APPLICATION URL\n        // $http.get('config/app-routes.json')\n        // .then(function(response) {\n        //     // console.dir(response)\n        //     if (response.status == 200) {\n        //         this.url = response.data;\n        //     } else {\n        //         this.notify(\"Failed to set routes\" ,\"danger\")\n        //     }\n        // });\n\n        //@Perform simple redirects\n        this.redirect = (loc) => {\n            if (loc) {\n                window.location = loc\n            } else {\n                window.location = \"/\";\n            }\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the redirect function.\")\n                console.dir(e)\n            })\n        };\n\n\n        //!APPLICATION URL\n        //this.url = \"http://41.89.162.4:3000\";\n        this.url = this.hlink;\n\n         //* CONDITIONALLY TRANSFORM TO STRING\n        this.str    = (obj) => (typeof(obj) === \"object\") ? JSON.stringify(obj) : obj;\n\n        //* CONDITIONALLY TRANSFORM TO JSON\n        this.json   = (obj) => (typeof(obj) === \"object\") ? obj : JSON.parse(obj);\n\n        //* CONDITIONALLY RETURN AN MD5 HASH\n        this.md5    = (str) => (/^[a-f0-9]{32}$/gm.test(str)) ? str : CryptoJS.MD5(str).toString();\n\n        //BASE64 ENCODE A STRING\n        this.base64_encode = (string) => CryptoJS.enc.Base64.parse(string);\n        //BASE64 DECODE A STRING\n        this.base64_decode = (string) => CryptoJS.enc.Base64.stringify(string);\n\n        //@ THE OFFICIAL FILE UPLOAD SERVICE\n        this.upload = (data, destination) => {\n\n            return new Promise( (resolve ,reject) => {\n                 //* create a formdata object\n                const fd = new FormData();\n\n                //* add the defined keys to the formdata object\n                for (var key in data) {\n                    fd.append(key, data[key]);\n                };\n\n                //* post the data to the /upload route of the running server\n                $http.post(`${hlink}/upload/${destination}`, fd, {\n\n                    transformRequest: angular.identity,\n\n                    //* ensure automatic content-type settng\n                    headers: { 'Content-Type': undefined }\n\n                }).then(d=>resolve(d));\n            });\n\n        };\n\n        //@ GET THE KEYS FROM AN OBJECT\n        this.keys   = obj=>Object.keys(obj);\n\n        this.vals   = obj => {\n            let vals =  [];\n            Object.keys(obj)\n            .forEach(v=>{\n                vals.push(obj[v])\n            })\n            return vals\n        }\n\n        //@ CREATE A COPY OF AN OBJECT\n        this.clone = (obj) => {\n\n            //* ensure that the object is defined\n            if (null == obj || \"object\" != typeof obj) return obj;\n\n            //* call the object constructor prototype\n            var copy = obj.constructor();\n\n            //* clone all attributes of the parent object into a new object\n            for (var attr in obj) {\n                if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n            }\n\n            //* return the newly created object\n            return copy;\n\n        };\n\n\n        //! PARSE AN INTEGER\n        this.parseInt = str => parseInt(str);\n\n        //! EMPTY CALLBACK\n        this.doNothing = () => {\n            return Promise.resolve()\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the donothing function.\")\n                console.dir(e)\n            });\n        };\n\n        //@ FIND NUMBERS IN A STRING\n        this.getNumbers = (str,firstOnly=true) => {\n            let numMatch = /\\d+/g\n            return (firstOnly) ? str.toString().match(numMatch)[0] : str.toString().match(numMatch) ;\n        };\n\n        //! SET A NOTIFICATION \n        this.notify = (notificationContent ,notificationClass ,notificationTimeout,position) => {\n\n            UIkit.notify({\n                message :`<center>${(notificationContent|| 'A blank notification was triggered.')}</center>`,\n                status  : notificationClass || 'info',\n                timeout : notificationTimeout || 6000,\n                pos     : 'top-center' || position\n            });\n\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.dir(e)\n            });\n            \n        };\n\n        var notify = this.notify;\n\n        this.countries = [{ name: \"Afghanistan\", value: \"1\" }, { name: \"Albania\", value: \"2\" }, { name: \"Algeria\", value: \"3\" }, { name: \"American Samoa\", value: \"4\" }, { name: \"Andorra\", value: \"5\" }, { name: \"Angola\", value: \"6\" }, { name: \"Anguilla\", value: \"7\" }, { name: \"Antarctica\", value: \"8\" }, { name: \"Antigua and Barbuda\", value: \"9\" }, { name: \"Argentina\", value: \"10\" }, { name: \"Armenia\", value: \"11\" }, { name: \"Aruba\", value: \"12\" }, { name: \"Australia\", value: \"13\" }, { name: \"Austria\", value: \"14\" }, { name: \"Azerbaijan\", value: \"15\" }, { name: \"Bahamas\", value: \"16\" }, { name: \"Bahrain\", value: \"17\" }, { name: \"Bangladesh\", value: \"18\" }, { name: \"Barbados\", value: \"19\" }, { name: \"Belarus\", value: \"20\" }, { name: \"Belgium\", value: \"21\" }, { name: \"Belize\", value: \"22\" }, { name: \"Benin\", value: \"23\" }, { name: \"Bermuda\", value: \"24\" }, { name: \"Bhutan\", value: \"25\" }, { name: \"Bolivia\", value: \"26\" }, { name: \"Bosnia and Herzegowina\", value: \"27\" }, { name: \"Botswana\", value: \"28\" }, { name: \"Bouvet Island\", value: \"29\" }, { name: \"Brazil\", value: \"30\" }, { name: \"British Indian Ocean Territory\", value: \"31\" }, { name: \"Brunei Darussalam\", value: \"32\" }, { name: \"Bulgaria\", value: \"33\" }, { name: \"Burkina Faso\", value: \"34\" }, { name: \"Burundi\", value: \"35\" }, { name: \"Cambodia\", value: \"36\" }, { name: \"Cameroon\", value: \"37\" }, { name: \"Canada\", value: \"38\" }, { name: \"Cape Verde\", value: \"39\" }, { name: \"Cayman Islands\", value: \"40\" }, { name: \"Central African Republic\", value: \"41\" }, { name: \"Chad\", value: \"42\" }, { name: \"Chile\", value: \"43\" }, { name: \"China\", value: \"44\" }, { name: \"Christmas Island\", value: \"45\" }, { name: \"Cocos (Keeling) Islands\", value: \"46\" }, { name: \"Colombia\", value: \"47\" }, { name: \"Comoros\", value: \"48\" }, { name: \"Congo\", value: \"49\" }, { name: \"Congo, the Democratic Republic of the\", value: \"50\" }, { name: \"Cook Islands\", value: \"51\" }, { name: \"Costa Rica\", value: \"52\" }, { name: \"Cote d\\'Ivoire\", value: \"53\" }, { name: \"Croatia (Hrvatska)\", value: \"54\" }, { name: \"Cuba\", value: \"55\" }, { name: \"Cyprus\", value: \"56\" }, { name: \"Czech Republic\", value: \"57\" }, { name: \"Denmark\", value: \"58\" }, { name: \"Djibouti\", value: \"59\" }, { name: \"Dominica\", value: \"60\" }, { name: \"Dominican Republic\", value: \"61\" }, { name: \"East Timor\", value: \"62\" }, { name: \"Ecuador\", value: \"63\" }, { name: \"Egypt\", value: \"64\" }, { name: \"El Salvador\", value: \"65\" }, { name: \"Equatorial Guinea\", value: \"66\" }, { name: \"Eritrea\", value: \"67\" }, { name: \"Estonia\", value: \"68\" }, { name: \"Ethiopia\", value: \"69\" }, { name: \"Falkland Islands (Malvinas)\", value: \"70\" }, { name: \"Faroe Islands\", value: \"71\" }, { name: \"Fiji\", value: \"72\" }, { name: \"Finland\", value: \"73\" }, { name: \"France\", value: \"74\" }, { name: \"France Metropolitan\", value: \"75\" }, { name: \"French Guiana\", value: \"76\" }, { name: \"French Polynesia\", value: \"77\" }, { name: \"French Southern Territories\", value: \"78\" }, { name: \"Gabon\", value: \"79\" }, { name: \"Gambia\", value: \"80\" }, { name: \"Georgia\", value: \"81\" }, { name: \"Germany\", value: \"82\" }, { name: \"Ghana\", value: \"83\" }, { name: \"Gibraltar\", value: \"84\" }, { name: \"Greece\", value: \"85\" }, { name: \"Greenland\", value: \"86\" }, { name: \"Grenada\", value: \"87\" }, { name: \"Guadeloupe\", value: \"88\" }, { name: \"Guam\", value: \"89\" }, { name: \"Guatemala\", value: \"90\" }, { name: \"Guinea\", value: \"91\" }, { name: \"Guinea-Bissau\", value: \"92\" }, { name: \"Guyana\", value: \"93\" }, { name: \"Haiti\", value: \"94\" }, { name: \"Heard and Mc Donald Islands\", value: \"95\" }, { name: \"Holy See (Vatican City State)\", value: \"96\" }, { name: \"Honduras\", value: \"97\" }, { name: \"Hong Kong\", value: \"98\" }, { name: \"Hungary\", value: \"99\" }, { name: \"Iceland\", value: \"100\" }, { name: \"India\", value: \"101\" }, { name: \"Indonesia\", value: \"102\" }, { name: \"Iran (Islamic Republic of)\", value: \"103\" }, { name: \"Iraq\", value: \"104\" }, { name: \"Ireland\", value: \"105\" }, { name: \"Israel\", value: \"106\" }, { name: \"Italy\", value: \"107\" }, { name: \"Jamaica\", value: \"108\" }, { name: \"Japan\", value: \"109\" }, { name: \"Jordan\", value: \"110\" }, { name: \"Kazakhstan\", value: \"111\" }, { name: \"Kenya\", value: \"112\" }, { name: \"Kiribati\", value: \"113\" }, { name: \"Korea, Democratic People\\'s Republic of\", value: \"114\" }, { name: \"Korea, Republic of\", value: \"115\" }, { name: \"Kuwait\", value: \"116\" }, { name: \"Kyrgyzstan\", value: \"117\" }, { name: \"Lao, People\\'s Democratic Republic\", value: \"118\" }, { name: \"Latvia\", value: \"119\" }, { name: \"Lebanon\", value: \"120\" }, { name: \"Lesotho\", value: \"121\" }, { name: \"Liberia\", value: \"122\" }, { name: \"Libyan Arab Jamahiriya\", value: \"123\" }, { name: \"Liechtenstein\", value: \"124\" }, { name: \"Lithuania\", value: \"125\" }, { name: \"Luxembourg\", value: \"126\" }, { name: \"Macau\", value: \"127\" }, { name: \"Macedonia, The Former Yugoslav Republic of\", value: \"128\" }, { name: \"Madagascar\", value: \"129\" }, { name: \"Malawi\", value: \"130\" }, { name: \"Malaysia\", value: \"131\" }, { name: \"Maldives\", value: \"132\" }, { name: \"Mali\", value: \"133\" }, { name: \"Malta\", value: \"134\" }, { name: \"Marshall Islands\", value: \"135\" }, { name: \"Martinique\", value: \"136\" }, { name: \"Mauritania\", value: \"137\" }, { name: \"Mauritius\", value: \"138\" }, { name: \"Mayotte\", value: \"139\" }, { name: \"Mexico\", value: \"140\" }, { name: \"Micronesia, Federated States of\", value: \"141\" }, { name: \"Moldova, Republic of\", value: \"142\" }, { name: \"Monaco\", value: \"143\" }, { name: \"Mongolia\", value: \"144\" }, { name: \"Montserrat\", value: \"145\" }, { name: \"Morocco\", value: \"146\" }, { name: \"Mozambique\", value: \"147\" }, { name: \"Myanmar\", value: \"148\" }, { name: \"Namibia\", value: \"149\" }, { name: \"Nauru\", value: \"150\" }, { name: \"Nepal\", value: \"151\" }, { name: \"Netherlands\", value: \"152\" }, { name: \"Netherlands Antilles\", value: \"153\" }, { name: \"New Caledonia\", value: \"154\" }, { name: \"New Zealand\", value: \"155\" }, { name: \"Nicaragua\", value: \"156\" }, { name: \"Niger\", value: \"157\" }, { name: \"Nigeria\", value: \"158\" }, { name: \"Niue\", value: \"159\" }, { name: \"Norfolk Island\", value: \"160\" }, { name: \"Northern Mariana Islands\", value: \"161\" }, { name: \"Norway\", value: \"162\" }, { name: \"Oman\", value: \"163\" }, { name: \"Pakistan\", value: \"164\" }, { name: \"Palau\", value: \"165\" }, { name: \"Panama\", value: \"166\" }, { name: \"Papua New Guinea\", value: \"167\" }, { name: \"Paraguay\", value: \"168\" }, { name: \"Peru\", value: \"169\" }, { name: \"Philippines\", value: \"170\" }, { name: \"Pitcairn\", value: \"171\" }, { name: \"Poland\", value: \"172\" }, { name: \"Portugal\", value: \"173\" }, { name: \"Puerto Rico\", value: \"174\" }, { name: \"Qatar\", value: \"175\" }, { name: \"Reunion\", value: \"176\" }, { name: \"Romania\", value: \"177\" }, { name: \"Russian Federation\", value: \"178\" }, { name: \"Rwanda\", value: \"179\" }, { name: \"Saint Kitts and Nevis\", value: \"180\" }, { name: \"Saint Lucia\", value: \"181\" }, { name: \"Saint Vincent and the Grenadines\", value: \"182\" }, { name: \"Samoa\", value: \"183\" }, { name: \"San Marino\", value: \"184\" }, { name: \"Sao Tome and Principe\", value: \"185\" }, { name: \"Saudi Arabia\", value: \"186\" }, { name: \"Senegal\", value: \"187\" }, { name: \"Seychelles\", value: \"188\" }, { name: \"Sierra Leone\", value: \"189\" }, { name: \"Singapore\", value: \"190\" }, { name: \"Slovakia (Slovak Republic)\", value: \"191\" }, { name: \"Slovenia\", value: \"192\" }, { name: \"Solomon Islands\", value: \"193\" }, { name: \"Somalia\", value: \"194\" }, { name: \"South Africa\", value: \"195\" }, { name: \"South Georgia and the South Sandwich Islands\", value: \"196\" }, { name: \"South Sudan\", value: \"197\" }, { name: \"Spain\", value: \"198\" }, { name: \"Sri Lanka\", value: \"199\" }, { name: \"St. Helena\", value: \"200\" }, { name: \"St. Pierre and Miquelon\", value: \"201\" }, { name: \"Sudan\", value: \"202\" }, { name: \"Suriname\", value: \"203\" }, { name: \"Svalbard and Jan Mayen Islands\", value: \"204\" }, { name: \"Swaziland\", value: \"205\" }, { name: \"Sweden\", value: \"206\" }, { name: \"Switzerland\", value: \"207\" }, { name: \"Syrian Arab Republic\", value: \"208\" }, { name: \"Taiwan, Province of China\", value: \"209\" }, { name: \"Tajikistan\", value: \"210\" }, { name: \"Tanzania, United Republic of\", value: \"211\" }, { name: \"Thailand\", value: \"212\" }, { name: \"Togo\", value: \"213\" }, { name: \"Tokelau\", value: \"214\" }, { name: \"Tonga\", value: \"215\" }, { name: \"Trinidad and Tobago\", value: \"216\" }, { name: \"Tunisia\", value: \"217\" }, { name: \"Turkey\", value: \"218\" }, { name: \"Turkmenistan\", value: \"219\" }, { name: \"Turks and Caicos Islands\", value: \"220\" }, { name: \"Tuvalu\", value: \"221\" }, { name: \"Uganda\", value: \"222\" }, { name: \"Ukraine\", value: \"223\" }, { name: \"United Arab Emirates\", value: \"224\" }, { name: \"United Kingdom\", value: \"225\" }, { name: \"United States\", value: \"226\" }, { name: \"United States Minor Outlying Islands\", value: \"227\" }, { name: \"Uruguay\", value: \"228\" }, { name: \"Uzbekistan\", value: \"229\" }, { name: \"Vanuatu\", value: \"230\" }, { name: \"Venezuela\", value: \"231\" }, { name: \"Vietnam\", value: \"232\" }, { name: \"Virgin Islands (British)\", value: \"233\" }, { name: \"Virgin Islands (U.S.)\", value: \"234\" }, { name: \"Wallis and Futuna Islands\", value: \"235\" }, { name: \"Western Sahara\", value: \"236\" }, { name: \"Yemen\", value: \"237\" }, { name: \"Yugoslavia\", value: \"238\" }, { name: \"Zambia\", value: \"239\" }, { name: \"Zimbabwe\", value: \"240\" }];\n\n\n        //! BASIC FRAMIFY FORMAT RESPONSE FORMATTER\n        this.makeResponse = (response ,message ,command) => {\n\n            return {\n                response: response,\n                data: {\n                    message: message,\n                    command: command\n                }\n            };\n\n        };\n\n        //!DATE FORMATERS\n        //* simple date\n        this.newDate        = () => new Date().toDateString();\n        //* isodate\n        this.isoDate        = () => new Date().format('isoDate');\n        //* get the isoDate of the specified date\n        this.getIsoDate     = (d) => new Date(d).format('isoDate');\n        //* get the isoDate of a date object\n        this.toIsoDate      = dObj => dObj.format('isoDate');\n        //* custom datetime\n        this.dateTime       = () => new Date().format('dateTime');\n\t//* set the date in the custom datetime format\n\tthis.toDateTime    = d => new Date(d).format('dateTime');\n        //* month number\n        this.monthNum       = () => new Date().format('monthNum');\n        //* get month number of the specified date\n        this.getMonthNum    = d => new Date(d).format('monthNum');\n        //* get date objects' month number\n        this.toMonthNum     = dObj => dObj.format('monthNum');\n\n        //* MONTHS ARRAY\n        var $month_array = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        this.month_array = $month_array;\n        this.month_o_array = [\n            { id: 0, name: \"January\" }\n            ,{ id: 1, name: \"February\" }\n            ,{ id: 2, name: \"March\" }\n            ,{ id: 3, name: \"April\" }\n            ,{ id: 4, name: \"May\" }\n            ,{ id: 5, name: \"June\" }\n            ,{ id: 6, name: \"July\" }\n            ,{ id: 7, name: \"August\" }\n            ,{ id: 8, name: \"September\" }\n            ,{ id: 9, name: \"October\" }\n            ,{ id: 10, name: \"November\" }\n            ,{ id: 11, name: \"December\" }\n        ];\n\n        // this.printMonths = () =>  $month_o_array\n        //                     .reduce((mobj,m)=>{\n        //                         mobj[m] = m   \n        //                     },{})\n        //                     .filter(m=>m)\n\n        //! HANDLE APPLICATION SERVICE REQUESTS\n        this.ajax = (method ,target ,data) => {\n\n            return $.ajax({\n                method: method || \"POST\",\n                url: target,\n                data: data\n            });\n           \n        };\n\n        //!HANDLE JSON REQUESTS \n        this.getJSON = (target) => {\n\n            return $.getJSON(target);\n\n        };\n\n        //! HANDLE CORS CALLS WITH jsonp ENABLED\n        this.cgi = (method ,url ,data) => {\n\n            return $.ajax({\n                method: method || \"GET\",\n                url: url,\n                data: data,\n                dataType: 'jsonp',\n            });\n\n        };\n\n        //!HANDLE THE DISPLAY OF DIALOG BOXES\n\n        //* SHOW A \"LOADING\" ELEMENT\n        this.loadify = (duration, message) => {\n\n            return new Promise( (resolve,reject) => {\n                let modal = UIkit.modal.blockUI('<center><i style=\"color:blue;\" class=\"fa fa fa-spinner fa-pulse fa-5x fa-fw\"></i></center>'+( (message)?`<center><br>${message}</center>`:\"\" ) );\n                if( duration && !isNaN(duration)){\n                    setTimeout(()=>{\n                         modal.hide();\n                         resolve(true); \n                    }, duration ) ;\n                }else{\n                    resolve(modal);\n                }\n                \n            });\n\n        };\n        \n        //*GENERATE A CUSTOM ALERT DIALOG\n        this.alert = (title ,message ,cb) => {\n\n            UIkit.modal.alert(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Notice'}</font>\n            <hr>\n            <center>${message||'</center><font color=red font-weight=bold; font-size=2em>Oops!</font><br>False alarm!<center>'}</center>`);\n\n            if( cb && typeof(cb) == \"function\" ){\n                return Promise.resolve(cb())\n                .catch(function(e){\n                   console.log(\"Encountered an error when processing the alert function.\")\n                   console.dir(e)\n               });\n            }else{\n                return Promise.resolve(true)\n                .catch(function(e){\n                   console.log(\"Encountered an error when processing the alert2 function.\")\n                   console.dir(e)\n               });\n            }\n\n        };\n            \n        //*GENERATE A CUSTOM CONFIRM DIALOG\n        this.confirm = ( title ,message ,cb ) => {\n            \n            return new Promise( (resolve) => {\n\n                UIkit.modal.confirm(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Confirmation required.'}</font>\n                <hr>\n                <center>${message}</center>`,()=>{\n                    if(cb && typeof(cb) == \"function\"){\n                        resolve(cb());\n                    }else{\n                        resolve(true);\n                    }\n                });\n\n            });           \n            \n        };    \n            \n        //*GENERATE A CUSTOM PROMPT DIALOG\n        this.prompt = function( title ,label ,placeholder ,cb){\n          \n          return new Promise( (resolve) => {\n\n            UIkit.modal.prompt(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Info required'}</font>\n            <hr>\n            ${label||'email'} :`, (placeholder||''), (userValue) => { \n                if(cb && typeof(cb) == \"function\"){\n                    resolve(cb()) \n                }else{\n                    resolve(true);\n                }\n            });\n\n          }); \n                      \n        };\n\n\n        //!BASIC VALIDATION METHODS\n\n        //*VALIDATE EMAIL ADDRESSES\n        this.isemail = /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/;\n        this.isEmail = prospective_email => this.isemail.test(prospective_email);\n\n        //*VALIDATE USERNAMES\n        this.isusername = /^[a-z0-9_-]{4,16}$/;\n        this.isUsername = prospective_username => this.isusername.test(prospective_username);\n\n        //*VALIDATE PASSWORDS\n        this.ispassword = /^[-@./\\!\\$\\%\\^|#&,+\\w\\s]{6,50}$/;\n        this.isPassword = prospective_password => this.ispassword.test(prospective_password);\n\n        //* VALIDATE NUMBERS\n        this.isnumber = /^-{0,1}\\d*\\.{0,1}\\d+$/;\n        this.isNumber = prospective_number => this.isnumber.test(prospective_number);\n\n        //*VALIDATE TELEPHONE NUMBERS\n        this.istelephone = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n        this.isTelephone = prospective_telephone => this.istelephone.test(prospective_telephone);\n\n        //*VALIDATE DATETIME VALUES IN THE FORMAT  DD-MM-YYYY HH:MM e.g 29-02-2013 22:16\n        this.isdateTime = /^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-(19|20)[0-9]{2} (2[0-3]|[0-1][0-9]):[0-5][0-9]$/;\n        this.isDateTime = prospective_date=>this.isdateTime.test( prospective_date );\n\n        //*VALIDATE WHETHER TWO GIVEN VALUES MATCH\n        this.matches = (val1, val2) => (val1 === val2);\n\n        //*TRANFORM NUMBER TO MONTH\n        this.num2month = (month_number) => (!isNaN(month_number) && (month_number <= 11) )?$month_array[month_number]:\"Invalid Month\";\n\n        //*REMOVE DUPLICATES FROM ARRAY\n        this.unique = (array_) => {\n\n           if( !Array.isArray(array_) ){\n               notify('Could not remove duplicates from a non array object','danger');\n               return array_;\n           }else{\n\n               //* create a new array\n                var ret_array = new Array();\n\n                //* loop through the entire length of the provided array\n                for (var a = array_.length - 1; a >= 0; a--) {\n                    \n                    //* loop through the array once more (for re-verification)\n                    for (var b = array_.length - 1; b >= 0; b--) {\n                        //* de-populate duplicates in the array\n                        if (array_[a] == array_[b] && a != b) {\n                            delete array_[b];\n                        }\n                    };\n                    \n                    //* store the relevant values\n                    if (array_[a] != undefined){\n                        ret_array.push(array_[a]);\n                    }                    \n\n                };\n                //* return the reversed array (to avoid distortion from the initial)\n                return ret_array.reverse();\n\n           }\n        };\n\n        this.removeDuplicates = this.unique;\n\n        //* COUNT OCCURANCES IN AN ARRAY\n        this.count = (searchParam ,arrayObject) => {\n\n            var cnt = 0;\n\n            for(v in arrayObject) {\n                if (searchParam === arrayObject[v]) {\n                    cnt += 1;\n                }\n            }\n            return cnt;\n\n        };\n\n       \n\n}])\n\n//The BASIC sms sending application service\n.service(\"sms\" \n,['app'\n,function(app) {\n\n        /**\n         * This angular service allows for you to easily send SMS messages conveniently using bixbyte's default SMS server\n         * \n         * It allows the use of your *Framify SMS* android phone application to send simple SMS messages. \n         * \n         * You can easily extend it as you will since the socket connection to the server can be hooked to as \"sms.socket\"\n         */\n\n        //@ BASIC APPLICATION INITIALIZATION\n        this.server = {};\n        this.server.host = '41.89.162.252:3000';\n        this.socket = io.connect(`${this.server.host}`);\n        const socket = this.socket;\n\n        //@ SEND EXPRESS SMS'\n        this.SMS = (smsData) => {\n            socket.emit(\"sendSMS\" ,smsData);\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the sms function.\")\n                console.dir(e)\n            })            \n        };\n\n        //@ SEND A SINGLE SMS\n        this.oneSMS = (tel ,mess ,apiKey) => {\n\n            var obj;\n            if (Array.isArray(tel)) {\n                obj = tel;\n            } else {\n                obj = {\n                    telephone: tel,\n                    message: mess,\n                    password: apiKey\n                };\n            }\n\n            socket.emit(\"sendSMS\" ,obj);\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the sendsms function.\")\n                console.dir(e)\n            });\n\n        };\n\n        //@ SEND BULK SMS MESSAGES\n        this.bulkSMS = (contacts ,data ,apiKey) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                let obj = [];\n\n                //* Ensure that the API key has been set\n                if (!apiKey) {\n                    app.alert(\"<font style='weight:bold;color:red;'>ERROR</font>\",'<center>Failed to instantiate the SMS sending service before api Key definition.</center>');\n                } else if (Array.isArray(contacts)) {\n\n                    //* handle an array of contacts\n                    contacts.forEach( (element) => {\n\n                        if (app.isTelephone(element)) {\n\n                            obj.push({\n                                telephone: element,\n                                message: data,\n                                apiKey: apiKey\n                            });\n\n                        } else {\n\n                            app.alert(\"<font style='weight:bold;color:red;'>Invalid telephone number encountered</font>\",'<center>Could not send an SMS message to the invalid number ' + element + '.</center>');\n\n                        }\n\n                    }, this);\n\n                    socket.emit(\"sendSMS\", obj);\n                    resolve(true);\n\n                } else {\n                    app.alert(\"<font style='weight:bold;color:red;'>Bulk SMS error.</font>\" ,'<center>You can only use the bulk SMS service with an array of telephone contacts</center>');\n                }\n\n            });       \n           \n        };\n\n        // //@ SAMPLE SUCCESSFUL SMS SENDING INFORMATION HANDLER\n        // this.socket.on(\"trueSMS\", (data) => {\n        //     $scope.app.notify(\"The message has been conveyed.\");\n        // });\n\n}])\n\n.service(\"cgi\" \n,[\nfunction() {\n\n    //Handle background calls to the web server for database integration\n    this.ajax = function(data) {\n        return $.ajax({\n            method: \"GET\",\n            url: \"/php/index.php\",\n            data: data\n        });\n    };\n\n   //Handle the posting of emails via the mailgun api\n   this.mail = function(data){\n        return $.ajax({\n            method: \"POST\"\n            ,url: \"/sendMail\"\n            ,data: data\n        })\n    };\n\n}])\n\n.run(\n[\"app\" ,\"cgi\" ,\"$rootScope\" ,\"$state\" ,\"$localStorage\" ,\"sms\"\n,function(app ,cgi ,$rootScope ,$state ,$localStorage ,sms) {\n\n        //! INJECT THE LOCATION SOURCE TO THE ROOT SCOPE\n        $rootScope.location     = $state;\n\n        //! INJECT THE $localStorage instance into the root scope\n        $rootScope.storage      = $localStorage;\n\n        //! INJECT THE APPLICATION'S MAIN SERVICE TO THE ROOT SCOPE SUCH THAT ALL SCOPES MAY INHERIT IT\n        $rootScope.app          = app;\n\n        //! INJECT THE APP BASICS SERVICE\n        $rootScope.cgi          = cgi;\n\n        //! SIMPLE APPLICATION BEHAVIOR SETUP\n        $rootScope.frame        = {};\n\n        //#! INJECT THE SMS INSTANCE INTO THE MAIN SCOPE\n        $rootScope.sms          = sms;\n\n        //! IDENTIFY THE CURRENT PATH\n        $rootScope.frame.path   = () => $state.absUrl().split(\"/#/\")[0] + \"/#/\" + $state.absUrl().split(\"/#/\")[1].split(\"#\")[0];\n        //p.split(\"/#/\")[0]+\"/#/\"+p.split(\"/#/\")[1].split(\"#\")[0]\n\n        //! RELOCATION HANDLING\n        $rootScope.frame.relocate = (loc) => {\n            console.log(`Relocating to: #${loc}`)\n            $rootScope.location.go(loc);\n        };\n\n        //! ADMIN HANDLING  \n        $rootScope.frame.is_admin = false;\n\n        //! ADMIN STATUS CHECKER \n        $rootScope.frame.isAdmin = () => ($rootScope.frame.is_admin) ? true : false;\n\n        //! ROOT USER STATUS CHECKER\n        $rootScope.frame.isRoot = () => ($rootScope.storage.admin.access == 0) ? true : false;\n\n        //! ADMIN STATUS SWITCH\n        $rootScope.frame.changeAdmin = (bool) => {\n            $rootScope.frame.is_admin = bool;\n            //  $rootScope.$apply();\n        };\n\n        //! RESET THE ADMIN STATUS\n        $rootScope.frame.reset = () => {\n            delete $rootScope.storage.admin;\n            delete $rootScope.storage.user;\n            $rootScope.frame.changeAdmin(false);\n            window.location = \"/#/\";\n        };\n\n\n    }])\n.controller(\"framifyController\"\n,['$scope' ,'$state' ,'$rootScope' \n,function($scope ,$state ,$rootScope) {\n\n        //!APPLICATION GLOBAL SCOPE COMPONENTS\n        $scope.current = {};\n        $scope.ui = {};\n\n        // $scope.urlParams = $stateParams;\n\n        $rootScope.nav = [];\n        $rootScope.nav.search; \n        $rootScope.links = [];\n\n        $scope.nav.hasFilters = false;\n\n\n        //** MANAGE THE NAVIGATION SEARCH STATUS\n        $scope.openFilters = (hasFilters) => {\n            if (hasFilters === true) { $scope.nav.hasFilters = false; } else { $scope.nav.hasFilters = true; }\n        };\n\n        //!RE-INITIALIZE APPLICATION DATA\n        $rootScope.app.reinit = () => {\n            $scope.location.path(\"/framify\");\n        };\n\n\n        //@ FUNCTION EXECUTOR\n        $rootScope.exec = f => f();\n\n        /**\n         * SECURE THE PARENTAL CONTROLLED URLS\n         */\n        $rootScope.secure = (securityFunc) => {\n\n            var parts = window.location.href.split('/');\n\n            var part = parts[(parts.length - 1)];\n\n            if ($scope.links.indexOf(part) >= 0) {\n\n                $rootScope.exec(securityFunc);\n\n            }\n\n        };\n\n\n        /**\n         * DATABASE CENTRIC ADDITION AND DELETION\n         */\n\n        //Define the main application objects\n        $scope.add = {};\n        $scope.fetch = {};\n        $scope.fetched = {};\n        $scope.counted = {};\n        $scope.data = {};\n\n        $scope.data.login = {};\n        $scope.data.admin = {};\n\n        $rootScope.frame.changeAdmin(false);\n        $scope.logedin = false;\n\n        //! BASIC ADDITION\n        $scope.add = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                //* populate the data object \n                data                = (data) ? $scope.app.json(data) : {};\n                data.command        = \"add\";\n                data.table          = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n                data.token          = data.token || $scope.storage.admin._;\n                data.extras         = (data) ? ((data.extras) ? data.extras.replace(/LIMIT 1/ig, '') : undefined) : undefined;\n\n                //* Encrypt the specified cryptFields\n                 if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        }                        \n                    });\n                }\n\n                //* Perform the actual addition\n                $scope.cgi.ajax(data)\n                .then((r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.app.notify(`<center> ${r.data.message}</center>` ,\"success\" );\n\n                        $scope.fetch(table, { specifics: data.specifics });\n\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                        if ( cb && typeof(cb) == \"function\") {\n                            resolve( cb(r,data) );\n                        } else {\n                            resolve(true);\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/);\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n\n                        }\n\n\n                        $scope.app.notify(`<center>${ r.data.message }</center>` ,'danger');\n                        reject( $scope.app.makeResponse(500 ,v[1]) )\n                        \n                    }\n\n                    //$scope.$apply();\n\n                });\n\n            });\n\n        \n            \n        };\n\n        //! BASIC UPDATING\n        $scope.update = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                //* pack the relevant info into the data object\n                data                = (data) ? $scope.app.json(data) : {};\n                data.command        = \"update\";\n                data.table          = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n                data.token          = data.token || $scope.storage.admin._;\n                data.extras         = (data) ? ((data.extras) ? data.extras.replace(/LIMIT 1/ig, '') : undefined) : undefined;\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                //* perform the actual update\n                $scope.cgi.ajax(data)\n                .then( (r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.app.notify(`<center> ${r.data.message}</center>`, \"success\");\n\n                        $scope.fetch(table, { specifics: data.specifics });\n\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                        //$scope.$apply();\n\n                        if (typeof(cb) == 'function') {\n                            resolve( cb( r ) );                            \n                        }else{\n                            resolve(true);\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                           \n                        }\n\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message)  );\n\n                    }\n                    \n                })\n\n            });\n  \n        };\n\n\n        //! BASIC DATA FETCHING\n        var do_fetch = (table ,data ,cryptFields) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                //* populate the \"data\" object\n                data               = (data) ? $scope.app.json(data) : {};\n                data.command       = \"get\";\n                data.table         = table;\n\n                console.log(\"\\nprocessing the fetching of table \" + table + \"\\n\")\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                       if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                 //* perform the actual data fetching\n                 $scope.cgi.ajax(data)\n                 .then( (r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n                        $scope.fetched[table] = r.data.message;\n                        //$scope.$apply();\n                        resolve(r);\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n\n                        }\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    \n                })\n\n            });\n\n        };\n\n        $scope.fetch = (table ,data ,cryptFields ,cb) => {\n\n            if (Array.isArray(table)) {\n\n                let promiseArr = new Array();\n\n                table\n                .filter(e=>typeof(e[0])!='undefined' )\n                .forEach( (tData ,tkey) => {\n                    promiseArr.push( do_fetch(tData[0] ,(tData[1] || {}) ) ,cryptFields)\n                });\n                \n                promiseArr = promiseArr.filter(e=>typeof(e)!='undefined');\n\n                return Promise.all( promiseArr );\n\n            } else {\n               return Promise.resolve( do_fetch(table, data, cryptFields) )\n               .catch(function(e){\n                   console.log(\"Encountered an error when processing the fetch function.\")\n                   console.dir(e)\n               });\n            }\n\n        };\n\n        //! BASIC DELETION  \n        $scope.del = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (reject ,resolve) => {\n\n                //* populate the data object\n                data            = (data) ? $scope.app.json(data) : {};\n                data.command    = \"del\";\n                data.table      = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n                data.token      = data.token || $scope.storage.admin._;\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                $scope.cgi.ajax(data)\n                .then( (r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n                        // $scope.fetched[table].splice(delID, 1);\n                        $scope.app.notify(`<center>${r.data.message}</center>`, \"success\");\n                        resolve(r);\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    //$scope.$apply();\n\n                })\n\n            })\n            \n        };\n\n        //Basic User Login\n        $scope.login = (cryptField) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                if (cryptField) {\n                    $scope.data.login[cryptField] = $scope.app.md5($scope.data.login[cryptField])\n                }\n\n                $scope.data.login.command   = \"get\";\n                $scope.data.login.table     = \"users\";\n                $scope.data.login.extras    = \" AND active is true LIMIT 1\";\n\n                //* perform the actual login validation\n                $scope.cgi.ajax($scope.data.login)\n                .then((r) => {\n\n                    $scope.data.admin.extras = \"\";\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        if (r.data.message.length > 0 && typeof(r.data.message[0]) == \"object\") {\n\n                            if (r.data.message[0]['username'] == $scope.data.login.username) {\n                                $scope.storage.user = r.data.message[0];\n                                $scope.logedin = true;\n                            } else {\n                                delete $scope.storage.user;\n                                window.location = \"/#/\";\n                            }\n\n                             resolve();\n\n                        } else {\n                            delete $scope.storage.user;\n                            $scope.app.notify(`<center>You have entered the wrong login credentials.</center>` ,\"danger\");\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/);\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n\n                        delete $scope.storage.user;\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    //$scope.$apply();\n\n                });\n\n            });\n\n        };\n\n        //Basic admin login\n        $scope.adminLogin = (cryptField) => {\n\n            return new Promise( (resolve,reject) =>{\n\n                if (cryptField) {\n                    $scope.data.admin[cryptField] = $scope.app.md5($scope.data.admin[cryptField])\n                }\n\n                $scope.data.admin.command   = \"get\";\n                $scope.data.admin.table     = \"admins\";\n                $scope.data.admin.extras    = \" AND active is true LIMIT 1\";\n\n                //* perform the actual login\n                $scope.cgi.ajax($scope.data.admin)\n                .then((r) => {\n\n                    $scope.data.admin.extras = \"\";\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        if (r.data.message.length > 0 && typeof(r.data.message[0]) != undefined) {\n\n                            if (r.data.message[0]['password'] === $scope.data.admin.password) {\n                                $scope.storage.admin = r.data.message[0];\n                                $scope.storage.admin._ = {};\n                                $scope.storage.admin._.user = r.data.message[0].admin_name;\n                                $scope.storage.admin._.key = r.data.message[0].password;\n                                $rootScope.frame.changeAdmin(true);\n                                //$scope.$apply();\n                                resolve(r)\n                            } else {\n                                delete $scope.data.admin;\n                                delete $scope.storage.admin;\n                                window.location = \"/#/admin\";                                \n                                resolve(r)\n                            }\n\n                        } else {\n                            delete $scope.data.admin;\n                            delete $scope.storage.admin;\n                            $scope.app.notify(`<center>You have entered the wrong login credentials.</center>` ,\"danger\");\n                            window.location = \"/#/admin\";\n                            reject(false);\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n                        delete $scope.storage.admin;\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    //$scope.$apply();\n                })\n\n            });\n\n        };\n\n        //@ Handle basic user re-authentication\n        $scope.islogedin = () => {\n\n            return new Promise( (resolve ,reject) => {\n\n                if ($scope.storage.user) {\n                    $scope.data.login.username = $scope.storage.user.username;\n                    $scope.data.login.password = $scope.storage.user.password;\n                    $scope.login();\n                    resolve(true);\n                }else{\n                    $scope.app.notify(`<center>You have no permission to access this content</center>`,'danger')\n                    reject(false);\n                }\n\n            })\n\n        };\n\n        //@ Handle basic app-user logout\n        $scope.logout = () => {\n\n            $scope.islogedin = false;\n            delete $scope.storage.user;\n            window.location = '/#/';\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the logout function.\")\n                console.dir(e)\n            });\n            \n        };\n\n        //@ Handle basic application redirection\n        $scope.redirect = (loc) => {\n            if (loc) {\n                window.location = loc\n            } else {\n                window.location = \"/#/framify\";\n            }\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the redirect function.\")\n                console.dir(e)\n            })\n        };\n\n        // Basic Admin Auth\n        $scope.authorize = () => {\n\n            if ($scope.storage.admin) {\n                $scope.data.admin               = {};\n                $scope.data.admin.admin_name    = $scope.storage.admin.admin_name;\n                $scope.data.admin.password      = $scope.storage.admin.password;\n                $scope.adminLogin();\n            } else {\n                $scope.location = \"/#/admin\";\n            }\n\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the authorize function.\")\n                console.dir(e)\n            });\n\n        };\n\n        //@ HANDLE ADMINISTRATOR DEAUTHORIZATION\n        $scope.deauthorize = () => {\n            delete $scope.storage.admin;\n            $rootScope.frame.changeAdmin(false);\n            window.location = '/#/';\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the deauthorize function.\")\n                console.dir(e)\n            });\n        };\n\n\n        // BASIC Custom Queries\n        $scope.custom = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (resolve,reject) => {\n\n                //* initialize the data object\n                data            = (data) ? $scope.app.json(data) : {};\n                data.command    = \"custom\";\n                data.token      = data.token || $scope.storage.admin._;\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                //* Perform the actual custom query\n                $scope.cgi.ajax(data)\n                .then((r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.app.notify(`<center>${(r.data.message || 'Successful')}</center>`, \"success\");\n\n                        $scope.cFetched[table] = r.data.message;\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n                        //$scope.$apply();\n\n                        resolve(r);\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n\n                        } \n                        $scope.app.notify(`<center>${ r.data.message }</center>`);\n                        reject( $scope.app.makeResponse(500, r.data.message) )\n                    }\n                    //$scope.$apply();\n                })\n\n            });   \n\n        };\n\n        //BASIC DATABASE INSTANCEOF COUNTER\n        $scope.count = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                data            = (data) ? $scope.app.json(data) : {};\n                data.table      = table;\n                data.command    = \"count\";\n                data.token      = data.token || {};\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                //* perform the actual count\n                $scope.cgi.ajax(data)\n                .then((r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.counted[table.toString().replace(/vw_/ig, '')] = r.data.message;\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                        //$scope.$apply();\n\n                        resolve(r);\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n                        $scope.app.notify(`<center>${ r.data.message }</center>` ,'danger');\n                        reject( $scope.app.makeResponse(500 ,r.data.message ) );\n                    }\n                    //$scope.$apply();\n                })\n\n            });\n\n        };\n\n        /**\n         * TABLE SORTER\n         */\n        $scope.sort = function(keyname) {\n            $scope.sortKey = keyname; //set the sortKey to the param passed\n            $scope.reverse = !$scope.reverse; //if true make it false and vice versa\n        }\n\n\n        /**\n         *  DELETE UNWANTED FIELDS\n         */\n        $scope.sanitize = (data ,keys) => {\n            if (keys) {\n                keys.split(\",\").forEach((key) => {\n                    delete data[key];\n                });\n                return Promise.resolve(data)\n                .catch(function(e){\n                   console.log(\"Encountered an error when processing the sanitize function.\")\n                   console.dir(e)\n               });\n            }\n        };\n\n        /**\n         * PUSH DATA TO OBJECT\n         */\n        $scope.dPush = (obj ,key ,val) => {\n            obj[key] = val;\n        };\n\n        /**\n         * @ MONTH REGULATION\n         */\n        $scope.currmoin = $scope.app.monthNum();\n        $scope.setMoin = (moin) => { $scope.currmoin = moin; }\n\n        //@ INJECT A STANDARD WHERE \"Extras\" OBJECT\n        $scope.addExtras = (targetObj ,extrasObj ,subStrings ,removeKeys) => {\n\n            return new Promise( (resolve,reject) => {\n\n                targetObj   = targetObj || {};\n                extrasObj   = extrasObj || {};\n                subStrings  = subStrings || '';\n                removeKeys  = removeKeys || '';\n\n                var extras  = '';\n\n                var k = [],\n                    v = [];\n\n                //@ CAPTURE THE REMOVE KEYS\n                removeKeys = removeKeys.split(',').filter(e => e);\n\n\n                removeKeys.forEach(e => {\n                    extrasObj[e] = null;\n                    delete extrasObj[e];\n                });\n\n                //@ CAPTURE REPLACE STRINGS\n                subStrings\n                    .split(',')\n                    .forEach((e, i) => {\n                        let x = e.split(':');\n                        k[i] = (x[0]);\n                        v[i] = (x[1]);\n                    })\n\n                //@ GET THE DEFINED KEYS\n                var keys = Object.keys(extrasObj);\n\n                //@ REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n                k.forEach((e, i) => {\n\n                    if (keys.indexOf(e) != -1) {\n\n                        extrasObj[v[i]] = extrasObj[e];\n                        extrasObj[e] = null;\n                        delete extrasObj[e];\n\n                    }\n\n                });\n\n\n                k = Object.keys(extrasObj);\n                v = null;\n\n                k.forEach((e, i) => {\n\n                    extras += ' ' + e + \"='\" + extrasObj[e] + \"' AND\";\n\n                });\n\n                k = null;\n\n\n                targetObj.extras = extras.replace(/AND+$/, '');\n\n                resolve( targetObj );\n\n            })\n\n        };\n\n        ///////////////////////////////////////////////////////////////////////////////////////////////////\n        // ADDITIONS ON PROBATION\n\t// ----\n\n\t    //@ LOAD A SERVICE ONTO THE STAGE\n\t    $scope.service = {};\n\t    $scope.entity  = {};\n\n\t    $scope.showService = (serviceData) => {\n\t\t$scope.service.available = true;\n\t\t$scope.service.current   = serviceData;\n\t\t//$scope.$apply();\n\t    };\n\n\t    $scope.showEntity = (serviceData) => {\n\t\t$scope.entity.available = true;\n\t\t$scope.entity.current   = serviceData;\n\t\t//$scope.$apply();\n\t    };\n\n\t    //@ Count my entities\n\t    $scope.howMany = (table,data) => {\n\n\t\tvar data        = data || {owner: $scope.storage.user.username};\n\t\tdata            = (data)?$scope.app.json(data):{};\n\t\tdata.table      = table || 'entities';\n\t\tdata.command    = \"count\";\n\t\tdata.token      =  {};\n\n\t\t$scope.cgi.ajax( data )\n\t\t.then( (r) => {   \n\t\t    \n\t\t    r = $scope.app.json(r);\n\n\t\t    if(r.response == 200){\n\n\t\t        if( mess ) {\n\t\t            $scope.app.UID(UID,(mess), \"success\");\n\t\t        }\n\t\t        \n\t\t        $scope.counted[data.table.toString().replace(/vw_/ig,'')] = r.data.message;\n\t\t        \n\t\t    }else{\n\n\t\t        //POSTGRESQL MATCHING\n\t\t        if(Array.isArray(r.data.message)){\n\t\t            var v =  r.data.message[2].match(/DETAIL:(.*)/)\n\t\t            if( v != undefined || v!=null ){\n\t\t                r.data.message = v[1];\n\t\t            }else{\n\t\t                r.data.message = r.data.message[2];\n\t\t            }\n\t\t        }else{\n\t\t            r.data.message;\n\t\t        }\n\t\t    \n\t\t        alert(`<center>${ r.data.message }</center>`);\n\t\t    }           \n\t\t    //$scope.$apply();\n\t\t})    \n\n\n\t    };\n\n\t// ----\n\n\n}])\n\n.directive(\"contenteditable\"\n,function() {\n    return {\n        restrict: \"A\",\n        require: \"ngModel\",\n        link: function(scope, element, attrs, ngModel) {\n\n            function read() {\n                ngModel.$setViewValue(element.html());\n            }\n\n            ngModel.$render = function() {\n                element.html(ngModel.$viewValue || \"\");\n            };\n\n            element.bind(\"blur keyup change\", function() {\n                scope.$apply(read);\n            });\n        }\n    };\n})\n\n//!CONFIGURE THE BNASIC PRE-RUNTIME STATES OF THE APPLICATION\n.config([\"ChartJsProvider\",function(ChartJsProvider){\n    \n    //@SET THE DEFAULT CHART COLORS\n    ChartJsProvider.setOptions({ colors : [ \"#4AB151\",'#387EF5', '#FF0000', '#DCDCDC', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'] });\n    // ChartJsProvider.setOptions({ colors : [ '#803690', '#00ADF9', '#DCDCDC', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'] });\n\n}]);\n"]}
{"version":3,"sources":["framify.es6"],"names":["angular","module","service","$http","remoteAuth","_this","this","app","url","window","location","href","split","filter","urlPortion","pathPos","scheme","ip","port","hlink","undefined","nav","redirect","loc","Promise","resolve","catch","e","console","log","dir","setVar","obj","key","val","str","_typeof","JSON","stringify","json","parse","jsonify","md5","test","CryptoJS","MD5","toString","md5ify","base64_encode","string","enc","Base64","Utf8","base64_encodify","base64_decode","encoded","base64_decodify","upload","data","destination","reject","fd","FormData","append","post","transformRequest","identity","headers","Content-Type","then","d","keys","Object","vals","forEach","v","push","clone","copy","constructor","attr","hasOwnProperty","parseInt","doNothing","getNumbers","firstOnly","arguments","length","numMatch","match","notify","notificationContent","notificationClass","notificationTimeout","position","UIkit","message","status","timeout","pos","countries","name","value","makeResponse","response","command","make_response","date","Date","newDate","toDateString","new_date","isoDate","format","iso_date","getIsoDate","get_iso_date","toIsoDate","dObj","to_iso_date","dateTime","date_time","getDateTime","get_date_time","toDateTime","to_date_time","monthNum","month_num","getMonthNum","get_month_num","toMonthNum","to_month_num","$month_array","month_array","month_o_array","id","ajax","method","target","$","dataType","Access-Control-Allow-Origin","getJSON","replace","get_json","cgi","loadify","duration","modal","blockUI","isNaN","setTimeout","hide","alert","title","cb","confirm","prompt","label","placeholder","userValue","isemail","isEmail","prospective_email","isusername","isUsername","prospective_username","ispassword","isPassword","prospective_password","isnumber","isNumber","prospective_number","istelephone","isTelephone","prospective_telephone","isdateTime","isDateTime","prospective_date","matches","val1","val2","num2month","month_number","unique","array_","Array","isArray","ret_array","a","b","reverse","removeDuplicates","remove_duplicates","count","searchParam","arrayObject","i","cnt","searchVal","success","error","get","params","put","delete","db","mail","handler","remote_handler","remoteHandler","_this2","socket","start","framify_sms_server_url","io","connect","on","stop","disconnect","SMS","smsData","emit","oneSMS","tel","mess","apiKey","telephone","password","bulkSMS","contacts","element","$localStorage","auth","SetAuth","AuthToken","defaults","common","Authorization","framify_user","token","set_auth","Register","credentials","register","Login","login","Logout","logout","r_auth","setUrl","accessUrl","set_url","run","$rootScope","$state","sms","storage","frame","path","absUrl","admin","relocate","go","is_admin","isAdmin","isRoot","access","changeAdmin","bool","reset","user","controller","$scope","current","ui","search","links","hasFilters","openFilters","reinit","exec","f","shift","set_var","secure","securityFunc","parts","part","indexOf","add","fetch","fetched","counted","logedin","appRedirect","partialState","app_redirect","goTo","completeState","go_to","unwanted","removeUnwanted","insertObj","insertKey","remove_unwanted","table","cryptFields","_","extras","cryptField","r","specifics","update","do_fetch","$apply","_ret2","promiseArr","tData","tkey","all","del","username","adminLogin","admin_name","islogedin","authorize","deauthorize","custom","cFetched","sort","keyname","sortKey","sanitize","dPush","d_push","dPushify","d_pushify","currmoin","setMoin","moin","set_moin","delParams","mainObj","removeKeys","del_params","addExtras","targetObj","extrasObj","subStrings","k","x","fg","add_extras","target_k","extras_k","target_v","extras_v","target_removeKeys","extras_removeKeys","target_subStrings","extras_subStrings","extras_keys","target_keys","entity","showService","serviceData","available","showEntity","howMany","owner","me","setData","handlers","r_handlers","regSuccess","reg_success","loginSuccess","login_success","regError","reg_error","reg_rror","loginError","login_error","isLogedIn","is_loged_in","directive","restrict","require","link","scope","attrs","ngModel","read","$setViewValue","html","$render","$viewValue","bind","$parse","model","fileModel","modelSetter","assign","files","config","ChartJsProvider","setOptions","colors"],"mappings":"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","file":"../framify.min.js","sourcesContent":["angular.module('framify.js', [\n    'ui.router'\n    ,'framify-paginate'\n    ,'ngStorage'\n    ,'jsonFormatter'\n    ,'chart.js'\n    ,'ngAria'\n    ,'ngMaterial'\n    ,'ngMessages'\n])\n\n//@ Application running essentials\n.service(\"app\"\n,['$http','remoteAuth'\n,function($http,remoteAuth) {\n\n        var app = this;\n\n        //!SETUP THE APPLICATION BASICS\n        var url = window.location.href.split('/').filter(function(urlPortion) { return (urlPortion != '' && urlPortion != 'http:' && urlPortion != 'https:') });\n        let pathPos = window.location.href.split('/').filter(function(urlPortion) { return (urlPortion != '' ) });\n        \n        //! APP CONFIGURATIONS\n        this.scheme = pathPos[0];\n        this.ip     = url[0].split(':')[0];\n        this.port   = url[0].split(':')[1];\n        this.hlink  = `${this.scheme}//${this.ip}${( ( this.port != undefined ) ? \":\" + this.port : \"\" )}`;\n\n        //!APPLICATION URL\n        //this.url = \"http://41.89.162.4:3000\";\n        this.url = this.hlink;\n\n        var hlink = this.hlink;\n        \n        this.nav = [];\n\n        //@Perform simple redirects\n        this.redirect = (loc) => {\n            if (loc) {\n                window.location = loc\n            } else {\n                window.location = \"/\";\n            }\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the redirect function.\")\n                console.dir(e)\n            })\n        };\n\n        this.setVar     = ( obj, key, val ) => {\n\n            obj         = obj || {};\n            obj[key]    = val;\n            return obj;\n\n        };\n\n\n        //* CONDITIONALLY TRANSFORM TO STRING\n        this.str    = (obj) => (typeof(obj) === \"object\") ? JSON.stringify(obj) : obj;\n        this.stringify = ( obj ) => Promise.resolve( app.str(obj) );\n\n        //* CONDITIONALLY TRANSFORM TO JSON\n        this.json   = (obj) => (typeof(obj) === \"object\") ? obj : JSON.parse(obj);\n        this.jsonify = (obj) => Promise.resolve( app.json(obj) )\n\n        //* CONDITIONALLY RETURN AN MD5 HASH\n        this.md5    = (str) => (/^[a-f0-9]{32}$/gm.test(str)) ? str : CryptoJS.MD5(str).toString();\n        this.md5ify = (str) => Promise.resolve( app.md5(str) );\n\n        //BASE64 ENCODE A STRING\n        this.base64_encode = (string) => CryptoJS.enc.Base64.stringify( CryptoJS.enc.Utf8.parse(string) );\n        this.base64_encodify    = (string) => Promise.resolve( app.base64_encode( string ) );\n\n        //BASE64 DECODE A STRING\n        this.base64_decode = (encoded) => (CryptoJS.enc.Base64.parse(encoded)).toString(CryptoJS.enc.Utf8);\n        this.base64_decodify  = (encoded) => Promise.resolve( app.base64_decode(encoded) );\n\n        //@ THE OFFICIAL FILE UPLOAD SERVICE\n        this.upload = (data, destination) => {\n\n            return new Promise( (resolve ,reject) => {\n                 //* create a formdata object\n                const fd = new FormData();\n\n                //* add the defined keys to the formdata object\n                for (var key in data) {\n                    fd.append(key, data[key]);\n                };\n\n                //* post the data to the /upload route of the running server\n                $http.post(`${hlink}/upload/${destination}`, fd, {\n\n                    transformRequest: angular.identity,\n\n                    //* ensure automatic content-type settng\n                    headers: { 'Content-Type': undefined }\n\n                }).then(d=>resolve(d));\n            });\n\n        };\n\n        //@ GET THE KEYS FROM AN OBJECT\n        this.keys   = obj=>Object.keys(obj);\n\n        this.vals   = obj => {\n            let vals =  [];\n            Object.keys(obj)\n            .forEach(v=>{\n                vals.push(obj[v])\n            })\n            return vals\n        }\n\n        //@ CREATE A COPY OF AN OBJECT\n        this.clone = (obj) => {\n\n            //* ensure that the object is defined\n            if (null == obj || \"object\" != typeof obj) return obj;\n\n            //* call the object constructor prototype\n            var copy = obj.constructor();\n\n            //* clone all attributes of the parent object into a new object\n            for (var attr in obj) {\n                if (obj.hasOwnProperty(attr)) copy[attr] = ( /^[0-9]+$/.test(obj[attr] ) )? parseInt(obj[attr]) : obj[attr] ;\n            }\n\n            //* return the newly created object\n            return copy;\n\n        };\n\n\n        //! PARSE AN INTEGER\n        this.parseInt = str => parseInt(str);\n\n        //! EMPTY CALLBACK\n        this.doNothing = () => {\n            return Promise.resolve()\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the donothing function.\")\n                console.dir(e)\n            });\n        };\n\n        //@ FIND NUMBERS IN A STRING\n        this.getNumbers = (str,firstOnly=true) => {\n            let numMatch = /\\d+/g\n            return (firstOnly) ? str.toString().match(numMatch)[0] : str.toString().match(numMatch) ;\n        };\n\n        //! SET A NOTIFICATION \n        this.notify = (notificationContent ,notificationClass ,notificationTimeout,position) => {\n\n            UIkit.notify({\n                message :`<center>${(notificationContent|| 'A blank notification was triggered.')}</center>`,\n                status  : notificationClass || 'info',\n                timeout : notificationTimeout || 6000,\n                pos     : 'top-center' || position\n            });\n\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.dir(e)\n            });\n            \n        };\n\n        var notify = this.notify;\n\n        this.countries = [{ name: \"Afghanistan\", value: \"1\" }, { name: \"Albania\", value: \"2\" }, { name: \"Algeria\", value: \"3\" }, { name: \"American Samoa\", value: \"4\" }, { name: \"Andorra\", value: \"5\" }, { name: \"Angola\", value: \"6\" }, { name: \"Anguilla\", value: \"7\" }, { name: \"Antarctica\", value: \"8\" }, { name: \"Antigua and Barbuda\", value: \"9\" }, { name: \"Argentina\", value: \"10\" }, { name: \"Armenia\", value: \"11\" }, { name: \"Aruba\", value: \"12\" }, { name: \"Australia\", value: \"13\" }, { name: \"Austria\", value: \"14\" }, { name: \"Azerbaijan\", value: \"15\" }, { name: \"Bahamas\", value: \"16\" }, { name: \"Bahrain\", value: \"17\" }, { name: \"Bangladesh\", value: \"18\" }, { name: \"Barbados\", value: \"19\" }, { name: \"Belarus\", value: \"20\" }, { name: \"Belgium\", value: \"21\" }, { name: \"Belize\", value: \"22\" }, { name: \"Benin\", value: \"23\" }, { name: \"Bermuda\", value: \"24\" }, { name: \"Bhutan\", value: \"25\" }, { name: \"Bolivia\", value: \"26\" }, { name: \"Bosnia and Herzegowina\", value: \"27\" }, { name: \"Botswana\", value: \"28\" }, { name: \"Bouvet Island\", value: \"29\" }, { name: \"Brazil\", value: \"30\" }, { name: \"British Indian Ocean Territory\", value: \"31\" }, { name: \"Brunei Darussalam\", value: \"32\" }, { name: \"Bulgaria\", value: \"33\" }, { name: \"Burkina Faso\", value: \"34\" }, { name: \"Burundi\", value: \"35\" }, { name: \"Cambodia\", value: \"36\" }, { name: \"Cameroon\", value: \"37\" }, { name: \"Canada\", value: \"38\" }, { name: \"Cape Verde\", value: \"39\" }, { name: \"Cayman Islands\", value: \"40\" }, { name: \"Central African Republic\", value: \"41\" }, { name: \"Chad\", value: \"42\" }, { name: \"Chile\", value: \"43\" }, { name: \"China\", value: \"44\" }, { name: \"Christmas Island\", value: \"45\" }, { name: \"Cocos (Keeling) Islands\", value: \"46\" }, { name: \"Colombia\", value: \"47\" }, { name: \"Comoros\", value: \"48\" }, { name: \"Congo\", value: \"49\" }, { name: \"Congo, the Democratic Republic of the\", value: \"50\" }, { name: \"Cook Islands\", value: \"51\" }, { name: \"Costa Rica\", value: \"52\" }, { name: \"Cote d\\'Ivoire\", value: \"53\" }, { name: \"Croatia (Hrvatska)\", value: \"54\" }, { name: \"Cuba\", value: \"55\" }, { name: \"Cyprus\", value: \"56\" }, { name: \"Czech Republic\", value: \"57\" }, { name: \"Denmark\", value: \"58\" }, { name: \"Djibouti\", value: \"59\" }, { name: \"Dominica\", value: \"60\" }, { name: \"Dominican Republic\", value: \"61\" }, { name: \"East Timor\", value: \"62\" }, { name: \"Ecuador\", value: \"63\" }, { name: \"Egypt\", value: \"64\" }, { name: \"El Salvador\", value: \"65\" }, { name: \"Equatorial Guinea\", value: \"66\" }, { name: \"Eritrea\", value: \"67\" }, { name: \"Estonia\", value: \"68\" }, { name: \"Ethiopia\", value: \"69\" }, { name: \"Falkland Islands (Malvinas)\", value: \"70\" }, { name: \"Faroe Islands\", value: \"71\" }, { name: \"Fiji\", value: \"72\" }, { name: \"Finland\", value: \"73\" }, { name: \"France\", value: \"74\" }, { name: \"France Metropolitan\", value: \"75\" }, { name: \"French Guiana\", value: \"76\" }, { name: \"French Polynesia\", value: \"77\" }, { name: \"French Southern Territories\", value: \"78\" }, { name: \"Gabon\", value: \"79\" }, { name: \"Gambia\", value: \"80\" }, { name: \"Georgia\", value: \"81\" }, { name: \"Germany\", value: \"82\" }, { name: \"Ghana\", value: \"83\" }, { name: \"Gibraltar\", value: \"84\" }, { name: \"Greece\", value: \"85\" }, { name: \"Greenland\", value: \"86\" }, { name: \"Grenada\", value: \"87\" }, { name: \"Guadeloupe\", value: \"88\" }, { name: \"Guam\", value: \"89\" }, { name: \"Guatemala\", value: \"90\" }, { name: \"Guinea\", value: \"91\" }, { name: \"Guinea-Bissau\", value: \"92\" }, { name: \"Guyana\", value: \"93\" }, { name: \"Haiti\", value: \"94\" }, { name: \"Heard and Mc Donald Islands\", value: \"95\" }, { name: \"Holy See (Vatican City State)\", value: \"96\" }, { name: \"Honduras\", value: \"97\" }, { name: \"Hong Kong\", value: \"98\" }, { name: \"Hungary\", value: \"99\" }, { name: \"Iceland\", value: \"100\" }, { name: \"India\", value: \"101\" }, { name: \"Indonesia\", value: \"102\" }, { name: \"Iran (Islamic Republic of)\", value: \"103\" }, { name: \"Iraq\", value: \"104\" }, { name: \"Ireland\", value: \"105\" }, { name: \"Israel\", value: \"106\" }, { name: \"Italy\", value: \"107\" }, { name: \"Jamaica\", value: \"108\" }, { name: \"Japan\", value: \"109\" }, { name: \"Jordan\", value: \"110\" }, { name: \"Kazakhstan\", value: \"111\" }, { name: \"Kenya\", value: \"112\" }, { name: \"Kiribati\", value: \"113\" }, { name: \"Korea, Democratic People\\'s Republic of\", value: \"114\" }, { name: \"Korea, Republic of\", value: \"115\" }, { name: \"Kuwait\", value: \"116\" }, { name: \"Kyrgyzstan\", value: \"117\" }, { name: \"Lao, People\\'s Democratic Republic\", value: \"118\" }, { name: \"Latvia\", value: \"119\" }, { name: \"Lebanon\", value: \"120\" }, { name: \"Lesotho\", value: \"121\" }, { name: \"Liberia\", value: \"122\" }, { name: \"Libyan Arab Jamahiriya\", value: \"123\" }, { name: \"Liechtenstein\", value: \"124\" }, { name: \"Lithuania\", value: \"125\" }, { name: \"Luxembourg\", value: \"126\" }, { name: \"Macau\", value: \"127\" }, { name: \"Macedonia, The Former Yugoslav Republic of\", value: \"128\" }, { name: \"Madagascar\", value: \"129\" }, { name: \"Malawi\", value: \"130\" }, { name: \"Malaysia\", value: \"131\" }, { name: \"Maldives\", value: \"132\" }, { name: \"Mali\", value: \"133\" }, { name: \"Malta\", value: \"134\" }, { name: \"Marshall Islands\", value: \"135\" }, { name: \"Martinique\", value: \"136\" }, { name: \"Mauritania\", value: \"137\" }, { name: \"Mauritius\", value: \"138\" }, { name: \"Mayotte\", value: \"139\" }, { name: \"Mexico\", value: \"140\" }, { name: \"Micronesia, Federated States of\", value: \"141\" }, { name: \"Moldova, Republic of\", value: \"142\" }, { name: \"Monaco\", value: \"143\" }, { name: \"Mongolia\", value: \"144\" }, { name: \"Montserrat\", value: \"145\" }, { name: \"Morocco\", value: \"146\" }, { name: \"Mozambique\", value: \"147\" }, { name: \"Myanmar\", value: \"148\" }, { name: \"Namibia\", value: \"149\" }, { name: \"Nauru\", value: \"150\" }, { name: \"Nepal\", value: \"151\" }, { name: \"Netherlands\", value: \"152\" }, { name: \"Netherlands Antilles\", value: \"153\" }, { name: \"New Caledonia\", value: \"154\" }, { name: \"New Zealand\", value: \"155\" }, { name: \"Nicaragua\", value: \"156\" }, { name: \"Niger\", value: \"157\" }, { name: \"Nigeria\", value: \"158\" }, { name: \"Niue\", value: \"159\" }, { name: \"Norfolk Island\", value: \"160\" }, { name: \"Northern Mariana Islands\", value: \"161\" }, { name: \"Norway\", value: \"162\" }, { name: \"Oman\", value: \"163\" }, { name: \"Pakistan\", value: \"164\" }, { name: \"Palau\", value: \"165\" }, { name: \"Panama\", value: \"166\" }, { name: \"Papua New Guinea\", value: \"167\" }, { name: \"Paraguay\", value: \"168\" }, { name: \"Peru\", value: \"169\" }, { name: \"Philippines\", value: \"170\" }, { name: \"Pitcairn\", value: \"171\" }, { name: \"Poland\", value: \"172\" }, { name: \"Portugal\", value: \"173\" }, { name: \"Puerto Rico\", value: \"174\" }, { name: \"Qatar\", value: \"175\" }, { name: \"Reunion\", value: \"176\" }, { name: \"Romania\", value: \"177\" }, { name: \"Russian Federation\", value: \"178\" }, { name: \"Rwanda\", value: \"179\" }, { name: \"Saint Kitts and Nevis\", value: \"180\" }, { name: \"Saint Lucia\", value: \"181\" }, { name: \"Saint Vincent and the Grenadines\", value: \"182\" }, { name: \"Samoa\", value: \"183\" }, { name: \"San Marino\", value: \"184\" }, { name: \"Sao Tome and Principe\", value: \"185\" }, { name: \"Saudi Arabia\", value: \"186\" }, { name: \"Senegal\", value: \"187\" }, { name: \"Seychelles\", value: \"188\" }, { name: \"Sierra Leone\", value: \"189\" }, { name: \"Singapore\", value: \"190\" }, { name: \"Slovakia (Slovak Republic)\", value: \"191\" }, { name: \"Slovenia\", value: \"192\" }, { name: \"Solomon Islands\", value: \"193\" }, { name: \"Somalia\", value: \"194\" }, { name: \"South Africa\", value: \"195\" }, { name: \"South Georgia and the South Sandwich Islands\", value: \"196\" }, { name: \"South Sudan\", value: \"197\" }, { name: \"Spain\", value: \"198\" }, { name: \"Sri Lanka\", value: \"199\" }, { name: \"St. Helena\", value: \"200\" }, { name: \"St. Pierre and Miquelon\", value: \"201\" }, { name: \"Sudan\", value: \"202\" }, { name: \"Suriname\", value: \"203\" }, { name: \"Svalbard and Jan Mayen Islands\", value: \"204\" }, { name: \"Swaziland\", value: \"205\" }, { name: \"Sweden\", value: \"206\" }, { name: \"Switzerland\", value: \"207\" }, { name: \"Syrian Arab Republic\", value: \"208\" }, { name: \"Taiwan, Province of China\", value: \"209\" }, { name: \"Tajikistan\", value: \"210\" }, { name: \"Tanzania, United Republic of\", value: \"211\" }, { name: \"Thailand\", value: \"212\" }, { name: \"Togo\", value: \"213\" }, { name: \"Tokelau\", value: \"214\" }, { name: \"Tonga\", value: \"215\" }, { name: \"Trinidad and Tobago\", value: \"216\" }, { name: \"Tunisia\", value: \"217\" }, { name: \"Turkey\", value: \"218\" }, { name: \"Turkmenistan\", value: \"219\" }, { name: \"Turks and Caicos Islands\", value: \"220\" }, { name: \"Tuvalu\", value: \"221\" }, { name: \"Uganda\", value: \"222\" }, { name: \"Ukraine\", value: \"223\" }, { name: \"United Arab Emirates\", value: \"224\" }, { name: \"United Kingdom\", value: \"225\" }, { name: \"United States\", value: \"226\" }, { name: \"United States Minor Outlying Islands\", value: \"227\" }, { name: \"Uruguay\", value: \"228\" }, { name: \"Uzbekistan\", value: \"229\" }, { name: \"Vanuatu\", value: \"230\" }, { name: \"Venezuela\", value: \"231\" }, { name: \"Vietnam\", value: \"232\" }, { name: \"Virgin Islands (British)\", value: \"233\" }, { name: \"Virgin Islands (U.S.)\", value: \"234\" }, { name: \"Wallis and Futuna Islands\", value: \"235\" }, { name: \"Western Sahara\", value: \"236\" }, { name: \"Yemen\", value: \"237\" }, { name: \"Yugoslavia\", value: \"238\" }, { name: \"Zambia\", value: \"239\" }, { name: \"Zimbabwe\", value: \"240\" }];\n\n\n        //! BASIC FRAMIFY FORMAT RESPONSE FORMATTER\n        this.makeResponse = (response ,message ,command) => {\n\n            return {\n                response: response,\n                data: {\n                    message: message,\n                    command: command\n                }\n            };\n\n        };\n        this.make_response  = this.makeResponse;\n\n        //!DATE FORMATERS\n        //* date object     \n        this.date           = () => new Date();\n\n        //* simple date\n        this.newDate        = () => new Date().toDateString();\n        this.new_date       = this.newDate;\n\n        //* isodate\n        this.isoDate        = () => new Date().format('isoDate');\n        this.iso_date       = this.isoDate;\n\n        //* get the isoDate of the specified date\n        this.getIsoDate     = (d) => new Date(d).format('isoDate');\n        this.get_iso_date   = this.getIsoDate;\n\n        //* get the isoDate of a date object\n        this.toIsoDate      = dObj => dObj.format('isoDate');\n        this.to_iso_date    = this.toIsoDate;\n\n        //* custom datetime\n        this.dateTime       = () => new Date().format('dateTime');\n        this.date_time      = this.dateTime;\n\n        //* set the date in the custom datetime format\n        this.getDateTime    = d => new Date(d).format('dateTime');\n        this.get_date_time  = this.getDateTime;\n\n        //* Convert a date to the dd-mm-yyyy hh:mm format\n        this.toDateTime     = dObj => dObj.format('dateTime');\n        this.to_date_time   = this.toDateTime;\n\n        //* month number\n        this.monthNum       = () => new Date().format('monthNum');\n        this.month_num      = this.monthNum;\n\n        //* get month number of the specified date\n        this.getMonthNum    = d => new Date(d).format('monthNum');\n        this.get_month_num  = this.getMonthNum;\n\n        //* get date objects' month number\n        this.toMonthNum     = dObj => dObj.format('monthNum');\n        this.to_month_num   = this.toMonthNum;\n\n        //* MONTHS ARRAY\n        var $month_array = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        this.month_array = $month_array;\n        this.month_o_array = [\n            { id: 0, name: \"January\" }\n            ,{ id: 1, name: \"February\" }\n            ,{ id: 2, name: \"March\" }\n            ,{ id: 3, name: \"April\" }\n            ,{ id: 4, name: \"May\" }\n            ,{ id: 5, name: \"June\" }\n            ,{ id: 6, name: \"July\" }\n            ,{ id: 7, name: \"August\" }\n            ,{ id: 8, name: \"September\" }\n            ,{ id: 9, name: \"October\" }\n            ,{ id: 10, name: \"November\" }\n            ,{ id: 11, name: \"December\" }\n        ];\n\n        // this.printMonths = () =>  $month_o_array\n        //                     .reduce((mobj,m)=>{\n        //                         mobj[m] = m   \n        //                     },{})\n        //                     .filter(m=>m)\n\n        //! HANDLE APPLICATION SERVICE REQUESTS\n        this.ajax = (method ,target ,data) => {\n\n            return $.ajax({\n                method: method || \"POST\"\n                ,url: target\n                ,data: data\n                ,dataType: 'jsonp'\n               ,headers: {'Access-Control-Allow-Origin': \"*\" }\n            });\n           \n        };\n\n        //!HANDLE JSON REQUESTS \n        this.getJSON = (target) => {\n\n            return $.getJSON( target.replace(/callback=?/ig,\"\") + '?callback=?');\n\n        };\n        this.get_json\t= this.getJSON;\n\n        //! HANDLE CORS CALLS WITH jsonp ENABLED\n        this.cgi = (method ,url ,data) => {\n\n            return $.ajax({\n                method: method || \"GET\"\n                ,url: url\n                ,data: data\n                ,dataType: 'jsonp'\n                ,headers: {'Access-Control-Allow-Origin': \"*\" }\n            });\n\n        };\n\n        //!HANDLE THE DISPLAY OF DIALOG BOXES\n\n        //* SHOW A \"LOADING\" ELEMENT\n        this.loadify = (duration, message) => {\n\n            return new Promise( (resolve,reject) => {\n                let modal = UIkit.modal.blockUI('<center><i style=\"color:blue;\" class=\"fa fa fa-spinner fa-pulse fa-5x fa-fw\"></i></center>'+( (message)?`<center><br>${message}</center>`:\"\" ) );\n                if( duration && !isNaN(duration)){\n                    setTimeout(()=>{\n                         modal.hide();\n                         resolve(true); \n                    }, duration ) ;\n                }else{\n                    resolve(modal);\n                }\n                \n            });\n\n        };\n        \n        //*GENERATE A CUSTOM ALERT DIALOG\n        this.alert = (title ,message ,cb) => {\n\n            UIkit.modal.alert(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Notice'}</font>\n            <hr>\n            <center>${message||'</center><font color=red font-weight=bold; font-size=2em>Oops!</font><br>False alarm!<center>'}</center>`);\n\n            if( cb && typeof(cb) == \"function\" ){\n                return Promise.resolve(cb(message))\n                .catch(function(e){\n                   console.log(\"Encountered an error when processing the alert function.\")\n                   console.dir(e)\n               });\n            }else{\n                return Promise.resolve(true)\n                .catch(function(e){\n                   console.log(\"Encountered an error when processing the alert2 function.\")\n                   console.dir(e)\n               });\n            }\n\n        };\n            \n        //*GENERATE A CUSTOM CONFIRM DIALOG\n        this.confirm = ( title ,message ,cb ) => {\n            \n            return new Promise( (resolve) => {\n\n                UIkit.modal.confirm(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Confirmation required.'}</font>\n                <hr>\n                <center>${message}</center>`,()=>{\n                    if(cb && typeof(cb) == \"function\"){\n                        resolve(cb(message));\n                    }else{\n                        resolve(true);\n                    }\n                });\n\n            });           \n            \n        };    \n            \n        //*GENERATE A CUSTOM PROMPT DIALOG\n        this.prompt = function( title ,label ,placeholder ,cb){\n          \n          return new Promise( (resolve) => {\n\n            UIkit.modal.prompt(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Info required'}</font>\n            <hr>\n            ${label||'email'} :`, (placeholder||''), (userValue) => { \n                if(cb && typeof(cb) == \"function\"){\n                    resolve(cb(userValue)) \n                }else{\n                    resolve(userValue);\n                }\n            });\n\n          }); \n                      \n        };\n\n\n        //!BASIC VALIDATION METHODS\n\n        //*VALIDATE EMAIL ADDRESSES\n        this.isemail = /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/;\n        this.isEmail = prospective_email => this.isemail.test(prospective_email);\n\n        //*VALIDATE USERNAMES\n        this.isusername = /^[a-z0-9_-]{4,16}$/;\n        this.isUsername = prospective_username => this.isusername.test(prospective_username);\n\n        //*VALIDATE PASSWORDS\n        this.ispassword = /^[-@./\\!\\$\\%\\^|#&,+\\w\\s]{6,50}$/;\n        this.isPassword = prospective_password => this.ispassword.test(prospective_password);\n\n        //* VALIDATE NUMBERS\n        this.isnumber = /^-{0,1}\\d*\\.{0,1}\\d+$/;\n        this.isNumber = prospective_number => this.isnumber.test(prospective_number);\n\n        //*VALIDATE TELEPHONE NUMBERS\n        this.istelephone = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n        this.isTelephone = prospective_telephone => this.istelephone.test(prospective_telephone);\n\n        //*VALIDATE DATETIME VALUES IN THE FORMAT  DD-MM-YYYY HH:MM e.g 29-02-2013 22:16\n        this.isdateTime = /^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-(19|20)[0-9]{2} (2[0-3]|[0-1][0-9]):[0-5][0-9]$/;\n        this.isDateTime = prospective_date=>this.isdateTime.test( prospective_date );\n\n        //*VALIDATE WHETHER TWO GIVEN VALUES MATCH\n        this.matches = (val1, val2) => (val1 === val2);\n\n        //*TRANFORM NUMBER TO MONTH\n        this.num2month = (month_number) => (!isNaN(month_number) && (month_number <= 11) )?$month_array[month_number]:\"Invalid Month\";\n\n        //*REMOVE DUPLICATES FROM ARRAY\n        this.unique = (array_) => {\n\n           if( !Array.isArray(array_) ){\n               app.notify('Could not remove duplicates from a non array object','danger');\n               return array_;\n           }else{\n\n               //* create a new array\n                var ret_array = new Array();\n\n                //* loop through the entire length of the provided array\n                for (var a = array_.length - 1; a >= 0; a--) {\n                    \n                    //* loop through the array once more (for re-verification)\n                    for (var b = array_.length - 1; b >= 0; b--) {\n                        //* de-populate duplicates in the array\n                        if (array_[a] == array_[b] && a != b) {\n                            delete array_[b];\n                        }\n                    };\n                    \n                    //* store the relevant values\n                    if (array_[a] != undefined){\n                        ret_array.push(array_[a]);\n                    }                    \n\n                };\n                //* return the reversed array (to avoid distortion from the initial)\n                return ret_array.reverse();\n\n           }\n        };\n\n        this.removeDuplicates = this.unique;\n        this.remove_duplicates = this.removeDuplicates;\n\n        //* COUNT OCCURANCES IN AN ARRAY\n        this.count = (searchParam ,arrayObject) => {\n \n\n            //@ Ensure that the Object to be searched is an array\n            if( Array.isArray( arrayObject ) ){\n\n                //@ Handle Multiple Item Searches\n                if(  Array.isArray(searchParam)  ){\n\n                    //@ The Required placeholder objects\n                    var i   = 0;\n                    var cnt = [];\n\n                    //@ Loop through each item in the search array\n                    for( var searchVal in searchParam  ){\n\n                        //@ Instantiate the counter object for this particular Item\n                        cnt[i]  =   0;\n\n                        //@ Loop through the array searching for the item\n                        for( var v in arrayObject ){\n\n                            //@ If the item is found, \n                            if( searchParam[searchVal] === arrayObject[v] ){\n                              \n                                //@ Increment the number of instances in the 'found' Array\n                                cnt[i]  = ( isNaN(cnt[i]) ) ? 1 : cnt[i]+=1 ; \n\n                            } \n\n                        }\n                        \n                        //@ Move to the next Item \n                        i++;\n\n                    }\n                    \n                    //@ Return the result to the client\n                    return cnt;\n\n\n                //@ Handle Single Item searches\n                }else{ \n\n                    //@ Instantiate the neede placeholders\n                    var cnt = 0;\n\n                    //@ Loop through the Array searching for the value\n                    for(var v in arrayObject) {\n\n                        //@ When a match is found\n                        if (searchParam === arrayObject[v]) {\n\n                            //@ Increment the number of occurences\n                            cnt += 1;\n\n                        }\n\n                    }\n\n                    //@ Return the 'number of occurences'\n                    return cnt;\n\n                }\n\n            //@ Object is not an array\n            }else{\n\n                app.notify(\"The object to perform an array count on is not an Array.\",\"danger\");\n\n            }\n\n            \n\n        };\n\n\n        //@ POST HTTP DATA HANDLER  \n        this.post   = ( destination, data ) => {\n\n            return new Promise( (resolve,reject) => {\n\n                $http.post(destination,data)\n                .success( resolve )\n                .error( reject )\n\n            });\n\n        };\n\n        //@ GET HTTP DATA HANDLER  \n        this.get   = ( destination, data ) => {\n\n            return new Promise( (resolve,reject) => {\n\n                $http.get(destination, {\n                        params: data\n                })\n                .success( resolve )\n                .error( reject )\n\n            });\n\n        };\n\n        //@ PUT HTTP DATA HANDLER \n        this.put   = ( destination, data ) => {\n\n            return new Promise( (resolve,reject) => {\n\n                $http.put(destination,data)\n                .success( resolve )\n                .error( reject )\n\n            });\n\n        }; \n\n\n        //@ DELETE HTTP DATA HANDLER \n        this.delete   = ( destination, data ) => {\n\n            return new Promise( (resolve,reject) => {\n\n                $http.delete(destination,{ \n                    params: data\n                })\n                .success( resolve )\n                .error( reject )\n\n            });\n\n        };\n\n        //@ Handle background calls to the web server for database integration\n        this.db = function(data,destination){\n\n             return new Promise( (resolve,reject) => {\n\n                destination = ( destination ) ? destination : `${remoteAuth.url}/php`;\n                $http.get(  destination , {\n                        params: data\n                })\n                .success( resolve )\n                .error( reject )\n\n            });\n\n        };\n\n        //@ Handle email sending requests\n        this.mail = function(data,destination){\n\n             return new Promise( (resolve,reject) => {\n\n                destination = ( destination ) ? destination : `${remoteAuth.url}/sendMail`;\n                $http.post( destination ,data )\n                .success( resolve )\n                .error( reject )\n\n            });\n\n        };\n\n        //@ Generic Process Event Handler\n        this.handler = function( response ){\n\n            response = ( response.response ) ? response : response.data;\n\n            if(response.response == 200 ){\n                app.alert(\"<font color=green>Done</font>\",app.str( response.data.message ) );\n            }else{\n                app.alert(`<font color=red>Failed</font> ( ${response.response} Error )`,app.str( response.data.message ) );\n            }\n\n        };\n        \n        //@ Generic Process Remote Event Handler\n        this.remote_handler = function( response ){\n           \n        \tapp.alert(\"<font color=blue>Data Response</font>\",app.str( app.str( response ) ) );\n\n        };\n        this.remoteHandler \t= this.remote_handler;\n\n\n\n       \n\n}])\n\n//@ The BASIC sms sending application service\n.service(\"sms\" \n,['app','remoteAuth'\n,function(app,remoteAuth) {\n\n        /**\n         * This angular service allows for you to easily send SMS messages conveniently using bixbyte's default SMS gateway platform\n         * \n         * It allows the use of your *Framify SMS* android phone application to send simple SMS messages. \n         * \n         * You can easily extend it as you will since the socket connection to the server can be hooked to as \"sms.socket\"\n         */\n\n        //@ SMS BASIC APPLICATION INITIALIZATION\n\n        //@ Create a locally accessible copy of the 'sms' service\n        var sms = this; \n\n        //@ Definition of the socket object\n        this.socket;\n        var socket = this.socket;\n\n        //@ The socket connection initiator object\n        this.start  = ( framify_sms_server_url ) => {\n\n            socket = io.connect( framify_sms_server_url || remoteAuth.url ); \n\n            socket.on(\"connect\", ()=>{\n                console.log(\"Successfully established a connection to the framify SMS gateway\");\n            });\n\n            socket.on(\"disconnect\", () => {\n                console.log(\"Dropped the framify SMS gateway connection.\")\n            });\n\n            socket.on(\"reconnect\", () => {\n                console.log(\"Re-established a connection to the SMS gateway.\")\n            })\n\n            return Promise.resolve( app.make_response( 200, \"Starting the SMS gateway\") )\n            .catch((e)=>{\n                console.log(\"There was a problem when starting the SMS relay service.\")\n                console.dir(e)\n            });\n\n        }\n\n        this.stop   = (  ) => {\n\n            //@ Disconnect any existing conections\n            if( socket ){\n\n                socket.disconnect();\n                console.log(\"Terminated all existing SMS gateway connections.\");\n\n            }\n            \n            //@ Nullify the existing object\n            socket = undefined;\n\n            return Promise.resolve( app.make_response( 200, \"Stoping the SMS gateway\") )\n            .catch((e)=>{\n                console.log(\"There was a problem when starting the SMS relay service\")\n                console.dir(e)\n            })\n\n        }\n\n        //@ SEND EXPRESS SMS'\n        this.SMS = (smsData) => {\n\n            //@ Ensure that the SMS service provision gateway is set\n            if( socket ){ \n\n                socket.emit(\"sendSMS\" ,smsData);\n                return Promise.resolve(true)\n                .catch(function(e){\n                    console.log(\"Encountered an error when processing the sms function.\")\n                    console.dir(e)\n                })\n\n            //@ Ask the user to initialize the sms service\n            }else{\n                \n                app.alert( \"<font  color=red>SMS SERVICE NOT STARTED</font>\", \"Framify failed to execute an SMS related command.<br>Reason: <code>The SMS service provider has not been defined.</code>\" )\n                return Promise.reject(false)\n                .catch(function(e){\n                    console.log(\"Encountered an error when processing the sms function.\")\n                    console.dir(e)\n                })\n\n            }\n\n                       \n        };\n\n        //@ SEND A SINGLE SMS\n        this.oneSMS = (tel ,mess ,apiKey) => {\n\n            //@ Ensure that the SMS service provision gateway is set\n            if( socket ){\n\n                var obj;\n                if (Array.isArray(tel)) {\n                    obj = tel;\n                } else {\n                    obj = {\n                        telephone: tel,\n                        message: mess,\n                        password: apiKey\n                    };\n                }\n\n                socket.emit(\"sendSMS\" ,obj);\n                return Promise.resolve(app.make_response( 200, \"Queued the SMS for sending\"))\n                .catch(function(e){\n                    console.log(\"Encountered an error when processing the sendsms function.\")\n                    console.dir(e)\n                });\n\n            //@ Ask the user to initialize the sms service\n            }else{\n                \n                app.alert( \"<font  color=red>SMS SERVICE NOT STARTED</font>\", \"Framify failed to execute an SMS related command.<br>Reason: <code>The SMS service provider has not been defined.</code>\" )\n                return Promise.reject(false)\n                .catch(function(e){\n                    console.log(\"Encountered an error when processing the sms function.\")\n                    console.dir(e)\n                })\n\n            }\n\n        };\n\n        //@ SEND BULK SMS MESSAGES\n        this.bulkSMS = (contacts ,data ,apiKey) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                //@ Ensure that the SMS service provision gateway is set\n                if( socket ){\n\n                    let obj = [];\n\n                    //* Ensure that the API key has been set\n                    if (!apiKey) {\n                        app.alert(\"<font style='weight:bold;color:red;'>ERROR</font>\",'<center>Failed to instantiate the SMS sending service before api Key definition.</center>');\n                    } else if (Array.isArray(contacts)) {\n\n                        //* handle an array of contacts\n                        contacts.forEach( (element) => {\n\n                            if (app.isTelephone(element)) {\n\n                                obj.push({\n                                    telephone: element,\n                                    message: data,\n                                    apiKey: apiKey\n                                });\n\n                            } else {\n\n                                app.notify('<center>Could not send an SMS message to the invalid number ' + element + '.</center>','danger');\n\n                            }\n\n                        }, this);\n\n                        socket.emit(\"sendSMS\", obj);\n                        resolve(app.make_response( 200, \"Queued the messages for sending.\"));\n\n                    } else {\n                        app.notify('<font style=\"weight:bold;color:white;\">Bulk SMS error.</font><br><center>You can only use the bulk SMS service with an array of telephone contacts</center>','danger');\n                    }\n\n                //@ Ask the user to initialize the sms service\n                }else{\n                    \n                    app.alert( \"<font  color=red>SMS SERVICE NOT STARTED</font>\", \"Framify failed to execute an SMS related command.<br>Reason: <code>The SMS service provider has not been defined.</code>\" )\n                    reject(app.make_response( 500, \"The SMS service is not started.\"));\n\n                }\n\n            });       \n           \n        };\n\n        // //@ SAMPLE SUCCESSFUL SMS SENDING INFORMATION HANDLER\n        // this.socket.on(\"trueSMS\", (data) => {\n        //     $scope.app.notify(\"The message has been conveyed.\");\n        // });\n\n}])\n\n//@ The basic incomplete networking service\n.service(\"cgi\" \n,[\nfunction() {\n\n    //Handle background calls to the web server for database integration\n    this.ajax = function(data){\n        return $.ajax({\n            method: \"GET\",\n            url: \"/php\",\n            data: data\n        });\n    };\n\n   //Handle the posting of emails via the mailgun api\n   this.mail = function(data){\n        return $.ajax({\n            method: \"POST\"\n            ,url: \"/sendMail\"\n            ,data: data\n        })\n    };\n\n}])\n\n//@@ The Authentication service\n.service('auth'\n,[ '$http','$localStorage'\n,function($http,$localStorage){\n\n   var auth = this;\n\n   auth.SetAuth     = function( AuthToken ){\n\n        return new Promise( function(resolve,reject){\n            \n            resolve( $http.defaults.headers.common.Authorization = AuthToken ||  ( $localStorage.framify_user ) ? $localStorage.framify_user.token : undefined );\n\n        });\n\n    };\n    auth.set_auth   = auth.SetAuth;\n\n     //@ Perform User Registration\n    auth.Register  = function( credentials ){\n\n        return new Promise( function( resolve,reject ){\n\n            $http.post('/auth/register', credentials )\n            .success(function(response){\n\n                if( response.response == 200 ){\n\n                    resolve( response.data.message )\n\n                }else{\n\n                    reject( response.data.message )\n\n                }\n\n            })\n            .error(function(response){\n                reject( JSON.stringify( ( ( response ) ? ( ( response.data )  ? response.data.message : response ) : response ) || \"Could not obtain a response from the server.\")  )\n            })\n\n        });\n\n    };\n    auth.register  = auth.Register;\n      \n    //@ Perform a User Login\n    auth.Login     = function( credentials ){\n\n        return new Promise( function( resolve,reject ){\n\n            $http.post('/auth/verify', credentials )\n            .success(function(response){\n\n                if( response.response == 200 ){\n\n                    $localStorage.framify_user   =  response.data.message ;\n\n                    auth.SetAuth( response.data.message.token );\n\n                    resolve( response.data.message )\n\n                }else{\n\n                    reject( response.data.message )\n\n                }\n\n            })\n            .error(function(response){\n                reject( JSON.stringify( ( ( response ) ? ( ( response.data )  ? response.data.message : response ) : response ) || \"Could not obtain a response from the server.\")  )\n            })\n\n        });\n\n    };\n    auth.login     = auth.Login;    \n\n    //@ Perform A User Logout\n    auth.Logout    = function( ){\n\n        return new Promise( function(resolve,reject){\n\n            delete $localStorage.framify_user;\n            auth.SetAuth(undefined)\n            .then(resolve)\n\n        });                         \n\n    };\n    auth.logout    = auth.Logout;   \n\n}])\n\n\n//@@ The Remote authentication service\n//@@ The Authentication service ChartJsProvider.service('auth'\n.service('remoteAuth'\n,[ '$http','$localStorage'\n,function($http,$localStorage){\n\n   var r_auth = this;\n\n   r_auth.url         = 'http://bixbyte.io'\n\n   r_auth.setUrl      = function( accessUrl ){\n\n       return new Promise( (resolve,reject) => {\n            \n            r_auth.url    = accessUrl;\n            console.log(`The remote access url has been set to ${accessUrl}` );\n            resolve(accessUrl);\n\n       })\n       \n   };\n   r_auth.set_url     = r_auth.setUrl;\n\n\n   r_auth.SetAuth     = function( AuthToken ){\n\n        return new Promise( function(resolve,reject){\n            \n            resolve( $http.defaults.headers.common.Authorization = AuthToken ||  ( $localStorage.framify_user ) ? $localStorage.framify_user.token : undefined );\n\n        });\n\n    };\n    r_auth.set_auth     = r_auth.SetAuth;\n\n     //@ Perform User Registration\n    r_auth.Register  = function( credentials ){\n\n        return new Promise( function( resolve,reject ){\n\n            $http.post(`${r_auth.url}/auth/register`, credentials )\n            .success(function(response){\n\n                if( response.response == 200 ){\n\n                    resolve( response.data.message )\n\n                }else{\n\n                    reject( response.data.message )\n\n                }\n\n            })\n            .error(function(response){\n                reject( JSON.stringify( ( ( response ) ? ( ( response.data )  ? response.data.message : response ) : response ) || \"Could not obtain a response from the server.\")  )\n            })\n\n        });\n\n    };\n    r_auth.register     = r_auth.Register;\n        \n    //@ Perform a User Login\n    r_auth.Login          = function( credentials ){\n\n        return new Promise( function( resolve,reject ){\n\n            $http.post(`${r_auth.url}/auth/verify`, credentials )\n            .success(function(response){\n\n                if( response.response == 200 ){\n\n                    $localStorage.framify_user   =  response.data.message ;\n\n                    r_auth.SetAuth( response.data.message.token );\n\n                    resolve( response.data.message )\n\n                }else{\n\n                    reject( response.data.message )\n\n                }\n\n            })\n            .error(function(response){\n                reject( JSON.stringify( ( ( response ) ? ( ( response.data )  ? response.data.message : response ) : response ) || \"Could not obtain a response from the server.\")  )\n            })\n\n        });\n\n    };\n    r_auth.login    = r_auth.Login;\n        \n    //@ Perform A User Logout\n    r_auth.Logout         = function( ){\n\n        return new Promise( function(resolve,reject){\n\n            delete $localStorage.framify_user;\n            r_auth.SetAuth(undefined)\n            .then(resolve)\n\n        });                         \n\n    };\n    r_auth.logout   = r_auth.Logout;\n\n}]) \n\n\n.run(\n[\"app\" ,\"cgi\" ,\"$rootScope\" ,\"$state\" ,\"$localStorage\" ,\"sms\" ,\"auth\",\"remoteAuth\",\"$http\"\n,function(app ,cgi ,$rootScope ,$state ,$localStorage ,sms ,auth, remoteAuth ,$http) {\n\n        //! INJECT THE LOCATION SOURCE TO THE ROOT SCOPE\n        $rootScope.location     = $state;\n\n        //! INJECT THE $localStorage instance into the root scope\n        $rootScope.storage      = $localStorage;\n\n        //! INJECT THE APPLICATION'S MAIN SERVICE TO THE ROOT SCOPE SUCH THAT ALL SCOPES MAY INHERIT IT\n        $rootScope.app          = app;\n\n        //! INJECT THE APP BASICS SERVICE\n        $rootScope.cgi          = cgi;\n\n        //! SIMPLE APPLICATION BEHAVIOR SETUP\n        $rootScope.frame        = {};\n\n        //#! INJECT THE SMS INSTANCE INTO THE MAIN SCOPE\n        $rootScope.sms          = sms;\n\n        //@ INJECT THE AUTHENTICATION SERVICE\n        $rootScope.auth         = auth;\n        $rootScope.remoteAuth   = remoteAuth;\n\n        //! IDENTIFY THE CURRENT PATH\n        $rootScope.frame.path   = () => $state.absUrl().split(\"/#/\")[0] + \"/#/\" + $state.absUrl().split(\"/#/\")[1].split(\"#\")[0];\n        //p.split(\"/#/\")[0]+\"/#/\"+p.split(\"/#/\")[1].split(\"#\")[0]\n\n        //@ INITIALIZE THE STORAGE ADMIN VARIABLE\n        $rootScope.storage.admin = {};\n\n        //! RELOCATION HANDLING\n        $rootScope.frame.relocate = (loc) => {\n            console.log(`Relocating to: #${loc}`)\n            $rootScope.location.go(loc);\n        };\n\n        //! ADMIN HANDLING  \n        $rootScope.frame.is_admin = false;\n\n        //! ADMIN STATUS CHECKER \n        $rootScope.frame.isAdmin = () => ($rootScope.frame.is_admin) ? true : false;\n\n        //! ROOT USER STATUS CHECKER\n        $rootScope.frame.isRoot = () => ($rootScope.storage.admin.access == 0) ? true : false;\n\n        //! ADMIN STATUS SWITCH\n        $rootScope.frame.changeAdmin = (bool) => {\n            $rootScope.frame.is_admin = bool;\n            //  $rootScope.$apply();\n        };\n\n        //! RESET THE ADMIN STATUS\n        $rootScope.frame.reset = () => {\n            delete $rootScope.storage.admin;\n            delete $rootScope.storage.user;\n            $rootScope.storage.admin    = {};\n            $rootScope.storage.user     = {};\n            $rootScope.frame.changeAdmin(false);\n            window.location = \"/#/\";\n        };\n\n        //@ SET THE DEFAULT HTTP AUTHORIZATION HEADERS WHERE NEED BE\n        if( $localStorage.framify_user ){\n            $http.defaults.headers.common.Authorization = $localStorage.framify_user.token                                                                                                                  ;\n        }\n        \n        \n\n    }])\n\n\n\n//@ The main controller\n.controller(\"framifyController\"\n,['$scope' ,'$state' ,'$rootScope','$http' \n,function($scope ,$state ,$rootScope ,$http) {\n\n        //!APPLICATION GLOBAL SCOPE COMPONENTS\n        $scope.current = {};\n        $scope.ui = {};\n\n        // $scope.urlParams = $stateParams;\n\n        $rootScope.nav = [];\n        $rootScope.nav.search; \n        $rootScope.links = [];\n\n        $scope.nav.hasFilters = false;\n\n\n        //** MANAGE THE NAVIGATION SEARCH STATUS\n        $scope.openFilters = (hasFilters) => {\n            if (hasFilters === true) { $scope.nav.hasFilters = false; } else { $scope.nav.hasFilters = true; }\n        };\n\n        //!RE-INITIALIZE APPLICATION DATA\n        $rootScope.app.reinit = () => {\n            $scope.location.path(\"/framify\");\n        };\n\n\n        //@ FUNCTION EXECUTOR\n        $rootScope.exec = f => f();\n\n        //@ VARIABLE SETTER\n        $rootScope.setVar = ( obj, keys, v ) => {\n\n            if( keys.length === 1){\n                obj[keys[0]] = v;\n            }else{\n                var key     = keys.shift();\n                obj[key]    = $rootScope.setVar(typeof(obj[key]) === 'undefined' ? {} : obj[key], keys, v);\n            }\n\n            return obj;\n\n        };\n        $rootScope.set_var  = $rootScope.setVar;\n\n        /**\n         * SECURE THE PARENTAL CONTROLLED URLS\n         */\n        $rootScope.secure = (securityFunc) => {\n\n            var parts = window.location.href.split('/');\n\n            var part = parts[(parts.length - 1)];\n\n            if ($scope.links.indexOf(part) >= 0) {\n\n                $rootScope.exec(securityFunc);\n\n            }\n\n        };\n\n\n        /**\n         * DATABASE CENTRIC ADDITION AND DELETION\n         */\n\n        //Define the main application objects\n        $scope.add = {};\n        $scope.fetch = {};\n        $scope.fetched = {};\n        $scope.counted = {};\n        $scope.data = {};\n\n        $scope.data.login = {};\n        $scope.data.admin = {};\n\n        $rootScope.frame.changeAdmin(false);\n        $scope.logedin = false;\n         \n        //@ Redirect to a given sub-state in the pre-defined 'app' main state\n        $scope.appRedirect = function(partialState){\n            $state.go(\"app.\"+partialState);\n        }\n        $scope.app_redirect = $scope.appRedirect;\n                \n        //@ Redirect to the specified state\n        $scope.goTo = function(completeState){\n            $state.go(completeState);\n        }\n        $scope.go_to    = $scope.goTo;\n\n        //@ UNWANTED ANGULAR JS OBJECTS\n        $scope.unwanted    = [\"$$hashKey\",\"$index\"];\n\n        $scope.removeUnwanted = function( insertObj ){\n             Object.keys( insertObj )\n             .forEach( insertKey => {\n                if( $scope.unwanted .indexOf( insertKey ) != -1 ){\n                    insertObj[insertKey] = undefined;\n                    delete insertObj[insertKey];\n                }\n            });\n            return insertObj;\n        };\n        $scope.remove_unwanted  =   $scope.removeUnwanted;\n       \n        \n        //! BASIC ADDITION\n        $scope.add = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                //* populate the data object \n                data                = (data) ? $scope.app.json(data) : {};\n                data.command        = \"add\";\n                data.table          = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n                data.token          = data.token || $scope.storage.admin._;\n                data.extras         = (data) ? ((data.extras) ? data.extras.replace(/LIMIT 1/ig, '') : undefined) : undefined;\n\n                //* Encrypt the specified cryptFields\n                 if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        }                        \n                    });\n                }\n\n                //* Perform the actual addition\n                $scope.app.db($scope.removeUnwanted(data))\n                .then((r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.app.notify(`<center> ${r.data.message}</center>` ,\"success\" );\n\n                        $scope.fetch(table, { specifics: data.specifics });\n\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                        if ( cb && typeof(cb) == \"function\") {\n                            resolve( cb(r,data) );\n                        } else {\n                            resolve(true);\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/);\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n\n                        }\n\n\n                        $scope.app.notify(`<center>${ r.data.message }</center>` ,'danger');\n                        reject( $scope.app.makeResponse(500 ,v[1]) )\n                        \n                    }\n\n                    //$scope.$apply();\n\n                });\n\n            });\n\n        \n            \n        };\n\n        //! BASIC UPDATING\n        $scope.update = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                //* pack the relevant info into the data object\n                data                = (data) ? $scope.app.json(data) : {};\n                data.command        = \"update\";\n                data.table          = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n                data.token          = data.token || $scope.storage.admin._;\n                data.extras         = (data) ? ((data.extras) ? data.extras.replace(/LIMIT 1/ig, '') : undefined) : undefined;\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                //* perform the actual update\n                $scope.app.db($scope.removeUnwanted(data))\n                .then( (r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.app.notify(`<center> ${r.data.message}</center>`, \"success\");\n\n                        $scope.fetch(table, { specifics: data.specifics });\n\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                        //$scope.$apply();\n\n                        if (typeof(cb) == 'function') {\n                            resolve( cb( r ) );                            \n                        }else{\n                            resolve(true);\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                           \n                        }\n\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message)  );\n\n                    }\n                    \n                })\n\n            });\n  \n        };\n\n\n        //! BASIC DATA FETCHING\n        var do_fetch = (table ,data ,cryptFields) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                //* populate the \"data\" object\n                data               = (data) ? $scope.app.json(data) : {};\n                data.command       = \"get\";\n                data.table         = table;\n\n                console.log(\"\\nprocessing the fetching of table \" + table + \"\\n\")\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                       if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                 //* perform the actual data fetching\n                 $scope.app.db($scope.removeUnwanted(data))\n                 .then( (r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n                        $scope.fetched[table] = r.data.message;\n                        $scope.$apply();\n                        resolve(r);\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n\n                        }\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    \n                })\n\n            });\n\n        };\n\n        $scope.fetch = (table ,data ,cryptFields ,cb) => {\n\n            if (Array.isArray(table)) {\n\n                let promiseArr = new Array();\n\n                table\n                .filter(e=>typeof(e[0])!='undefined' )\n                .forEach( (tData ,tkey) => {\n                    promiseArr.push( do_fetch(tData[0] ,(tData[1] || {}) ) ,cryptFields)\n                });\n                \n                promiseArr = promiseArr.filter(e=>typeof(e)!='undefined');\n\n                return Promise.all( promiseArr );\n\n            } else {\n               return Promise.resolve( do_fetch(table, data, cryptFields) )\n               .catch(function(e){\n                   console.log(\"Encountered an error when processing the fetch function.\")\n                   console.dir(e)\n               });\n            }\n\n        };\n\n        //! BASIC DELETION  \n        $scope.del = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (reject ,resolve) => {\n\n                //* populate the data object\n                data            = (data) ? $scope.app.json(data) : {};\n                data.command    = \"del\";\n                data.table      = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n                data.token      = data.token || $scope.storage.admin._;\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                $scope.app.db($scope.removeUnwanted(data))\n                .then( (r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n                        // // $scope.fetched[table].splice(delID, 1);\n                        $scope.app.notify(`<center>${r.data.message}</center>`, \"success\");\n                        $scope.fetch(table);\n                        resolve(r);\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    //$scope.$apply();\n\n                })\n\n            })\n            \n        };\n\n        //Basic User Login\n        $scope.login = (cryptField) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                if (cryptField) {\n                    $scope.data.login[cryptField] = $scope.app.md5($scope.data.login[cryptField])\n                }\n\n                $scope.data.login.command   = \"get\";\n                $scope.data.login.table     = \"users\";\n                $scope.data.login.extras    = \" AND active is true LIMIT 1\";\n\n                //* perform the actual login validation\n                $scope.app.db($scope.removeUnwanted($scope.data.login))\n                .then((r) => {\n\n                    $scope.data.admin.extras = \"\";\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        if (r.data.message.length > 0 && typeof(r.data.message[0]) == \"object\") {\n\n                            if (r.data.message[0]['username'] == $scope.data.login.username) {\n                                $scope.storage.user = r.data.message[0];\n                                $scope.logedin = true;\n                            } else {\n                                delete $scope.storage.user;\n                                window.location = \"/#/\";\n                            }\n\n                             resolve();\n\n                        } else {\n                            delete $scope.storage.user;\n                            $scope.app.notify(`<center>You have entered the wrong login credentials.</center>` ,\"danger\");\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/);\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n\n                        delete $scope.storage.user;\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    //$scope.$apply();\n\n                });\n\n            });\n\n        };\n\n        //Basic admin login\n        $scope.adminLogin = (cryptField) => {\n\n            return new Promise( (resolve,reject) =>{\n\n                if (cryptField) {\n                    $scope.data.admin[cryptField] = $scope.app.md5($scope.data.admin[cryptField])\n                }\n\n                $scope.data.admin.command   = \"get\";\n                $scope.data.admin.table     = \"admins\";\n                $scope.data.admin.extras    = \" AND active is true LIMIT 1\";\n\n                //* perform the actual login\n                $scope.app.db($scope.removeUnwanted($scope.data.admin) )\n                .then((r) => {\n\n                    $scope.data.admin.extras = \"\";\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        if (r.data.message.length > 0 && typeof(r.data.message[0]) != undefined) {\n\n                            if (r.data.message[0]['password'] === $scope.data.admin.password) {\n                                $scope.storage.admin = r.data.message[0];\n                                $scope.storage.admin._ = {};\n                                $scope.storage.admin._.user = r.data.message[0].admin_name;\n                                $scope.storage.admin._.key = r.data.message[0].password;\n                                $rootScope.frame.changeAdmin(true);\n                                //$scope.$apply();\n                                resolve(r)\n                            } else {\n                                delete $scope.data.admin;\n                                delete $scope.storage.admin;\n                                $scope.storage.admin    = {};\n                                window.location = \"/#/admin\";                                \n                                resolve(r)\n                            }\n\n                        } else {\n                            delete $scope.data.admin;\n                            delete $scope.storage.admin;\n                            $scope.storage.admin    = {};\n                            $scope.app.notify(`<center>You have entered the wrong login credentials.</center>` ,\"danger\");\n                            window.location = \"/#/admin\";\n                            reject(false);\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n                        delete $scope.storage.admin;\n                        $scope.storage.admin    = {};\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    //$scope.$apply();\n                })\n\n            });\n\n        };\n\n        //@ Handle basic user re-authentication\n        $scope.islogedin = () => {\n\n            return new Promise( (resolve ,reject) => {\n\n                if ($scope.storage.user) {\n                    $scope.data.login.username = $scope.storage.user.username;\n                    $scope.data.login.password = $scope.storage.user.password;\n                    $scope.login();\n                    resolve(true);\n                }else{\n                    $scope.app.notify(`<center>You have no permission to access this content</center>`,'danger')\n                    reject(false);\n                }\n\n            })\n\n        };\n\n        //@ Handle basic app-user logout\n        $scope.logout = () => {\n\n            $scope.islogedin = false;\n            delete $scope.storage.user;\n            window.location = '/#/';\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the logout function.\")\n                console.dir(e)\n            });\n            \n        };\n\n        //@ Handle basic application redirection\n        $scope.redirect = (loc) => {\n            if (loc) {\n                window.location = loc\n            } else {\n                window.location = \"/#/framify\";\n            }\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the redirect function.\")\n                console.dir(e)\n            })\n        };\n\n        // Basic Admin Auth\n        $scope.authorize = () => {\n\n            if ($scope.storage.admin && $scope.data.admin.admin_name && $scope.data.admin.password) {\n                $scope.data.admin               = {};\n                $scope.data.admin.admin_name    = $scope.storage.admin.admin_name;\n                $scope.data.admin.password      = $scope.storage.admin.password;\n                $scope.adminLogin();\n            } else {\n                $scope.location = \"/#/admin\";\n            }\n\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the authorize function.\")\n                console.dir(e)\n            });\n\n        };\n\n        //@ HANDLE ADMINISTRATOR DEAUTHORIZATION\n        $scope.deauthorize = () => {\n            delete $scope.storage.admin;\n            $rootScope.frame.changeAdmin(false);\n            window.location = '/#/';\n            return Promise.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the deauthorize function.\")\n                console.dir(e)\n            });\n        };\n\n\n        // BASIC Custom Queries\n        $scope.custom = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (resolve,reject) => {\n\n                //* initialize the data object\n                data            = (data) ? $scope.app.json(data) : {};\n                data.command    = \"custom\";\n                data.token      = data.token || $scope.storage.admin._;\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                //* Perform the actual custom query\n                $scope.app.db($scope.removeUnwanted(data))\n                .then((r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.app.notify(`<center>${(r.data.message || 'Successful')}</center>`, \"success\");\n\n                        $scope.cFetched[table] = r.data.message;\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n                        //$scope.$apply();\n\n                        resolve(r);\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n\n                        } \n                        $scope.app.notify(`<center>${ r.data.message }</center>`);\n                        reject( $scope.app.makeResponse(500, r.data.message) )\n                    }\n                    //$scope.$apply();\n                })\n\n            });   \n\n        };\n\n        //BASIC DATABASE INSTANCEOF COUNTER\n        $scope.count = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                data            = (data) ? $scope.app.json(data) : {};\n                data.table      = table;\n                data.command    = \"count\";\n                data.token      = data.token || {};\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                //* perform the actual count\n                $scope.app.db($scope.removeUnwanted(data))\n                .then((r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.counted[table.toString().replace(/vw_/ig, '')] = r.data.message;\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                        //$scope.$apply();\n\n                        resolve(r);\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n                        $scope.app.notify(`<center>${ r.data.message }</center>` ,'danger');\n                        reject( $scope.app.makeResponse(500 ,r.data.message ) );\n                    }\n                    //$scope.$apply();\n                })\n\n            });\n\n        };\n\n        /**\n         * TABLE SORTER\n         */\n        $scope.sort = function(keyname) {\n            $scope.sortKey = keyname; //set the sortKey to the param passed\n            $scope.reverse = !$scope.reverse; //if true make it false and vice versa\n        }\n\n\n        /**\n         *  DELETE UNWANTED FIELDS\n         */\n        $scope.sanitize = (data ,keys) => {\n            if (keys) {\n                keys.split(\",\").forEach((key) => {\n                    delete data[key];\n                });\n                return Promise.resolve(data)\n                .catch(function(e){\n                   console.log(\"Encountered an error when processing the sanitize function.\")\n                   console.dir(e)\n               });\n            }\n        };\n\n        /**\n         * PUSH DATA TO OBJECT\n         */\n        $scope.dPush = (obj ,key ,val) => {\n            obj[key] = val;\n            return obj;\n        };\n        $scope.d_push   = $scope.dPush;\n\n        $scope.dPushify = ( obj, key, val ) => Promise.resolve( $scope.dPush( obj, key, val ) );\n        $scope.d_pushify = $scope.dPushify;\n\n        /**\n         * @ MONTH REGULATION\n         */\n        $scope.currmoin = $scope.app.monthNum();\n        $scope.setMoin = (moin) => { $scope.currmoin = moin; };\n        $scope.set_moin = $scope.setMoin;\n\n        //@ DELETE UNWANTED PARAMETERS\n        $scope.delParams = function( mainObj,removeKeys ){\n            // $scope.app.clone\n            mainObj     = (mainObj) || {};\n            removeKeys  = ( removeKeys ) ? removeKeys.split(',') : [];\n\n            removeKeys.forEach(e => {\n                mainObj[e] = null;\n                delete mainObj[e];\n            });\n\n            return mainObj;\n\n        };\n        $scope.del_params   = $scope.delParams;\n\n\n        //@ INJECT A STANDARD WHERE \"Extras\" OBJECT\n        // addExtras(data.my_services,{username: storage.user.username},'username:WHERE owner','password,name,email,telephone,account_number,entity,active'),' ' )\n        $scope.addExtras = (targetObj ,extrasObj ,subStrings ,removeKeys) => {\n\n            return new Promise( (resolve,reject) => {\n\n                targetObj   = targetObj || {};\n                extrasObj   = extrasObj || {};\n                subStrings  = subStrings || '';\n                removeKeys  = removeKeys || '';\n\n                var extras  = '';\n\n                var k = [],\n                    v = [];\n\n                //@ CAPTURE THE REMOVE KEYS\n                removeKeys = removeKeys.split(',').filter(e => e);\n\n\n                removeKeys.forEach(e => {\n                    extrasObj[e] = null;\n                    delete extrasObj[e];\n                });\n\n                //@ CAPTURE REPLACE STRINGS\n                subStrings\n                    .split(',')\n                    .forEach((e, i) => {\n                        let x = e.split(':');\n                        k[i] = (x[0]);\n                        v[i] = (x[1]);\n                    })\n\n                //@ GET THE DEFINED KEYS\n                var keys = Object.keys(extrasObj);\n\n                //@ REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n                k.forEach((e, i) => {\n\n                    if (keys.indexOf(e) != -1) {\n\n                        extrasObj[v[i]] = extrasObj[e];\n                        extrasObj[e] = null;\n                        delete extrasObj[e];\n\n                    }\n\n                });\n\n\n                k = Object.keys(extrasObj);\n                v = null;\n\n                k.forEach((e, i) => {\n\n                    var fg = ( !isNaN(extrasObj[e]) ) ? parseInt(extrasObj[e]) : \"'\" + extrasObj[e] +\"'\";\n                    extras += ' ' + e + \"=\" + fg + \" AND\";\n\n                });\n\n                k = null;\n\n\n                targetObj.extras = extras.replace(/AND+$/, '');\n\n                resolve( targetObj );\n\n            })\n\n        };\n        $scope.add_extras   = (targetObj ,extrasObj ,subStrings ,removeKeys) => {\n\n            return new Promise( (resolve,reject) => {\n\n                targetObj   = targetObj || {};\n                extrasObj   = extrasObj || {};\n                subStrings  = subStrings || ['',''];\n                removeKeys  = removeKeys || ['',''];\n\n                var target  = '';\n                var extras  = '';\n\n                var target_k = [],\n                    extras_k = [],\n                    target_v = [],\n                    extras_v = [];\n\n                //@ Ensure that the substitution and removal parameters are arrays \n                if( !Array.isArray( subStrings ) || !Array.isArray( removeKeys ) ){\n                    reject('This Method only allows substitution and removal Arrays, <br> please consider using the <b><i>addExtras</i></b> object instead.');\n                }else{\n\n                    //@ CAPTURE THE REMOVE KEYS\n                    let target_removeKeys = removeKeys[0].split(',').filter(e => e);\n                    let extras_removeKeys = removeKeys[1].split(',').filter(e => e);\n\n                    //@ Remove specified keys from the target object\n                    target_removeKeys.forEach(e => {\n                        targetObj[e] = null;\n                        delete targetObj[e];\n                    });\n\n                    //@ Remove specified keys from the extras object\n                    extras_removeKeys.forEach(e => {\n                        extrasObj[e] = null;\n                        delete extrasObj[e];\n                    });\n\n\n\n                    //@ CAPTURE REPLACE STRINGS\n                    let target_subStrings = subStrings[0].split(',');\n                    let extras_subStrings = subStrings[1].split(',');\n\n                    //@ Specify target key-value pairs\n                    target_subStrings.forEach((e, i) => {\n                        let x = e.split(':');\n                        target_k[i] = (x[0]);\n                        target_v[i] = (x[1]);\n                    });\n\n                    //@ Specify extras key-value pairs\n                    extras_subStrings.forEach((e, i) => {\n                        let x = e.split(':');\n                        extras_k[i] = (x[0]);\n                        extras_v[i] = (x[1]);\n                    });\n\n                    //@ GET THE DEFINED KEYS\n                    var extras_keys = Object.keys(extrasObj);\n                    var target_keys = Object.keys(targetObj);\n\n                    //@ TARGET - REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n                    target_k.forEach((e, i) => {\n\n                        if (target_keys.indexOf(e) != -1) {\n\n                            // console.log( `Renaming the target ${e} to ${target_v[i]}` )\n\n                            targetObj[target_v[i]] = targetObj[e];\n                            targetObj[e] = null;\n                            delete targetObj[e];\n\n                        }\n\n                    });\n\n                     //@ EXTRAS - REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n                    extras_k.forEach((e, i) => {\n\n                        if (extras_keys.indexOf(e) != -1) {\n\n                            // console.log( `Renaming the extras ${e} to ${extras_v[i]}` )\n\n                            extrasObj[extras_v[i]] = extrasObj[e];\n                            extrasObj[e] = null;\n                            delete extrasObj[e];\n\n                        }\n\n                    });\n\n                    //@ SQLify the extras object\n                    extras_k = null;\n\n                    extras_k = Object.keys(extrasObj);\n                    extras_v = null;\n\n                    extras_k.forEach((e, i) => {\n\n                        var fg = ( !isNaN(extrasObj[e]) ) ? parseInt(extrasObj[e]) : \"'\" + extrasObj[e] +\"'\";\n                        extras += ' ' + e + \"=\" + fg + \" AND\";\n\n                    });\n\n                    extras_k = null;\n\n                    targetObj.extras = extras.replace(/AND+$/, '');\n\n                    resolve( targetObj );\n\n\n                }\n\n                \n            })\n\n        };\n\n        \n\n        ///////////////////////////////////////////////////////////////////////////////////////////////////\n        // ADDITIONS ON PROBATION\n\t// ----\n\n\t    //@ LOAD A SERVICE ONTO THE STAGE\n\t    $scope.service = {};\n\t    $scope.entity  = {};\n\n\t    $scope.showService = (serviceData) => {\n\t\t$scope.service.available = true;\n\t\t$scope.service.current   = serviceData;\n\t\t//$scope.$apply();\n\t    };\n\n\t    $scope.showEntity = (serviceData) => {\n\t\t$scope.entity.available = true;\n\t\t$scope.entity.current   = serviceData;\n\t\t//$scope.$apply();\n\t    };\n\n\t    //@ Count my entities\n\t    $scope.howMany = (table,data) => {\n\n            var data        = data || {owner: $scope.storage.user.username};\n            data            = (data)?$scope.app.json(data):{};\n            data.table      = table || 'entities';\n            data.command    = \"count\";\n            data.token      =  {};\n\n            $scope.app.db( $scope.removeUnwanted(data) )\n            .then( (r) => {   \n                \n                r = $scope.app.json(r);\n\n                if(r.response == 200){\n\n                    if( r.data.message ) {\n                        $scope.app.notify((r.data.message), \"success\");\n                    }\n                    \n                    $scope.counted[data.table.toString().replace(/vw_/ig,'')] = r.data.message;\n                    \n                }else{\n\n                    //POSTGRESQL MATCHING\n                    if(Array.isArray(r.data.message)){\n                        var v =  r.data.message[2].match(/DETAIL:(.*)/)\n                        if( v != undefined || v!=null ){\n                            r.data.message = v[1];\n                        }else{\n                            r.data.message = r.data.message[2];\n                        }\n                    }else{\n                        r.data.message;\n                    }\n                \n                    alert(`<center>${ r.data.message }</center>`);\n                }           \n                //$scope.$apply();\n            })    \n\n\n\t    };\n\n\t// ----\n\n    //@ FRAMIFY HANDLERS\n\n    $scope.data.login       = $scope.data.login || {};\n\n    $scope.data.me          = $scope.data.me || {};\n\n    $scope.setData;\n\n    //@ Initialize the handlers object\n    $scope.handlers = {};\n    $scope.r_handlers = $scope.handlers;\n\n    //@ The registration success handler\n    $scope.handlers.regSuccess = function( message ){\n        $scope.app.notify(\"You have been successfully registered\");\n        $state.go(\"app.login\");\n    };\n    $scope.r_handlers.regSuccess  = $scope.handlers.regSuccess;\n    $scope.handlers.reg_success   = $scope.handlers.regSuccess;\n    $scope.r_handlers.reg_success = $scope.handlers.regSuccess;\n\n    //@ The successful login handler\n    $scope.handlers.loginSuccess = function( message ){\n        $scope.app.notify(\"<i class='fa fa-2x fa-spin fa-circle-o-notch'></i> Processing your login data\",'success',4000); \n        $state.go(\"app.panel\");    \n    };\n    $scope.r_handlers.loginSuccess     = $scope.handlers.loginSuccess;\n    $scope.handlers.login_success      = $scope.handlers.loginSuccess;\n    $scope.r_handlers.login_success    = $scope.handlers.loginSuccess;\n\n    //@ The registration error handler\n    $scope.handlers.regError   = function( message ){\n        $scope.app.alert(\"<font color='red'>Signup Error</font>\", message);\n    };\n    $scope.r_handlers.regError    = $scope.handlers.regError;\n    $scope.handlers.reg_error     = $scope.handlers.regError;\n    $scope.r_handlers.reg_rror    = $scope.handlers.regError;\n\n    //@ The login error handler\n    $scope.handlers.loginError   = function( message ){\n        $scope.app.alert(\"<font color='red'>Login Error</font>\", message);\n    };    \n    $scope.r_handlers.loginError    = $scope.handlers.loginError;\n    $scope.handlers.login_error     = $scope.handlers.loginError;\n    $scope.r_handlers.login_error   = $scope.handlers.loginError;\n \n    //@ The identity check verification handler\n    $scope.handlers.identity    = function(){\n\n        return new Promise(function(reject,resolve){\n            \n            $http.get(\"/auth/me\")\n            .success(function(response){\n               \n               resolve( $scope.data.me = response.data.message  );\n\n            })\n            .error(function(error){\n\n                $scope.auth.Logout()\n                .then(function(){\n\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Your lease has expired <br>Please Login to continue.\",'danger');\n                    reject( $state.go(\"app.login\") );\n\n                });\n\n            })\n\n        })\n\n    };\n\n    $scope.r_handlers.identity    = function(){\n\n        return new Promise(function(reject,resolve){\n            \n            console.log(\"Querying the remote server for identity\")\n\n            $http.get(`${$scope.remoteAuth.url}/auth/me`)\n            .success(function(response){\n               \n               console.log(\"Remote Knows who you are.\")\n               resolve( $scope.data.me = response.data.message  );\n\n            })\n            .error(function(error){\n\n                console.log(\"Something just didn't go well.\")\n                $scope.auth.Logout()\n                .then(function(){\n\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Your lease has expired <br>Please Login to continue.\",'danger');\n                    reject( $state.go(\"app.login\") );\n\n                });\n\n            })\n\n        })\n\n    };\n\n    //@ The login status check handler\n    $scope.handlers.isLogedIn   = function(){\n\n        return new Promise( function(resolve, reject ){\n\n            if( !$scope.storage.framify_user ){\n\n                console.log(\"\\nNo localstorage value is defined\\n\")\n\n                if($state.current.name != \"app.login\" ){\n\n                    console.log(\"\\nRedirecting to the authentication page.\\n\")\n\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Please Login to continue.\",'danger');\n                    reject( $state.go(\"app.login\") );                    \n\n                }\n                \n            }else if( !$http.defaults.headers.common.Authorization || $http.defaults.headers.common.Authorization == undefined || $http.defaults.headers.common.Authorization == '' ){\n\n                    console.log(\"\\nThe authentication header is not yet defined\\n\")\n\n                    $scope.auth.SetAuth( undefined )\n                    .then(function(  ){\n\n                        console.log(`\\nThe authentication header has been set to ${$http.defaults.headers.common.Authorization}\\n`)\n\n                        if($state.current.name == \"app.login\" ){\n                            resolve( $state.go(\"app.panel\") );\n                        }else{\n                            resolve(  );\n                        }\n                        \n                    })\n\n                     \n                    \n\n            }else{\n\n                console.log(\"\\nAll Looks good! Let me see if I can get you into the party\\n\")\n\n                if($state.current.name == \"app.login\" ){\n                   resolve( $state.go(\"app.panel\") );\n                }else{\n                    resolve(  );\n                }\n\n            }\n\n\n        })\n\n    };\n    $scope.handlers.is_loged_in = $scope.handlers.isLogedIn;\n\n    $scope.r_handlers.isLogedIn   = function(){\n\n        return new Promise( function(resolve, reject ){\n\n            console.log(\"Handing you over to the remote authentication server.\")\n\n            if( !$scope.storage.framify_user ){\n\n\n                if($state.current.name != \"app.login\" ){\n\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Please Login to continue.\",'danger');\n                    reject( $state.go(\"app.login\") );                    \n\n                }\n                \n            }else if( !$http.defaults.headers.common.Authorization || $http.defaults.headers.common.Authorization == undefined || $http.defaults.headers.common.Authorization == '' ){\n\n                    $scope.remoteAuth.SetAuth( undefined )\n                    .then(function(  ){\n\n                        if($state.current.name == \"app.login\" ){\n                            resolve( $state.go(\"app.panel\") );\n                        }else{\n                            resolve(  );\n                        }\n                        \n                    })\n\n                     \n                    \n\n            }else{\n\n                if($state.current.name == \"app.login\" ){\n                   resolve( $state.go(\"app.panel\") );\n                }else{\n                    resolve(  );\n                }\n\n            }\n\n\n        })\n\n    };\n    $scope.r_handlers.is_loged_in   = $scope.r_handlers.isLogedIn;\n\n}])\n\n.directive(\"contenteditable\"\n,function() {\n    return {\n        restrict: \"A\",\n        require: \"ngModel\",\n        link: function(scope, element, attrs, ngModel) {\n\n            function read() {\n                ngModel.$setViewValue(element.html());\n            }\n\n            ngModel.$render = function() {\n                element.html(ngModel.$viewValue || \"\");\n            };\n\n            element.bind(\"blur keyup change\", function() {\n                scope.$apply(read);\n            });\n        }\n    };\n})\n\n.directive('fileModel',['$parse',function($parse){\n    \n    return {\n        restrict :\"A\",\n        link : function(scope,element,attr){\n            var model       = $parse(attr.fileModel);\n            var modelSetter = model.assign;\n            element.bind('change', ()=>{\n                scope.$apply( ()=>{\n                    modelSetter(scope,element[0].files[0])\n                })\n            })\n        }\n    }\n    \n}])\n\n//!CONFIGURE THE BNASIC PRE-RUNTIME STATES OF THE APPLICATION\n.config([\"ChartJsProvider\",function(ChartJsProvider){\n    \n    //@SET THE DEFAULT CHART COLORS\n    ChartJsProvider.setOptions({ colors : [ \"#4AB151\",'#387EF5', '#FF0000', '#DCDCDC', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'] });\n    // ChartJsProvider.setOptions({ colors : [ '#803690', '#00ADF9', '#DCDCDC', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'] });\n\n}]);\n"]}
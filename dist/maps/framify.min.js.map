{"version":3,"sources":["framify.min.js","framify.es6"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","angular","module","factory","$localStorage","request","config","framify_user","nullify","me","headers","AuthData","JSON","stringify","key","App_Key","Authorization","token","service","$http","remoteAuth","$q","pdfGen","app","this","add","a","b","isNaN","parseInt","url","window","location","href","split","filter","urlPortion","pathPos","scheme","ip","port","hlink","undefined","nav","logger","console","dir","redirect","loc","resolve","e","log","setVar","val","setVarify","set","value","getVal","getValify","getval","str","json","parse","jsonify","md5","test","CryptoJS","MD5","toString","md5ify","base64_encode","string","enc","Base64","Utf8","base64_encodify","base64_decode","encoded","base64_decodify","upload","data","destination","reject","fd","FormData","append","post","transformRequest","identity","Content-Type","then","d","keys","Object","vals","reduce","prev","curr","idx","valsify","clone","copy","attr","hasOwnProperty","clonify","parseIntify","doNothing","getNumbers","firstOnly","arguments","length","numMatch","match","getNumbersify","notify","notificationContent","notificationClass","notificationTimeout","position","UIkit","message","status","timeout","pos","countries","name","makeResponse","make_response","response","command","date","Date","toDate","to_date","newDate","new_date","toDateString","isoDate","iso_date","format","getIsoDate","get_iso_date","toIsoDate","to_iso_date","dObj","getIsoString","get_iso_string","toISOString","dateTime","date_time","getDateTime","get_date_time","toDateTime","to_date_time","monthNum","month_num","getMonthNum","get_month_num","toMonthNum","to_month_num","$month_array","month_array","month_o_array","id","printMonths","$month_o_array","mobj","m","ajax","method","target","$","dataType","Access-Control-Allow-Origin","getJSON","get_json","replace","cgi","loadify","duration","modal","blockUI","setTimeout","hide","alert","title","cb","confirm","prompt","label","placeholder","userValue","isemail","isEmail","is_email","prospective_email","isusername","isUsername","is_username","prospective_username","ispassword","isPassword","is_password","prospective_password","isnumber","isNumber","is_number","prospective_number","istelephone","ismultitelephone","isTelephone","is_telephone","prospective_telephone","isMultiTelephone","is_multi_telephone","isimei","isImei","is_imei","prospective_imei","isdateTime","isDateTime","is_date_time","prospective_date","matches","val1","val2","num2month","month_number","unique","removeDuplicates","remove_duplicates","arr_init","Array","isArray","elem","arr","indexOf","count","searchParam","arrayObject","search_term","array_val","success","error","get","params","put","db","mail","welcomeMail","handler","errorHandler","error_handler","e_handler","remote_handler","remoteHandler","countSMS","count_sms","Math","ceil","countSMSify","count_smsify","tabulate","text","doc","jsPDF","autoTable","styles","fillColor","fontSize","columnStyles","margin","top","addPageContent","save","r_auth","setUrl","set_url","accessUrl","SetAuth","set_auth","AuthToken","defaults","common","Register","register","credentials","Login","login","Logout","logout","document","cookie","forEach","c","toUTCString","assign","isms","provider","setProvider","set_provider","providerURL","includes","one","ismsssage","many","template","echo","responseData","resp","run","$rootScope","$state","auth","iSMS","storage","frame","path","absUrl","relocate","go","permissions","admin_only","user","role","admin_only_org","item_org","organization","client_only","client_only_org","audit_only","audit_only_org","admin_client","admin_client_org","any_admin_client_org","any","any_org","any_admin_other_org","controller","$scope","current","ui","search","hasFilters","openFilters","reinit","objectInArray","object_in_array","obj_in_array","list","item","len","i","flg","j","exec","f","set_var","v","shift","arrayPush","array_push","valu","concat","myarr","push","fetch","fetched","counted","actions","prequeue","admin","addAction","add_action","ky","logedin","appRedirect","app_redirect","partialState","goTo","go_to","completeState","unwanted","removeUnwanted","remove_unwanted","insertObj","insertKey","removeUnwantedify","remove_unwantedify","encryptFields","encrypt_fields","fields_to_encrypt","data_to_encrypt","previous","cryptField","encryptFieldsify","encrypt_fieldsify","generic_db_request_handler","table","r","cFetched","specifics","cryptFields","extras","update","do_fetch","promiseArr","tData","tkey","all","del","custom","sort","keyname","sortKey","reverse","sanitize","dPush","d_push","dPushify","d_pushify","currmoin","setMoin","set_moin","moin","delParams","del_params","mainObj","removeKeys","addExtras","targetObj","extrasObj","subStrings","k","x","fg","add_extras","target_k","extras_k","target_v","extras_v","target_removeKeys","extras_removeKeys","target_subStrings","extras_subStrings","extras_keys","target_keys","entity","showService","serviceData","available","showEntity","howMany","owner","username","setData","handlers","r_handlers","regSuccess","reg_success","loginSuccess","login_success","regError","reg_error","loginError","login_error","isLogedIn","is_loged_in","recovery","queued","recover_password","email","isSignedUp","from","to","subject","telephone","SmsSuccess","SmsError","directive","restrict","require","link","scope","element","attrs","ngModel","read","$setViewValue","html","$render","$viewValue","bind","$apply","$parse","model","fileModel","modelSetter","multiple","files","ChartJsProvider","$httpProvider","interceptors","$compile","$watch","$eval","compile","contents"],"mappings":"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","file":"../framify.min.js","sourcesContent":["\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n// \"jsonFormatter\",\nangular.module(\"framify.js\", [\"ui.router\", \"framify-paginate\", \"ngStorage\", \"chart.js\", \"ngAria\", \"ngMaterial\", \"ngMessages\"])\n/**\n * Handles the injection of the Authentication Headers with each http call\n */\n.factory(\"authIntercept\", [\"$localStorage\", function ($localStorage) {\n    return {\n\n        request: function request(config) {\n\n            //@ If the local user authentication object is defined\n            if ($localStorage.framify_user) {\n\n                //@ If the authentication bypass is not set\n                if ($localStorage.framify_user.nullify != true) {\n\n                    //@ If the user details exist\n                    if ($localStorage.framify_user.me) {\n                        //@ Append them to the 'AuthData' Header\n                        config.headers.AuthData = JSON.stringify($localStorage.framify_user.me);\n                    }\n\n                    //@ If an application key is defined\n                    if ($localStorage.framify_user.key) {\n                        //@ Append the 'app_key' header\n                        config.headers.App_Key = $localStorage.framify_user.key;\n                    }\n\n                    //@ Append the 'Authorization' header\n                    config.headers.Authorization = $localStorage.framify_user.token;\n\n                    return config;\n                }\n                //@ If the credentials bypass is specified\n                else {\n\n                        //@ Pass the \"authorization\" header since others are not needed\n                        config.headers.Authorization = $localStorage.framify_user.token;\n                        return config;\n                    }\n            }\n            //@ If the user isn't loged in, continue as is\n            else {\n\n                    return config;\n                }\n        }\n    };\n}])\n\n//@ Basic Application Essentials\n.service(\"app\", [\"$http\", \"remoteAuth\", \"$q\", \"pdfGen\", function ($http, remoteAuth, $q, pdfGen) {\n\n    var app = this;\n\n    app.pdfGen = pdfGen;\n\n    //@ Add provided numbers\n    app.add = function (a, b) {\n        return !isNaN(parseInt(a) + parseInt(b)) ? parseInt(a) + parseInt(b) : '...';\n    };\n\n    //!SETUP THE APPLICATION BASICS\n    var url = window.location.href.split('/').filter(function (urlPortion) {\n        return urlPortion != '' && urlPortion != 'http:' && urlPortion != 'https:';\n    });\n    var pathPos = window.location.href.split('/').filter(function (urlPortion) {\n        return urlPortion != '';\n    });\n\n    //! APP CONFIGURATIONS\n    app.scheme = pathPos[0];\n    app.ip = url[0].split(':')[0];\n    app.port = url[0].split(':')[1];\n    app.hlink = app.scheme + \"//\" + app.ip + (app.port != undefined ? \":\" + app.port : \"\");\n\n    //!APPLICATION URL\n    app.url = app.hlink;\n\n    var hlink = app.hlink;\n\n    app.nav = [];\n\n    app.logger = function (a) {\n        console.dir(a);\n    };\n\n    //@Perform simple redirects\n    app.redirect = function (loc) {\n        if (loc) {\n            window.location = loc;\n        } else {\n            window.location = \"/\";\n        }\n        return $q.resolve(true).catch(function (e) {\n            console.log(\"Encountered an error when processing the redirect function.\");\n            console.dir(e);\n        });\n    };\n\n    //@ Add a Key=>value pair to an object being careful to parse integers\n    app.setVar = function (obj, key, val) {\n        obj = obj ? obj : {};\n        obj[key] = !isNaN(val) ? parseInt(val) : val;\n        return obj;\n    };\n\n    //@ Add a key=>value pair to an object without type concerns\n    app.setVarify = function (obj, key, val) {\n        return $q.resolve(app.setVar(obj, key, val));\n    };\n\n    //@ Assign a key=>value pair to an object without creating one if not exists\n    app.set = function (obj, key, value) {\n        return obj[key] = value;\n    };\n\n    //@ Fetch the value at key {X} in an object\n    app.getVal = function (obj, key) {\n        return obj[key];\n    };\n    app.getValify = function (obj, key) {\n        return $q.resolve(app.getval(obj, key));\n    };\n\n    //* CONDITIONALLY TRANSFORM TO STRING\n    app.str = function (obj) {\n        return (typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) === \"object\" ? JSON.stringify(obj) : obj;\n    };\n    app.stringify = function (obj) {\n        return $q.resolve(app.str(obj));\n    };\n\n    //* CONDITIONALLY TRANSFORM TO JSON\n    app.json = function (obj) {\n        return (typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) === \"object\" ? obj : JSON.parse(obj);\n    };\n    app.jsonify = function (obj) {\n        return $q.resolve(app.json(obj));\n    };\n\n    //* CONDITIONALLY RETURN AN MD5 HASH\n    app.md5 = function (str) {\n        return (/^[a-f0-9]{32}$/gm.test(str) ? str : CryptoJS.MD5(str).toString()\n        );\n    };\n    app.md5ify = function (str) {\n        return $q.resolve(app.md5(str));\n    };\n\n    //BASE64 ENCODE A STRING\n    app.base64_encode = function (string) {\n        return CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(string));\n    };\n    app.base64_encodify = function (string) {\n        return $q.resolve(app.base64_encode(string));\n    };\n\n    //BASE64 DECODE A STRING\n    app.base64_decode = function (encoded) {\n        return CryptoJS.enc.Base64.parse(encoded).toString(CryptoJS.enc.Utf8);\n    };\n    app.base64_decodify = function (encoded) {\n        return $q.resolve(app.base64_decode(encoded));\n    };\n\n    //@ THE OFFICIAL FILE UPLOAD SERVICE\n    app.upload = function (data, destination) {\n\n        return $q(function (resolve, reject) {\n\n            //* create a formdata object\n            var fd = new FormData();\n\n            //* add the defined keys to the formdata object\n            for (var key in data) {\n                fd.append(key, data[key]);\n            };\n\n            //* post the data to the /upload route of the running server\n            $http.post(hlink + \"/upload/\" + destination, fd, {\n\n                transformRequest: angular.identity,\n\n                //* ensure automatic content-type settng\n                headers: { 'Content-Type': undefined }\n\n            }).then(function (d) {\n                return resolve(d);\n            });\n        });\n    };\n\n    //@ GET A KEYS ARRAY FROM AN OBJECT\n    app.keys = function (obj) {\n        return Object.keys(obj);\n    };\n\n    //@ GET A VALUES ARRAY FROM AN OBJECT\n    app.vals = function (obj) {\n        return Object.keys(obj).reduce(function (prev, curr, idx) {\n            prev[idx] = curr;return prev;\n        }, []);\n    };\n    app.valsify = function (obj) {\n        return $q.resolve(app.vals(obj));\n    };\n\n    //@ CREATE A COPY OF AN OBJECT\n    app.clone = function (obj) {\n\n        //* ensure that the object is defined\n        if (null == obj || \"object\" != (typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj))) return obj;\n\n        //* call the object constructor prototype\n        var copy = obj.constructor();\n\n        //* clone all attributes of the parent object into a new object\n        for (var attr in obj) {\n            if (obj.hasOwnProperty(attr)) copy[attr] = /^[0-9]+$/.test(obj[attr]) ? parseInt(obj[attr]) : obj[attr];\n        }\n\n        //* return the newly created object\n        return copy;\n    };\n    app.clonify = function (obj) {\n        return $q.resolve(app.clone(obj));\n    };\n\n    //! PARSE TO AN INTEGER\n    app.parseInt = function (str) {\n        return parseInt(str);\n    };\n    app.parseIntify = function (str) {\n        return $q.resolve(app.parseInt(str));\n    };\n\n    //! EMPTY CALLBACK\n    app.doNothing = function () {\n        return $q.resolve();\n    };\n\n    //@ FIND NUMBERS IN A STRING\n    app.getNumbers = function (str) {\n        var firstOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var numMatch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : /\\d+/g;\n        return firstOnly ? str.toString().match(numMatch)[0] : str.toString().match(numMatch);\n    };\n    app.getNumbersify = function (str) {\n        var firstOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var numMatch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : /\\d+/g;\n        return $q.resolve(app.getNumbers((str, firstOnly = true, numMatch = /\\d+/g)));\n    };\n\n    //! SET A NOTIFICATION \n    app.notify = function (notificationContent, notificationClass, notificationTimeout, position) {\n\n        UIkit.notify({\n            message: \"<center>\" + (notificationContent || 'A blank notification was triggered.') + \"</center>\",\n            status: notificationClass || 'info',\n            timeout: notificationTimeout || 4000,\n            pos: 'top-center' || position\n        });\n\n        return $q.resolve(true).catch(function (e) {\n            console.dir(e.message);\n        });\n    };\n\n    var notify = app.notify;\n\n    app.countries = [{ name: \"Afghanistan\", value: \"1\" }, { name: \"Albania\", value: \"2\" }, { name: \"Algeria\", value: \"3\" }, { name: \"American Samoa\", value: \"4\" }, { name: \"Andorra\", value: \"5\" }, { name: \"Angola\", value: \"6\" }, { name: \"Anguilla\", value: \"7\" }, { name: \"Antarctica\", value: \"8\" }, { name: \"Antigua and Barbuda\", value: \"9\" }, { name: \"Argentina\", value: \"10\" }, { name: \"Armenia\", value: \"11\" }, { name: \"Aruba\", value: \"12\" }, { name: \"Australia\", value: \"13\" }, { name: \"Austria\", value: \"14\" }, { name: \"Azerbaijan\", value: \"15\" }, { name: \"Bahamas\", value: \"16\" }, { name: \"Bahrain\", value: \"17\" }, { name: \"Bangladesh\", value: \"18\" }, { name: \"Barbados\", value: \"19\" }, { name: \"Belarus\", value: \"20\" }, { name: \"Belgium\", value: \"21\" }, { name: \"Belize\", value: \"22\" }, { name: \"Benin\", value: \"23\" }, { name: \"Bermuda\", value: \"24\" }, { name: \"Bhutan\", value: \"25\" }, { name: \"Bolivia\", value: \"26\" }, { name: \"Bosnia and Herzegowina\", value: \"27\" }, { name: \"Botswana\", value: \"28\" }, { name: \"Bouvet Island\", value: \"29\" }, { name: \"Brazil\", value: \"30\" }, { name: \"British Indian Ocean Territory\", value: \"31\" }, { name: \"Brunei Darussalam\", value: \"32\" }, { name: \"Bulgaria\", value: \"33\" }, { name: \"Burkina Faso\", value: \"34\" }, { name: \"Burundi\", value: \"35\" }, { name: \"Cambodia\", value: \"36\" }, { name: \"Cameroon\", value: \"37\" }, { name: \"Canada\", value: \"38\" }, { name: \"Cape Verde\", value: \"39\" }, { name: \"Cayman Islands\", value: \"40\" }, { name: \"Central African Republic\", value: \"41\" }, { name: \"Chad\", value: \"42\" }, { name: \"Chile\", value: \"43\" }, { name: \"China\", value: \"44\" }, { name: \"Christmas Island\", value: \"45\" }, { name: \"Cocos (Keeling) Islands\", value: \"46\" }, { name: \"Colombia\", value: \"47\" }, { name: \"Comoros\", value: \"48\" }, { name: \"Congo\", value: \"49\" }, { name: \"Congo, the Democratic Republic of the\", value: \"50\" }, { name: \"Cook Islands\", value: \"51\" }, { name: \"Costa Rica\", value: \"52\" }, { name: \"Cote d\\'Ivoire\", value: \"53\" }, { name: \"Croatia (Hrvatska)\", value: \"54\" }, { name: \"Cuba\", value: \"55\" }, { name: \"Cyprus\", value: \"56\" }, { name: \"Czech Republic\", value: \"57\" }, { name: \"Denmark\", value: \"58\" }, { name: \"Djibouti\", value: \"59\" }, { name: \"Dominica\", value: \"60\" }, { name: \"Dominican Republic\", value: \"61\" }, { name: \"East Timor\", value: \"62\" }, { name: \"Ecuador\", value: \"63\" }, { name: \"Egypt\", value: \"64\" }, { name: \"El Salvador\", value: \"65\" }, { name: \"Equatorial Guinea\", value: \"66\" }, { name: \"Eritrea\", value: \"67\" }, { name: \"Estonia\", value: \"68\" }, { name: \"Ethiopia\", value: \"69\" }, { name: \"Falkland Islands (Malvinas)\", value: \"70\" }, { name: \"Faroe Islands\", value: \"71\" }, { name: \"Fiji\", value: \"72\" }, { name: \"Finland\", value: \"73\" }, { name: \"France\", value: \"74\" }, { name: \"France Metropolitan\", value: \"75\" }, { name: \"French Guiana\", value: \"76\" }, { name: \"French Polynesia\", value: \"77\" }, { name: \"French Southern Territories\", value: \"78\" }, { name: \"Gabon\", value: \"79\" }, { name: \"Gambia\", value: \"80\" }, { name: \"Georgia\", value: \"81\" }, { name: \"Germany\", value: \"82\" }, { name: \"Ghana\", value: \"83\" }, { name: \"Gibraltar\", value: \"84\" }, { name: \"Greece\", value: \"85\" }, { name: \"Greenland\", value: \"86\" }, { name: \"Grenada\", value: \"87\" }, { name: \"Guadeloupe\", value: \"88\" }, { name: \"Guam\", value: \"89\" }, { name: \"Guatemala\", value: \"90\" }, { name: \"Guinea\", value: \"91\" }, { name: \"Guinea-Bissau\", value: \"92\" }, { name: \"Guyana\", value: \"93\" }, { name: \"Haiti\", value: \"94\" }, { name: \"Heard and Mc Donald Islands\", value: \"95\" }, { name: \"Holy See (Vatican City State)\", value: \"96\" }, { name: \"Honduras\", value: \"97\" }, { name: \"Hong Kong\", value: \"98\" }, { name: \"Hungary\", value: \"99\" }, { name: \"Iceland\", value: \"100\" }, { name: \"India\", value: \"101\" }, { name: \"Indonesia\", value: \"102\" }, { name: \"Iran (Islamic Republic of)\", value: \"103\" }, { name: \"Iraq\", value: \"104\" }, { name: \"Ireland\", value: \"105\" }, { name: \"Israel\", value: \"106\" }, { name: \"Italy\", value: \"107\" }, { name: \"Jamaica\", value: \"108\" }, { name: \"Japan\", value: \"109\" }, { name: \"Jordan\", value: \"110\" }, { name: \"Kazakhstan\", value: \"111\" }, { name: \"Kenya\", value: \"112\" }, { name: \"Kiribati\", value: \"113\" }, { name: \"Korea, Democratic People\\'s Republic of\", value: \"114\" }, { name: \"Korea, Republic of\", value: \"115\" }, { name: \"Kuwait\", value: \"116\" }, { name: \"Kyrgyzstan\", value: \"117\" }, { name: \"Lao, People\\'s Democratic Republic\", value: \"118\" }, { name: \"Latvia\", value: \"119\" }, { name: \"Lebanon\", value: \"120\" }, { name: \"Lesotho\", value: \"121\" }, { name: \"Liberia\", value: \"122\" }, { name: \"Libyan Arab Jamahiriya\", value: \"123\" }, { name: \"Liechtenstein\", value: \"124\" }, { name: \"Lithuania\", value: \"125\" }, { name: \"Luxembourg\", value: \"126\" }, { name: \"Macau\", value: \"127\" }, { name: \"Macedonia, The Former Yugoslav Republic of\", value: \"128\" }, { name: \"Madagascar\", value: \"129\" }, { name: \"Malawi\", value: \"130\" }, { name: \"Malaysia\", value: \"131\" }, { name: \"Maldives\", value: \"132\" }, { name: \"Mali\", value: \"133\" }, { name: \"Malta\", value: \"134\" }, { name: \"Marshall Islands\", value: \"135\" }, { name: \"Martinique\", value: \"136\" }, { name: \"Mauritania\", value: \"137\" }, { name: \"Mauritius\", value: \"138\" }, { name: \"Mayotte\", value: \"139\" }, { name: \"Mexico\", value: \"140\" }, { name: \"Micronesia, Federated States of\", value: \"141\" }, { name: \"Moldova, Republic of\", value: \"142\" }, { name: \"Monaco\", value: \"143\" }, { name: \"Mongolia\", value: \"144\" }, { name: \"Montserrat\", value: \"145\" }, { name: \"Morocco\", value: \"146\" }, { name: \"Mozambique\", value: \"147\" }, { name: \"Myanmar\", value: \"148\" }, { name: \"Namibia\", value: \"149\" }, { name: \"Nauru\", value: \"150\" }, { name: \"Nepal\", value: \"151\" }, { name: \"Netherlands\", value: \"152\" }, { name: \"Netherlands Antilles\", value: \"153\" }, { name: \"New Caledonia\", value: \"154\" }, { name: \"New Zealand\", value: \"155\" }, { name: \"Nicaragua\", value: \"156\" }, { name: \"Niger\", value: \"157\" }, { name: \"Nigeria\", value: \"158\" }, { name: \"Niue\", value: \"159\" }, { name: \"Norfolk Island\", value: \"160\" }, { name: \"Northern Mariana Islands\", value: \"161\" }, { name: \"Norway\", value: \"162\" }, { name: \"Oman\", value: \"163\" }, { name: \"Pakistan\", value: \"164\" }, { name: \"Palau\", value: \"165\" }, { name: \"Panama\", value: \"166\" }, { name: \"Papua New Guinea\", value: \"167\" }, { name: \"Paraguay\", value: \"168\" }, { name: \"Peru\", value: \"169\" }, { name: \"Philippines\", value: \"170\" }, { name: \"Pitcairn\", value: \"171\" }, { name: \"Poland\", value: \"172\" }, { name: \"Portugal\", value: \"173\" }, { name: \"Puerto Rico\", value: \"174\" }, { name: \"Qatar\", value: \"175\" }, { name: \"Reunion\", value: \"176\" }, { name: \"Romania\", value: \"177\" }, { name: \"Russian Federation\", value: \"178\" }, { name: \"Rwanda\", value: \"179\" }, { name: \"Saint Kitts and Nevis\", value: \"180\" }, { name: \"Saint Lucia\", value: \"181\" }, { name: \"Saint Vincent and the Grenadines\", value: \"182\" }, { name: \"Samoa\", value: \"183\" }, { name: \"San Marino\", value: \"184\" }, { name: \"Sao Tome and Principe\", value: \"185\" }, { name: \"Saudi Arabia\", value: \"186\" }, { name: \"Senegal\", value: \"187\" }, { name: \"Seychelles\", value: \"188\" }, { name: \"Sierra Leone\", value: \"189\" }, { name: \"Singapore\", value: \"190\" }, { name: \"Slovakia (Slovak Republic)\", value: \"191\" }, { name: \"Slovenia\", value: \"192\" }, { name: \"Solomon Islands\", value: \"193\" }, { name: \"Somalia\", value: \"194\" }, { name: \"South Africa\", value: \"195\" }, { name: \"South Georgia and the South Sandwich Islands\", value: \"196\" }, { name: \"South Sudan\", value: \"197\" }, { name: \"Spain\", value: \"198\" }, { name: \"Sri Lanka\", value: \"199\" }, { name: \"St. Helena\", value: \"200\" }, { name: \"St. Pierre and Miquelon\", value: \"201\" }, { name: \"Sudan\", value: \"202\" }, { name: \"Suriname\", value: \"203\" }, { name: \"Svalbard and Jan Mayen Islands\", value: \"204\" }, { name: \"Swaziland\", value: \"205\" }, { name: \"Sweden\", value: \"206\" }, { name: \"Switzerland\", value: \"207\" }, { name: \"Syrian Arab Republic\", value: \"208\" }, { name: \"Taiwan, Province of China\", value: \"209\" }, { name: \"Tajikistan\", value: \"210\" }, { name: \"Tanzania, United Republic of\", value: \"211\" }, { name: \"Thailand\", value: \"212\" }, { name: \"Togo\", value: \"213\" }, { name: \"Tokelau\", value: \"214\" }, { name: \"Tonga\", value: \"215\" }, { name: \"Trinidad and Tobago\", value: \"216\" }, { name: \"Tunisia\", value: \"217\" }, { name: \"Turkey\", value: \"218\" }, { name: \"Turkmenistan\", value: \"219\" }, { name: \"Turks and Caicos Islands\", value: \"220\" }, { name: \"Tuvalu\", value: \"221\" }, { name: \"Uganda\", value: \"222\" }, { name: \"Ukraine\", value: \"223\" }, { name: \"United Arab Emirates\", value: \"224\" }, { name: \"United Kingdom\", value: \"225\" }, { name: \"United States\", value: \"226\" }, { name: \"United States Minor Outlying Islands\", value: \"227\" }, { name: \"Uruguay\", value: \"228\" }, { name: \"Uzbekistan\", value: \"229\" }, { name: \"Vanuatu\", value: \"230\" }, { name: \"Venezuela\", value: \"231\" }, { name: \"Vietnam\", value: \"232\" }, { name: \"Virgin Islands (British)\", value: \"233\" }, { name: \"Virgin Islands (U.S.)\", value: \"234\" }, { name: \"Wallis and Futuna Islands\", value: \"235\" }, { name: \"Western Sahara\", value: \"236\" }, { name: \"Yemen\", value: \"237\" }, { name: \"Yugoslavia\", value: \"238\" }, { name: \"Zambia\", value: \"239\" }, { name: \"Zimbabwe\", value: \"240\" }];\n\n    //! BASIC FRAMIFY FORMAT RESPONSE FORMATTER\n    app.makeResponse = app.make_response = function (response, message, command) {\n        return {\n            response: response,\n            data: { message: message, command: command }\n        };\n    };\n\n    //!DATE FORMATERS\n    //* date object     \n    app.date = function () {\n        return new Date();\n    };\n\n    //@ Convert to a date object\n    app.toDate = app.to_date = function (d) {\n        return new Date(d);\n    };\n\n    //* simple date\n    app.newDate = app.new_date = function () {\n        return new Date().toDateString();\n    };\n\n    //* isodate\n    app.isoDate = app.iso_date = function () {\n        return new Date().format('isoDate');\n    };\n\n    //* get the isoDate of the specified date\n    app.getIsoDate = app.get_iso_date = function (d) {\n        return new Date(d).format('isoDate');\n    };\n\n    //* get the isoDate of a date object\n    app.toIsoDate = app.to_iso_date = function (dObj) {\n        return dObj.format('isoDate');\n    };\n\n    //* get the isoString of a datestring\n    app.getIsoString = app.get_iso_string = function (d) {\n        return new Date(d).toISOString();\n    };\n\n    //* custom datetime\n    app.dateTime = app.date_time = function () {\n        return new Date().format('dateTime');\n    };\n\n    //* set the date in the custom datetime format\n    app.getDateTime = app.get_date_time = function (d) {\n        return new Date(d).format('dateTime');\n    };\n\n    //* Convert a date to the dd-mm-yyyy hh:mm format\n    app.toDateTime = app.to_date_time = function (dObj) {\n        return dObj.format('dateTime');\n    };\n\n    //* month number\n    app.monthNum = app.month_num = function () {\n        return new Date().format('monthNum');\n    };\n\n    //* get month number of the specified date\n    app.getMonthNum = app.get_month_num = function (d) {\n        return new Date(d).format('monthNum');\n    };\n\n    //* get date objects' month number\n    app.toMonthNum = app.to_month_num = function (dObj) {\n        return dObj.format('monthNum');\n    };\n\n    //* MONTHS ARRAY\n    var $month_array = app.month_array = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    app.month_o_array = [{ id: 0, name: \"January\" }, { id: 1, name: \"February\" }, { id: 2, name: \"March\" }, { id: 3, name: \"April\" }, { id: 4, name: \"May\" }, { id: 5, name: \"June\" }, { id: 6, name: \"July\" }, { id: 7, name: \"August\" }, { id: 8, name: \"September\" }, { id: 9, name: \"October\" }, { id: 10, name: \"November\" }, { id: 11, name: \"December\" }];\n\n    app.printMonths = function () {\n        return $month_o_array.reduce(function (mobj, m) {\n            mobj[m] = m;\n        }, {}).filter(function (m) {\n            return m;\n        });\n    };\n\n    //! HANDLE APPLICATION SERVICE REQUESTS\n    app.ajax = function (method, target, data) {\n        return $.ajax({\n            method: method || \"POST\",\n            url: target,\n            data: data,\n            dataType: 'jsonp',\n            headers: { 'Access-Control-Allow-Origin': \"*\" }\n        });\n    };\n\n    //!HANDLE JSON REQUESTS \n    app.getJSON = app.get_json = function (target) {\n        return $.getJSON(target.replace(/callback=?/ig, \"\") + '?callback=?');\n    };\n\n    //! HANDLE CORS CALLS WITH jsonp ENABLED\n    app.cgi = function (method, url, data) {\n        return $.ajax({\n            method: method || \"GET\",\n            url: url || app.hlink,\n            data: data,\n            dataType: 'jsonp',\n            headers: { 'Access-Control-Allow-Origin': \"*\" }\n        });\n    };\n\n    //!HANDLE THE DISPLAY OF DIALOG BOXES\n\n    //* SHOW A \"LOADING\" ELEMENT\n    app.loadify = function () {\n        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6000;\n        var message = arguments[1];\n        return $q(function (resolve, reject) {\n            var modal = UIkit.modal.blockUI('<center><i style=\"color:blue;\" class=\"fa fa fa-spinner fa-pulse fa-5x fa-fw\"></i></center>' + (message ? \"<center><br>\" + message + \"</center>\" : \"\"));\n            if (duration && !isNaN(duration)) {\n                setTimeout(function () {\n                    modal.hide();\n                    resolve(true);\n                }, duration);\n            } else {\n                resolve(modal);\n            }\n        });\n    };\n\n    //*GENERATE A CUSTOM ALERT DIALOG\n    app.alert = function (title, message, cb) {\n\n        UIkit.modal.alert(\"<font color=\\\"#1976D2\\\" style=\\\"font-weight:bold;text-transform:uppercase;\\\">\" + (title || 'Notice') + \"</font>\\n            <hr>\\n            <center>\" + (message || '</center><font color=red font-weight=bold; font-size=2em>Oops!</font><br>Something nasty happened!<center>') + \"</center>\");\n\n        if (cb) {\n            if (typeof cb == \"function\") {\n                return $q.resolve(cb(message)).catch(function (e) {\n                    console.log(\"Encountered an error when processing the alert function.\");\n                    console.dir(e);\n                });\n            } else {\n                return $q.resolve(true).catch(function (e) {\n                    console.log(\"Encountered an error when processing the alert2 function.\");\n                    console.dir(e);\n                });\n            }\n        } else {\n            return $q.resolve(true).catch(function (e) {\n                console.log(\"Encountered an error when processing the alert2 function.\");\n                console.dir(e);\n            });\n        }\n    };\n\n    //*GENERATE A CUSTOM CONFIRM DIALOG\n    app.confirm = function (title, message, cb) {\n\n        return $q(function (resolve) {\n\n            UIkit.modal.confirm(\"<font color=\\\"#1976D2\\\" style=\\\"font-weight:bold;text-transform:uppercase;\\\">\" + (title || 'Confirmation required.') + \"</font>\\n                <hr>\\n                <center>\" + message + \"</center>\", function () {\n                if (cb && typeof cb == \"function\") {\n                    resolve(cb(message));\n                } else {\n                    resolve(true);\n                }\n            });\n        });\n    };\n\n    //*GENERATE A CUSTOM PROMPT DIALOG\n    app.prompt = function (title, label, placeholder, cb) {\n\n        return $q(function (resolve) {\n\n            UIkit.modal.prompt(\"<font color=\\\"#1976D2\\\" style=\\\"font-weight:bold;text-transform:uppercase;\\\">\" + (title || 'Info required') + \"</font>\\n            <hr>\\n            \" + (label || 'email') + \" :\", placeholder || '', function (userValue) {\n                if (cb && typeof cb == \"function\") {\n                    resolve(cb(userValue));\n                } else {\n                    resolve(userValue);\n                }\n            });\n        });\n    };\n\n    //!BASIC VALIDATION METHODS\n\n    //*VALIDATE EMAIL ADDRESSES\n    app.isemail = /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/;\n    app.isEmail = app.is_email = function (prospective_email) {\n        return app.isemail.test(prospective_email);\n    };\n\n    //*VALIDATE USERNAMES\n    app.isusername = /^[a-z0-9_-]{4,16}$/;\n    app.isUsername = app.is_username = function (prospective_username) {\n        return app.isusername.test(prospective_username);\n    };\n\n    //*VALIDATE PASSWORDS\n    app.ispassword = /^[-@./\\!\\$\\%\\^|#&,+\\w\\s]{6,50}$/;\n    app.isPassword = app.is_password = function (prospective_password) {\n        return app.ispassword.test(prospective_password);\n    };\n\n    //* VALIDATE NUMBERS\n    app.isnumber = /^-{0,1}\\d*\\.{0,1}\\d+$/;\n    app.isNumber = app.is_number = function (prospective_number) {\n        return app.isnumber.test(prospective_number);\n    };\n\n    //*VALIDATE TELEPHONE NUMBERS\n    app.istelephone = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n    app.ismultitelephone = /^([\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}(?:,|$))+$/im;\n    app.isTelephone = app.is_telephone = function (prospective_telephone) {\n        return app.istelephone.test(prospective_telephone);\n    };\n    app.isMultiTelephone = app.is_multi_telephone = function (prospective_telephone) {\n        return app.ismultitelephone.test(prospective_telephone);\n    };\n\n    //@ VALIDATE IMEI NUMBERS \n    app.isimei = /^[0-9]{15}$/;\n    app.isImei = app.is_imei = function (prospective_imei) {\n        return app.isimei.test(prospective_imei);\n    };\n\n    //*VALIDATE DATETIME VALUES IN THE FORMAT  DD-MM-YYYY HH:MM e.g 29-02-2013 22:16\n    app.isdateTime = /^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-(19|20)[0-9]{2} (2[0-3]|[0-1][0-9]):[0-5][0-9]$/;\n    app.isDateTime = app.is_date_time = function (prospective_date) {\n        return app.isdateTime.test(prospective_date);\n    };\n\n    //*VALIDATE WHETHER TWO GIVEN VALUES MATCH\n    app.matches = function (val1, val2) {\n        return val1 === val2;\n    };\n\n    //*TRANFORM NUMBER TO MONTH\n    app.num2month = function (month_number) {\n        return !isNaN(month_number) && month_number <= 11 ? $month_array[month_number] : \"Invalid Month Number\";\n    };\n\n    //*REMOVE DUPLICATES FROM ARRAY\n    app.unique = app.removeDuplicates = app.remove_duplicates = function (arr_init) {\n        return Array.isArray(arr_init) ? arr_init.filter(function (elem, pos, arr) {\n            return arr.indexOf(elem) == pos;\n        }) : ['The  applied method only processes Arrays'];\n    };\n\n    app.count = function (searchParam, arrayObject) {\n        return (\n            //@ Ensure that the provided 'arrayObject' parameter is an Array\n            !Array.isArray(arrayObject) ? app.notify(\"Failed to count occurances on a non array object.\", \"danger\") : Array.isArray(searchParam) ? searchParam.reduce(function (count, search_term, idx) {\n                count[search_term] = arrayObject.filter(function (array_val) {\n                    return array_val == search_term;\n                }).length;\n                return count;\n            }, {}) : arrayObject.filter(function (array_val) {\n                return array_val == searchParam;\n            }).length\n        );\n    };\n\n    //@ POST HTTP DATA HANDLER  \n    app.post = function (destination, data) {\n        return $q(function (resolve, reject) {\n\n            $http.post(destination, data).success(resolve).error(reject);\n        });\n    };\n\n    //@ GET HTTP DATA HANDLER  \n    app.get = function (destination, params) {\n        return $q(function (resolve, reject) {\n\n            $http.get(destination, { params: params }).success(resolve).error(reject);\n        });\n    };\n\n    //@ PUT HTTP DATA HANDLER \n    app.put = function (destination, data) {\n        return $q(function (resolve, reject) {\n\n            $http.put(destination, data).success(resolve).error(reject);\n        });\n    };\n\n    //@ DELETE HTTP DATA HANDLER \n    app.delete = function (destination, params) {\n        return $q(function (resolve, reject) {\n\n            $http.delete(destination, { params: params }).success(resolve).error(reject);\n        });\n    };\n\n    //@ Handle background calls to the web server for database integration\n    app.db = function (params, destination) {\n        return $q(function (resolve, reject) {\n\n            destination = destination ? destination : hlink + \"/sms\";\n            $http.get(destination, { params: params }).success(resolve).error(reject);\n        });\n    };\n\n    //@ Handle email sending requests\n    app.mail = function (data, destination) {\n        return $q(function (resolve, reject) {\n            destination = destination ? destination : remoteAuth.url + \"/mail\";\n            $http.post(destination, data).success(resolve).error(reject);\n        });\n    };\n\n    //@ Handle The sending of welcome messages\n    app.welcomeMail = function (data, destination) {\n        return $q(function (resolve, reject) {\n\n            destination = destination ? destination : \"/welcome\";\n\n            $http.post(destination, data).success(resolve).error(reject);\n        });\n    };\n\n    //@ Generic Process Event Handler\n    app.handler = function (response) {\n        response = response.response ? response : response.data;\n\n        if (response.response == 200) {\n            app.alert(\"<font color=green>Done</font>\", app.str(response.data.message));\n        } else {\n            app.alert(\"<font color=red>Uh Oh!</font> ( \" + response.response + \" Error )\", app.str(response.data.message));\n        }\n    };\n\n    //@ Generic Error Handler\n    app.errorHandler = app.error_handler = app.e_handler = function (response) {\n        response = response.response ? response : response.data;\n        app.alert(\"<font color=red>Uh Oh!</font>\", app.str(response.data.message));\n    };\n\n    //@ Generic Process Remote Event Handler\n    app.remote_handler = app.remoteHandler = function (response) {\n        app.alert(\"<font color=blue>Data Response</font>\", app.str(app.str(response)));\n    };\n\n    //@ SMS FIGURE COUNTER\n    app.countSMS = app.count_sms = function (data) {\n        return Math.ceil(data.length / 160) == 0 ? 1 : Math.ceil(data.length / 160);\n    };\n    app.countSMSify = app.count_smsify = function (data) {\n        return $q.resolve(app.countSMS(data));\n    };\n\n    //@ CONVERT DATA TO A TABLE\n    app.tabulate = function (text, headers, data) {\n        UIkit.modal.alert('<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\"> DOWNLOAD NOTICE</font> <hr> <center>The report is being generated.<center>');\n\n        return $q(function (resolve, reject) {\n            //@ Start  an instance of the pdf generator\n            var doc = new jsPDF('l', 'pt');\n\n            //@ Add a simple title\n            doc.autoTable(headers, data, {\n                styles: { fillColor: [100, 175, 250], fontSize: 5 },\n                columnStyles: {\n                    id: { fillColor: 255 }\n                },\n                margin: { top: 60 },\n                addPageContent: function addPageContent(data) {\n                    doc.text(text + \" at \" + new Date().format(\"yyyy/mm/dd HH:mm\"), 40, 30);\n                }\n            });\n\n            resolve(doc.save(text + \" \" + new Date().format(\"yyyy/mm/dd HH:mm\") + \".pdf\"));\n        });\n    };\n\n    return app;\n}])\n\n//@@ The Remote authentication service\n.service(\"remoteAuth\", [\"$http\", \"$localStorage\", \"$q\", function ($http, $localStorage, $q) {\n\n    var r_auth = this;\n\n    r_auth.url = 'http://bixbyte.io';\n\n    r_auth.setUrl = r_auth.set_url = function (accessUrl) {\n        return $q(function (resolve, reject) {\n            r_auth.url = accessUrl;\n            resolve(accessUrl);\n        });\n    };\n\n    r_auth.SetAuth = r_auth.set_auth = function (AuthToken) {\n        return $q(function (resolve, reject) {\n\n            resolve($http.defaults.headers.common.Authorization = AuthToken || $localStorage.framify_user ? $localStorage.framify_user.token : undefined);\n        });\n    };\n\n    //@ Perform User Registration\n    r_auth.Register = r_auth.register = function (credentials) {\n        return $q(function (resolve, reject) {\n\n            $http.post(r_auth.url + \"/auth/register\", credentials).success(function (response) {\n\n                if (response.response == 200) {\n                    resolve(credentials);\n                } else {\n                    reject(response.data.message);\n                }\n            }).error(function (response) {\n                reject(JSON.stringify((response ? response.data ? response.data.message : response : response) || \"Could not obtain a response from the server.\"));\n            });\n        });\n    };\n\n    //@ Perform a User Login\n    r_auth.Login = r_auth.login = function (params) {\n        return $q(function (resolve, reject) {\n\n            //@ Append the auth command to the params [jp dash auth only]\n            // params[\"action\"] = \"auth\";\n            // params[\"password\"]     = (params[\"password\"]);\n\n            //@ Push the authentication request\n            $http.get(r_auth.url + \"/auth/verify\", { params: params }).success(function (response) {\n                if (response.response == 200) {\n                    $localStorage.framify_user = response.data.message;\n                    resolve(response.data.message);\n                } else {\n                    reject(response.data.message);\n                }\n            }).error(function (response) {\n                console.dir(response);\n                reject(JSON.stringify((response ? response.data ? response.data.message : response : response) || \"Could not obtain a response from the server.\"));\n            });\n        });\n    };\n\n    //@ Perform A User Logout\n    r_auth.Logout = r_auth.logout = function () {\n\n        return $q(function (resolve, reject) {\n\n            //@ Clear the localstorage instance of the login data\n            delete $localStorage.framify_user;\n\n            //@ Clear all the existing session cookies\n            document.cookie.split(\";\").forEach(function (c) {\n                document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\");\n            });\n\n            // r_auth.SetAuth(undefined)\n            //     .then(resolve)\n\n            //@ Move on to the next task\n            resolve();\n        });\n    };\n\n    return r_auth;\n}])\n\n//@@ The Authentication service  \n// ,$http,$localStorage,$q\n.service('auth', [\"remoteAuth\", function (remoteAuth) {\n\n    Object.assign(this, remoteAuth);\n    return this;\n}])\n\n//@ The infobip SMS integration module\n.service(\"iSMS\", [\"$http\", \"$q\", \"app\", function ($http, $q, app) {\n\n    var isms = this;\n\n    isms.provider = '/sms';\n\n    isms.setProvider = isms.set_provider = function (providerURL) {\n        isms.provider = providerURL.toString().includes('/sms') ? providerURL : providerURL + \"/sms\";\n        console.log(\"All SMS requests via the i service will now be routed to \" + isms.provider);\n    };\n\n    isms.one = function (data) {\n        return $q(function (resolve, reject) {\n\n            $http.post(isms.provider + \"/one\", data).success(function (response) {\n                if (response.response == 200) {\n                    resolve(response);\n                } else {\n                    reject(response);\n                }\n            }).error(function (response) {\n                reject(app.make_response(500, JSON.stringify((response ? response.data ? response.data.ismsssage : response : response) || \"Could not obtain a response from the server.\")));\n            });\n        });\n    };\n\n    isms.many = function (data) {\n\n        return $q(function (resolve, reject) {\n\n            $http.post(isms.provider + \"/many\", data).success(function (response) {\n\n                if (response.response == 200) {\n\n                    resolve(response);\n                } else {\n\n                    reject(response);\n                }\n            }).error(function (response) {\n                reject(app.make_response(500, JSON.stringify((response ? response.data ? response.data.ismsssage : response : response) || \"Could not obtain a response from the server.\")));\n            });\n        });\n    };\n\n    isms.template = function (data) {\n\n        return $q(function (resolve, reject) {\n\n            $http.post(isms.provider + \"/template\", data).success(function (response) {\n\n                if (response.response == 200) {\n\n                    resolve(response);\n                } else {\n\n                    reject(response);\n                }\n            }).error(function (response) {\n                reject(app.make_response(500, JSON.stringify((response ? response.data ? response.data.ismsssage : response : response) || \"Could not obtain a response from the server.\")));\n            });\n        });\n    };\n\n    isms.test = function (data) {\n\n        return $q(function (resolve, reject) {\n\n            $http.post(\"\" + isms.provider, data).success(function (response) {\n\n                if (response.response == 200) {\n\n                    resolve(response);\n                } else {\n\n                    reject(response);\n                }\n            }).error(function (response) {\n                reject(app.make_response(500, JSON.stringify((response ? response.data ? response.data.ismsssage : response : response) || \"Could not obtain a response from the server.\")));\n            });\n        });\n    };\n\n    isms.echo = function (data) {\n\n        return $q(function (resolve, reject) {\n\n            $http.post(isms.provider + \"/echo\", data).success(function (response) {\n\n                if (response.response == 200) {\n\n                    app.alert(\"<font color=green>SMS ECHO</font>\", app.str(response.data.message));\n                    resolve(response);\n                } else {\n\n                    reject(response);\n                }\n            }).error(function (response) {\n                reject(app.make_response(500, JSON.stringify((response ? response.data ? response.data.message : response : response) || \"Could not obtain a response from the server.\")));\n            });\n        });\n    };\n\n    isms.handler = function (responseData) {\n\n        return $q(function (resolve, reject) {\n\n            var resp = responseData.response ? app.clone(responseData) : app.clone(responseData.data);\n\n            if (responseData.response == 200) {\n                app.alert(\"<font color=green>SMS RESPONSE</font>\", \"The SMS messages have been queued for sending \");\n                resolve(resp);\n            } else {\n                app.alert(\"<font color=red>Uh Oh!</font> ( \" + responseData.response + \" Error )\", app.str(responseData.data.message));\n                reject(resp);\n            }\n        });\n    };\n\n    return isms;\n}])\n\n//@ Configure the application for execution\n.run([\"app\", \"$rootScope\", \"$state\", \"$localStorage\", \"auth\", \"remoteAuth\", \"$http\", \"iSMS\"\n// ,\"$templateCache\"\n, function (app, $rootScope, $state, $localStorage, auth, remoteAuth, $http, iSMS) {\n\n    //@ Clear the application cache on page load [Breaks the datetime picker and framify pagination handler]\n    // $rootScope.$on('$viewContentLoaded', function() {\n    //     $templateCache.removeAll();\n    // });    \n\n    //! INJECT THE LOCATION SOURCE TO THE ROOT SCOPE\n    $rootScope.location = $state;\n\n    //! INJECT THE $localStorage instance into the root scope\n    $rootScope.storage = $localStorage;\n\n    //! INJECT THE APPLICATION'S MAIN SERVICE TO THE ROOT SCOPE SUCH THAT ALL SCOPES MAY INHERIT IT\n    $rootScope.app = app;\n\n    //! SIMPLE APPLICATION BEHAVIOR SETUP\n    $rootScope.frame = {};\n\n    //@ INJECT THE infobip SMS sender into the root scope\n    $rootScope.iSMS = iSMS;\n\n    //@ INJECT THE AUTHENTICATION SERVICE\n    $rootScope.auth = auth;\n    $rootScope.remoteAuth = remoteAuth;\n\n    //! IDENTIFY THE CURRENT PATH\n    $rootScope.frame.path = function () {\n        return $state.absUrl().split(\"/#/\")[0] + \"/#/\" + $state.absUrl().split(\"/#/\")[1].split(\"#\")[0];\n    };\n    //p.split(\"/#/\")[0]+\"/#/\"+p.split(\"/#/\")[1].split(\"#\")[0]\n\n\n    //! RELOCATION HANDLING\n    $rootScope.frame.relocate = function (loc) {\n        return $rootScope.location.go(loc);\n    };\n\n    //@ The global permissions definition object\n    $rootScope.permissions = {\n\n        //@ ALLOW ONLY ADMIN USERS\n        admin_only: function admin_only(user) {\n            return user.role ? user.role == 'admin' ? true : false : false;\n        },\n\n        //@! FROM MATCHING ORGANIZATIONS\n        admin_only_org: function admin_only_org(user, item_org) {\n            return user.role ? user.role == 'admin' && user.organization == item_org ? true : false : false;\n        },\n\n        //@ ALLOW ONLY CLIENT USERS\n        client_only: function client_only(user) {\n            return user.role ? user.role == 'client' ? true : false : false;\n        },\n\n        //@! FROM MATCHING ORGANIZATIONS\n        client_only_org: function client_only_org(user, item_org) {\n            return user.role ? user.role == 'client' && user.organization == item_org ? true : false : false;\n        },\n\n        //@ ALLOW ONLY AUDIT USERS\n        audit_only: function audit_only(user) {\n            return user.role ? user.role == 'audit' ? true : false : false;\n        },\n\n        //@! FROM MATCHING ORGANIZATIONS        \n        audit_only_org: function audit_only_org(user, item_org) {\n            return user.role ? user.role == 'audit' && user.organization == item_org ? true : false : false;\n        },\n\n        //@ ALLOW BOTH ADMIN AND CLIENT USERS\n        admin_client: function admin_client(user) {\n            return user.role ? user.role == 'admin' || user.role == 'client' ? true : false : false;\n        },\n\n        //@! FROM MATCHING ORGANIZATIONS\n        admin_client_org: function admin_client_org(user, item_org) {\n            return user.role ? (user.role == 'admin' || user.role == 'client') && user.organization == item_org ? true : false : false;\n        },\n\n        //@! FROM MATCHING ORGANIZATIONS WITH ADMIN EXEMPT\n        any_admin_client_org: function any_admin_client_org(user, item_org) {\n            return user.role ? user.role == 'audit' ? false : user.role == 'admin' ? true : user.organization == item_org ? true : false : false;\n        },\n\n        //@ ALLOW ALL USERS \n        any: function any(user) {\n            return true;\n        },\n\n        //@! FROM MATCHING ORGANIZATIONS\n        any_org: function any_org(user, item_org) {\n            return user.organization == item_org ? true : false;\n        },\n\n        //@! EXCLUDE ADMINS FROM SCRUTINY\n        any_admin_other_org: function any_admin_other_org(user, item_org) {\n            return user.role == 'admin' ? true : user.organization == item_org ? true : false;\n        }\n\n    };\n}])\n\n//@ The main controller\n.controller(\"framifyController\", [\"$scope\", \"$state\", \"$rootScope\", \"$http\", \"$q\", function ($scope, $state, $rootScope, $http, $q) {\n\n    //!APPLICATION GLOBAL SCOPE COMPONENTS\n    $scope.current = {};\n    $scope.ui = {};\n\n    // $scope.urlParams = $stateParams;\n\n    $rootScope.nav = [];\n    $rootScope.nav.search;\n\n    $scope.nav.hasFilters = false;\n\n    //** MANAGE THE NAVIGATION SEARCH STATUS\n    $scope.openFilters = function (hasFilters) {\n        $scope.nav.hasFilters = hasFilters === true ? true : false;\n    };\n\n    //!RE-INITIALIZE APPLICATION DATA\n    $rootScope.app.reinit = function () {\n        return $scope.location.path(\"/\");\n    };\n\n    /** \n     * ++LATER++\n     */\n    //@ CHECK IF OBJECT EXISTS IN ARRAY\n    $scope.objectInArray = $scope.object_in_array = $scope.obj_in_array = function (list, item) {\n        var len = list.length;\n\n        for (var i = 0; i < len; i++) {\n            var keys = Object.keys(list[i]);\n            var flg = true;\n            for (var j = 0; j < keys.length; j++) {\n                var value = list[i][keys[j]];\n                if (item[keys[j]] !== value) {\n                    flg = false;\n                }\n            }\n            if (flg == true) {\n                return i;\n            }\n        }\n        return -1;\n    };\n\n    //@ FUNCTION EXECUTOR\n    $rootScope.exec = function (f) {\n        return f();\n    };\n\n    //@ VARIABLE SETTER\n    $rootScope.setVar = $rootScope.set_var = function (obj, keys, v) {\n\n        if (keys.length === 1) {\n            obj[keys[0]] = v;\n        } else {\n            var key = keys.shift();\n            obj[key] = $rootScope.setVar(typeof obj[key] === 'undefined' ? {} : obj[key], keys, v);\n        }\n\n        return obj;\n    };\n\n    //@ PUSH TO ARRAY\n    $scope.arrayPush = $scope.array_push = function (arr, valu) {\n        return !Array.isArray(arr) ? [] : Array.isArray(valu) ? arr.concat(valu) : function () {\n            var myarr = JSON.parse(JSON.stringify(arr));\n            myarr.push(valu);\n            return myarr;\n        }();\n    };\n\n    /**\n     * DATABASE CENTRIC ADDITION AND DELETION\n     */\n\n    //Define the main application objects\n    $scope.add = {};\n    $scope.fetch = {};\n    $scope.fetched = {};\n    $scope.counted = {};\n    $scope.data = {};\n    $scope.actions = { prequeue: [] };\n\n    $scope.data.login = {};\n    $scope.data.admin = {};\n\n    //@ Add an action to the actions holder\n    $scope.addAction = $scope.add_action = function (ky, val) {\n        return $scope.actions[ky] = val;\n    };\n\n    // $rootScope.frame.changeAdmin(false);\n    $scope.logedin = false;\n\n    //@ Redirect to a given sub-state in the pre-defined 'app' main state\n    $scope.appRedirect = $scope.app_redirect = function (partialState) {\n        return $state.go(\"app.\" + partialState);\n    };\n\n    //@ Redirect to the specified state\n    $scope.goTo = $scope.go_to = function (completeState) {\n        return $state.go(completeState);\n    };\n\n    //@ UNWANTED ANGULAR JS OBJECTS\n    $scope.unwanted = [\"$$hashKey\", \"$index\", \"$$state\"];\n\n    //@ Remove the unwanted keys\n    $scope.removeUnwanted = $scope.remove_unwanted = function (insertObj) {\n        Object.keys(insertObj).forEach(function (insertKey) {\n            if ($scope.unwanted.indexOf(insertKey) != -1) {\n                insertObj[insertKey] = undefined;\n                delete insertObj[insertKey];\n            }\n        });\n        return insertObj;\n    };\n    $scope.removeUnwantedify = $scope.remove_unwantedify = function (insertObj) {\n        return $q.resolve($scope.removeUnwanted(insertObj));\n    };\n\n    //@ Generate an MD5 checksum from the specified fields\n    $scope.encryptFields = $scope.encrypt_fields = function (fields_to_encrypt, data_to_encrypt) {\n        return fields_to_encrypt.split(\",\").reduce(function (previous, cryptField) {\n\n            if (previous[cryptField]) {\n                previous[cryptField] = $scope.app.md5(previous[cryptField]);\n            }\n\n            return previous;\n        }, data_to_encrypt);\n    };\n\n    $scope.encryptFieldsify = $scope.encrypt_fieldsify = function (fields_to_encrypt, data_to_encrypt) {\n        return $q.resolve($scope.encrypt_fields(fields_to_encrypt, data_to_encrypt));\n    };\n\n    //@ HANDLE GENERIC DB REQUEST RESPONSES\n    $scope.generic_db_request_handler = function (method, table, responseData, data) {\n        return $q(function (resolve, reject) {\n            var r = $scope.app.json(responseData);\n\n            // console.log(`The relevant app data is: `)\n            // console.dir(r)\n\n            if (r.response == 200) {\n\n                if (typeof r.data.message == \"string\") {\n                    $scope.app.notify(\"<center> \" + r.data.message + \"</center>\", \"success\");\n                }\n\n                if (method == \"custom\") {\n                    $scope.cFetched[table.toString()] = r.data.message;\n                    // $scope.$apply();\n                } else if (method == \"count\") {\n                    $scope.counted[table.toString()] = r.data.message;\n                    // $scope.$apply();\n                } else if (method != \"fetch\") {\n                    $scope.fetch(table, { specifics: data.specifics });\n                } else {\n                    $scope.fetched[table.toString()] = r.data.message;\n                    // $scope.$apply();\n                }\n\n                $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                resolve(r.data.message);\n            } else {\n                // POSTGRESQL ERROR FORMAT MATCHING\n                if (Array.isArray(r.data.message)) {\n\n                    var _v = r.data.message[2].match(/DETAIL:(.*)/);\n\n                    if (_v != undefined || _v != null) {\n                        r.data.message = _v[1];\n                    } else {\n                        r.data.message = r.data.message[2];\n                    }\n\n                    resolve(r.data.message);\n                }\n\n                $scope.app.notify(\"<center>\" + r.data.message + \"</center>\", 'danger');\n                reject($scope.app.makeResponse(500, v[1]));\n            }\n        });\n    };\n\n    //! BASIC ADDITION\n    $scope.add = function (table, data, cryptFields, cb) {\n        return $q(function (resolve, reject) {\n            //* populate the data object \n            data = data ? $scope.app.json(data) : {};\n            data.command = \"add\";\n            data.table = table != undefined ? table.toString().replace(/vw_/ig, '') : \"\";\n            data.extras = data ? data.extras ? data.extras.replace(/LIMIT 1/ig, '') : undefined : undefined;\n\n            //* Encrypt the specified cryptFields\n            if (cryptFields) {\n                data = $scope.encrypt_fields(cryptFields, data);\n            }\n\n            //* Perform the actual addition\n            $scope.app.db($scope.removeUnwanted(data)).then(function (r) {\n\n                $scope.generic_db_request_handler(\"add\", table, r, data).then(function (d) {\n                    if (cb) {\n                        cb(d);\n                    } else {\n                        resolve(d);\n                    }\n                }).catch(reject);\n            });\n        });\n    };\n\n    //! BASIC UPDATING\n    $scope.update = function (table, data, cryptFields, cb) {\n        return $q(function (resolve, reject) {\n\n            //* pack the relevant info into the data object\n            data = data ? $scope.app.json(data) : {};\n            data.command = \"update\";\n            data.table = table != undefined ? table.toString().replace(/vw_/ig, '') : \"\";\n            data.extras = data ? data.extras ? data.extras.replace(/LIMIT 1/ig, '') : undefined : undefined;\n\n            //* Encrypt the specified cryptFields\n            if (cryptFields) {\n\n                data = $scope.encrypt_fields(cryptFields, data);\n\n                // cryptFields.split(\",\")\n                //     .forEach((cryptField) => \n                //     {\n                //         if (data[cryptField]) \n                //         {\n                //             data[cryptField] = $scope.app.md5(data[cryptField])\n                //         }\n                //     });\n            }\n\n            //* perform the actual update\n            $scope.app.db($scope.removeUnwanted(data)).then(function (r) {\n\n                $scope.generic_db_request_handler(\"update\", table, r, data).then(function (d) {\n                    if (cb) {\n                        cb(d);\n                    } else {\n                        resolve(d);\n                    }\n                }).catch(reject);\n            });\n        });\n    };\n\n    //! BASIC DATA FETCHING\n    var do_fetch = function do_fetch(table, data, cryptFields) {\n        return $q(function (resolve, reject) {\n\n            //* populate the \"data\" object\n            data = data ? $scope.app.json(data) : {};\n            data.command = \"get\";\n            data.table = table;\n\n            //* Encrypt the specified cryptFields\n            if (cryptFields) {\n                data = $scope.encrypt_fields(cryptFields, data);\n            }\n\n            //* perform the actual data fetching\n            $scope.app.db($scope.removeUnwanted(data)).then(function (r) {\n\n                $scope.generic_db_request_handler(\"fetch\", table, r, data).then(function (d) {\n                    resolve(d);\n                }).catch(reject);\n            });\n        });\n    };\n\n    $scope.fetch = function (table, data, cryptFields, cb) {\n\n        if (Array.isArray(table)) {\n\n            var promiseArr = new Array();\n\n            table.filter(function (e) {\n                return typeof e[0] != 'undefined';\n            }).forEach(function (tData, tkey) {\n                promiseArr.push(do_fetch(tData[0], tData[1] || {}), cryptFields);\n            });\n\n            promiseArr = promiseArr.filter(function (e) {\n                return typeof e != 'undefined';\n            });\n\n            return $q.all(promiseArr);\n        } else {\n            return $q.resolve(do_fetch(table, data, cryptFields)).catch(function (e) {\n                // console.log(\"Encountered an error when processing the fetch function.\")\n                // console.dir(e)\n            });\n        }\n    };\n\n    //! BASIC DELETION  \n    $scope.del = function (table, data, cryptFields, cb) {\n        return $q(function (reject, resolve) {\n\n            //* populate the data object\n            data = data ? $scope.app.json(data) : {};\n            data.command = \"del\";\n            data.table = table != undefined ? table.toString().replace(/vw_/ig, '') : \"\";\n\n            //* Encrypt the specified cryptFields\n            if (cryptFields) {\n                data = $scope.encrypt_fields(cryptFields, data);\n            }\n\n            $scope.app.db($scope.removeUnwanted(data)).then(function (r) {\n\n                $scope.generic_db_request_handler(\"del\", table, r, data).then(function (d) {\n                    if (cb) {\n                        cb(d);\n                    } else {\n                        resolve(d);\n                    }\n                }).catch(reject);\n            });\n        });\n    };\n\n    //@ Handle basic application redirection\n    $scope.redirect = function (loc) {\n\n        if (loc) {\n            window.location = loc;\n        } else {\n            window.location = \"/#/framify\";\n        }\n        return $q.resolve(true).catch(function (e) {\n            console.log(\"Encountered an error when processing the redirect function.\");\n            console.dir(e);\n        });\n    };\n\n    // BASIC Custom Queries\n    $scope.custom = function (table, data, cryptFields, cb) {\n\n        return $q(function (resolve, reject) {\n\n            //* initialize the data object\n            data = data ? $scope.app.json(data) : {};\n            data.command = \"custom\";\n\n            //* Encrypt the specified cryptFields\n            if (cryptFields) {\n                data = $scope.encrypt_fields(cryptFields, data);\n            }\n\n            //* Perform the actual custom query\n            $scope.app.db($scope.removeUnwanted(data)).then(function (r) {\n\n                $scope.generic_db_request_handler(\"add\", table, r, data).then(function (d) {\n                    if (cb) {\n                        cb(d);\n                    } else {\n                        resolve(d);\n                    }\n                }).catch(reject);\n            });\n        });\n    };\n\n    //BASIC DATABASE INSTANCEOF COUNTER\n    $scope.count = function (table, data, cryptFields, cb) {\n        return $q(function (resolve, reject) {\n\n            data = data ? $scope.app.json(data) : {};\n            data.table = table;\n            data.command = \"count\";\n            data.token = data.token || {};\n\n            //* Encrypt the specified cryptFields\n            if (cryptFields) {\n                data = $scope.encrypt_fields(cryptFields, data);\n            }\n\n            //* perform the actual count\n            $scope.app.db($scope.removeUnwanted(data)).then(function (r) {\n\n                $scope.generic_db_request_handler(\"add\", table, r, data).then(function (d) {\n                    if (cb) {\n                        cb(d);\n                    } else {\n                        resolve(d);\n                    }\n                }).catch(reject);\n            });\n        });\n    };\n\n    /**\n     * TABLE SORTER\n     */\n    $scope.sort = function (keyname) {\n        $scope.sortKey = keyname; //set the sortKey to the param passed\n        $scope.reverse = !$scope.reverse; //if true make it false and vice versa\n    };\n\n    /**\n     *  DELETE UNWANTED FIELDS\n     */\n    $scope.sanitize = function (data, keys) {\n        if (keys) {\n\n            keys.split(\",\").forEach(function (key) {\n                delete data[key];\n            });\n\n            return $q.resolve(data).catch(function (e) {\n                console.log(\"Encountered an error when processing the sanitize function.\");\n                console.dir(e);\n            });\n        }\n    };\n\n    /**\n     * PUSH DATA TO OBJECT\n     */\n    $scope.dPush = $scope.d_push = function (obj, key, val) {\n        obj[key] = val;\n        return obj;\n    };\n\n    $scope.dPushify = $scope.d_pushify = function (obj, key, val) {\n        return $q.resolve($scope.dPush(obj, key, val));\n    };\n\n    /**\n     * @ MONTH REGULATION\n     */\n    $scope.currmoin = $scope.app.monthNum();\n    $scope.setMoin = $scope.set_moin = function (moin) {\n        $scope.currmoin = moin;\n    };\n\n    //@ DELETE UNWANTED PARAMETERS\n    $scope.delParams = $scope.del_params = function (mainObj, removeKeys) {\n        // $scope.app.clone\n        mainObj = mainObj || {};\n        removeKeys = removeKeys ? removeKeys.split(',') : [];\n\n        removeKeys.forEach(function (e) {\n            mainObj[e] = null;\n            delete mainObj[e];\n        });\n\n        return mainObj;\n    };\n\n    //@ INJECT A STANDARD WHERE \"Extras\" OBJECT\n    // addExtras(data.my_services,{username: storage.user.username},'username:WHERE owner','password,name,email,telephone,account_number,entity,active'),' ' )\n    $scope.addExtras = function (targetObj, extrasObj, subStrings, removeKeys) {\n        return $q(function (resolve, reject) {\n\n            targetObj = targetObj || {};\n            extrasObj = extrasObj || {};\n            subStrings = subStrings || '';\n            removeKeys = removeKeys || '';\n\n            var extras = '';\n\n            var k = [],\n                v = [];\n\n            //@ CAPTURE THE REMOVE KEYS\n            removeKeys = removeKeys.split(',').filter(function (e) {\n                return e;\n            });\n\n            removeKeys.forEach(function (e) {\n                extrasObj[e] = null;\n                delete extrasObj[e];\n            });\n\n            //@ CAPTURE REPLACE STRINGS\n            subStrings.split(',').forEach(function (e, i) {\n                var x = e.split(':');\n                k[i] = x[0];\n                v[i] = x[1];\n            });\n\n            //@ GET THE DEFINED KEYS\n            var keys = Object.keys(extrasObj);\n\n            //@ REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n            k.forEach(function (e, i) {\n\n                if (keys.indexOf(e) != -1) {\n\n                    extrasObj[v[i]] = extrasObj[e];\n                    extrasObj[e] = null;\n                    delete extrasObj[e];\n                }\n            });\n\n            k = Object.keys(extrasObj);\n            v = null;\n\n            k.forEach(function (e, i) {\n\n                var fg = !isNaN(extrasObj[e]) ? parseInt(extrasObj[e]) : \"'\" + extrasObj[e] + \"'\";\n                extras += ' ' + e + \"=\" + fg + \" AND\";\n            });\n\n            k = null;\n\n            targetObj.extras = extras.replace(/AND+$/, '');\n\n            resolve(targetObj);\n        });\n    };\n\n    $scope.add_extras = function (targetObj, extrasObj, subStrings, removeKeys) {\n        return $q(function (resolve, reject) {\n\n            targetObj = targetObj || {};\n            extrasObj = extrasObj || {};\n            subStrings = subStrings || ['', ''];\n            removeKeys = removeKeys || ['', ''];\n\n            var target = '';\n            var extras = '';\n\n            var target_k = [],\n                extras_k = [],\n                target_v = [],\n                extras_v = [];\n\n            //@ Ensure that the substitution and removal parameters are arrays \n            if (!Array.isArray(subStrings) || !Array.isArray(removeKeys)) {\n                reject('This Method only allows substitution and removal Arrays, <br> please consider using the <b><i>addExtras</i></b> object instead.');\n            } else {\n\n                //@ CAPTURE THE REMOVE KEYS\n                var target_removeKeys = removeKeys[0].split(',').filter(function (e) {\n                    return e;\n                });\n                var extras_removeKeys = removeKeys[1].split(',').filter(function (e) {\n                    return e;\n                });\n\n                //@ Remove specified keys from the target object\n                target_removeKeys.forEach(function (e) {\n                    targetObj[e] = null;\n                    delete targetObj[e];\n                });\n\n                //@ Remove specified keys from the extras object\n                extras_removeKeys.forEach(function (e) {\n                    extrasObj[e] = null;\n                    delete extrasObj[e];\n                });\n\n                //@ CAPTURE REPLACE STRINGS\n                var target_subStrings = subStrings[0].split(',');\n                var extras_subStrings = subStrings[1].split(',');\n\n                //@ Specify target key-value pairs\n                target_subStrings.forEach(function (e, i) {\n                    var x = e.split(':');\n                    target_k[i] = x[0];\n                    target_v[i] = x[1];\n                });\n\n                //@ Specify extras key-value pairs\n                extras_subStrings.forEach(function (e, i) {\n                    var x = e.split(':');\n                    extras_k[i] = x[0];\n                    extras_v[i] = x[1];\n                });\n\n                //@ GET THE DEFINED KEYS\n                var extras_keys = Object.keys(extrasObj);\n                var target_keys = Object.keys(targetObj);\n\n                //@ TARGET - REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n                target_k.forEach(function (e, i) {\n\n                    if (target_keys.indexOf(e) != -1) {\n\n                        // // console.log( `Renaming the target ${e} to ${target_v[i]}` )\n\n                        targetObj[target_v[i]] = targetObj[e];\n                        targetObj[e] = null;\n                        delete targetObj[e];\n                    }\n                });\n\n                //@ EXTRAS - REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n                extras_k.forEach(function (e, i) {\n\n                    if (extras_keys.indexOf(e) != -1) {\n\n                        // // console.log( `Renaming the extras ${e} to ${extras_v[i]}` )\n                        extrasObj[extras_v[i]] = extrasObj[e];\n                        extrasObj[e] = null;\n                        delete extrasObj[e];\n                    }\n                });\n\n                //@ SQLify the extras object\n                extras_k = null;\n\n                extras_k = Object.keys(extrasObj);\n                extras_v = null;\n\n                extras_k.forEach(function (e, i) {\n\n                    var fg = !isNaN(extrasObj[e]) ? parseInt(extrasObj[e]) : \"'\" + extrasObj[e] + \"'\";\n                    extras += ' ' + e + \"=\" + fg + \" AND\";\n                });\n\n                extras_k = null;\n\n                targetObj.extras = extras.replace(/AND+$/, '');\n\n                resolve(targetObj);\n            }\n        });\n    };\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\n    // ADDITIONS ON PROBATION\n    // ----\n\n    //@ LOAD A SERVICE ONTO THE STAGE\n    $scope.service = {};\n    $scope.entity = {};\n\n    $scope.showService = function (serviceData) {\n        $scope.service.available = true;\n        $scope.service.current = serviceData;\n        //$scope.$apply();\n    };\n\n    $scope.showEntity = function (serviceData) {\n        $scope.entity.available = true;\n        $scope.entity.current = serviceData;\n        //$scope.$apply();\n    };\n\n    //@ Count my entities\n    $scope.howMany = function (table, data) {\n        var data = data || { owner: $scope.storage.user.username };\n        data = data ? $scope.app.json(data) : {};\n        data.table = table || 'entities';\n        data.command = \"count\";\n        data.token = {};\n\n        $scope.app.db($scope.removeUnwanted(data)).then(function (r) {\n\n            $scope.generic_db_request_handler(\"count\", table, r, data).then(function (d) {\n                resolve(d);\n            }).catch(reject);\n        });\n    };\n\n    // ----\n\n    //@ FRAMIFY HANDLERS\n\n    $scope.data.login = $scope.data.login || {};\n\n    $scope.data.me = $scope.data.me || {};\n\n    $scope.setData;\n\n    //@ Initialize the handlers object\n    $scope.handlers = {};\n    $scope.r_handlers = $scope.handlers;\n\n    //@ The registration success handler\n    $scope.handlers.regSuccess = $scope.r_handlers.regSuccess = $scope.handlers.reg_success = $scope.r_handlers.reg_success = function (message) {\n        $scope.app.notify(\"The user has been registered\");\n        $state.go(\"app.login\");\n    };\n\n    //@ The successful login handler\n    $scope.handlers.loginSuccess = $scope.r_handlers.loginSuccess = $scope.handlers.login_success = $scope.r_handlers.login_success = function (message) {\n        $scope.app.notify(\"<i class='fa fa-2x fa-spin fa-circle-o-notch'></i> Processing your login data\", 'success', 4000);\n        $state.go(\"app.panel\");\n    };\n\n    //@ The registration error handler\n    $scope.handlers.regError = $scope.r_handlers.regError = $scope.handlers.reg_error = $scope.r_handlers.reg_error = function (message) {\n        $scope.app.alert(\"<font color='red'>Signup Error</font>\", message);\n    };\n\n    //@ The login error handler\n    $scope.handlers.loginError = $scope.r_handlers.loginError = $scope.handlers.login_error = $scope.r_handlers.login_error = function (message) {\n        $scope.app.alert(\"<font color='red'>Login Error</font>\", message);\n    };\n\n    //@ The identity check verification handler\n    $scope.handlers.identity = $scope.r_handlers.identity = function () {\n        return $q(function (reject, resolve) {\n\n            $http({\n                method: \"GET\",\n                url: $scope.app.hlink.replace(/:2433/ig, '') + \":2433/auth/me\", //`${$scope.remoteAuth}:2433/auth/me`, \n                headers: { Authorization: $scope.storage.framify_user.token }\n            }).success(function (response) {\n                resolve($scope.data.me = response.data.message);\n            }).error(function (error) {\n                console.dir(error);\n                $scope.auth.Logout().then(function () {\n                    $scope.data.me = undefined;\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Your lease has expired <br>Please Login to continue.\", 'danger');\n                    reject($state.go(\"app.login\"));\n                });\n            });\n        });\n    };\n\n    //@ The login status check handler\n    $scope.handlers.isLogedIn = $scope.handlers.is_loged_in = function () {\n        return $q(function (resolve, reject) {\n            if (!$scope.storage.framify_user) {\n                $scope.data.me = undefined;\n                // console.log(\"\\nNo localstorage value is defined\\n\")\n\n                if ($state.current.name != \"app.login\") {\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Please Login to continue.\", 'danger');\n                    reject($state.go(\"app.login\"));\n                }\n            } else if (!$http.defaults.headers.common.Authorization || $http.defaults.headers.common.Authorization == undefined || $http.defaults.headers.common.Authorization == '') {\n\n                // console.log(\"\\nThe authentication header is not yet defined\\n\")\n                $scope.auth.SetAuth(undefined).then(function () {\n                    // console.log(`\\nThe authentication header has been set to ${$http.defaults.headers.common.Authorization}\\n`)\n\n                    if ($state.current.name == \"app.login\") {\n                        resolve($state.go(\"app.panel\"));\n                    } else {\n                        resolve();\n                    }\n                });\n            } else {\n\n                if ($state.current.name == \"app.login\") {\n                    resolve($state.go(\"app.panel\"));\n                } else {\n                    resolve();\n                }\n            }\n        });\n    };\n\n    $scope.r_handlers.isLogedIn = $scope.r_handlers.is_loged_in = function () {\n        return $q(function (resolve, reject) {\n            if (!$scope.storage.framify_user) {\n                $scope.data.me = undefined;\n\n                if ($state.current.name != \"app.login\") {\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Please Login to continue.\", 'danger');\n                    reject($state.go(\"app.login\"));\n                }\n            } else if (!$http.defaults.headers.common.Authorization || $http.defaults.headers.common.Authorization == undefined || $http.defaults.headers.common.Authorization == '') {\n                $scope.remoteAuth.SetAuth(undefined).then(function () {\n\n                    if ($state.current.name == \"app.login\") {\n                        resolve($state.go(\"app.panel\"));\n                    } else {\n                        resolve();\n                    }\n                });\n            } else {\n                if ($state.current.name == \"app.login\") {\n                    resolve($state.go(\"app.panel\"));\n                } else {\n                    resolve();\n                }\n            }\n        });\n    };\n\n    $scope.data.recovery = {};\n    $scope.data.queued = [];\n\n    //@ The recovery attempt function\n    $scope.recover_password = function (email) {\n\n        $scope.data.recovery.response = \"Loading ...\";\n\n        $http({\n            method: \"POST\",\n            url: $scope.remoteAuth.url + \"/passwords/forgot\",\n            data: {\n                email: email\n            }\n        }).then(function (response) {\n            $scope.data.recovery.response = response.data.data.message;\n            $scope.app.alert('Password Recovery', response.data.data.message);\n            $scope.data.recovery.email = \"\";\n        });\n    };\n\n    //@ iNITIATE THE SENDING OF A WELCOME EMAIL UPON SIGNUP\n    $scope.isSignedUp = function (obj) {\n        return $q(function (resolve, reject) {\n            $scope.app.welcomeMail({\n                from: \"Framify Accounts <accounts@bixbyte.io>\",\n                to: obj.email,\n                subject: \"Welcome to our platform\",\n                data: { name: obj[\"name.first\"], telephone: obj.telephone, username: obj[\"account.name\"] }\n            }, $scope.remoteAuth.url + \"/welcome\").then(function (r) {\n                $scope.app.alert(\"User Added\", \"<center style='font-size:1.4em;'>The user <font color='green'>\" + obj['name.first'] + \"</font>.<br><br> has successfully been registered.</center>\"); // window.location = \"http://admin.infomed.co.ke\";\n                resolve(true);\n            }).catch(function (e) {\n                $scope.app.alert(\"User Added\", \"<center style='font-size:1.4em;'>The user <font color='green'>\" + obj['name.first'] + \"</font>.<br><br> has successfully been registered.</center>\");\n                resolve(true);\n            });\n        });\n    };\n\n    $scope.SmsSuccess = function (response) {\n        delete $scope.storage.framify_user[\"nullify\"];\n        $scope.app.alert('SMS REQUEUE RESPONSE', \"Message(s) successfuly requeued!\");\n    };\n\n    $scope.SmsError = function (response) {\n        delete $scope.storage.framify_user[\"nullify\"];\n        $scope.app.alert('<font color=\"red\">SMS REQUEUE RESPONSE</font>', $scope.app.str(response.data || response));\n    };\n}])\n\n//@ A DIRECTIVE THAT ALLOWS THE EDITING OF DATA IN A MODEL\n.directive(\"contenteditable\", [function () {\n    return {\n        restrict: \"A\",\n        require: \"ngModel\",\n        link: function link(scope, element, attrs, ngModel) {\n\n            function read() {\n                ngModel.$setViewValue(element.html());\n            }\n\n            ngModel.$render = function () {\n                element.html(ngModel.$viewValue || \"\");\n            };\n\n            element.bind(\"blur keyup change\", function () {\n                scope.$apply(read);\n            });\n        }\n    };\n}])\n\n//@ Handle the upload of files in angular\n.directive(\"fileModel\", [\"$parse\", function ($parse) {\n    return {\n        restrict: 'A',\n        link: function link(scope, element, attrs) {\n            var model = $parse(attrs.fileModel);\n            var modelSetter = model.assign;\n\n            element.bind('change', function () {\n                scope.$apply(function () {\n                    if (attrs.multiple) {\n                        modelSetter(scope, element[0].files);\n                    } else {\n                        modelSetter(scope, element[0].files[0]);\n                    }\n                });\n            });\n        }\n    };\n}])\n\n//!CONFIGURE THE BNASIC PRE-RUNTIME STATES OF THE APPLICATION\n.config([\"ChartJsProvider\", \"$httpProvider\", function (ChartJsProvider, $httpProvider) {\n\n    //@ Set the authentication header for each request\n    $httpProvider.interceptors.push('authIntercept');\n\n    //@SET THE DEFAULT CHART COLORS\n    // ChartJsProvider.setOptions({ colors: ['#FF0000', '#FF00FF', '#00FFFF', '#00FF00', '#0000FF', '#FF00FF', '#4D5360'] });\n}])\n\n//@ Allow ng-bind-html with directives\n.directive(\"compile\", [\"$compile\", function ($compile) {\n    return function (scope, element, attrs) {\n        scope.$watch(function (scope) {\n            // watch the 'compile' expression for changes\n            return scope.$eval(attrs.compile);\n        }, function (value) {\n            // when the 'compile' expression changes\n            // assign it into the current DOM\n            element.html(value);\n\n            // compile the new DOM and link it to the current\n            // scope.\n            // NOTE: we only compile .childNodes so that\n            // we don't get into infinite loop compiling ourselves\n            $compile(element.contents())(scope);\n        });\n    };\n}]);","// \"jsonFormatter\",\nangular.module(\"framify.js\", \n                            [\n                                \"ui.router\"\n                                ,\"framify-paginate\"\n                                ,\"ngStorage\"\n                                ,\"chart.js\"\n                                ,\"ngAria\"\n                                ,\"ngMaterial\"\n                                ,\"ngMessages\"\n                            ])\n/**\n * Handles the injection of the Authentication Headers with each http call\n */\n.factory(\"authIntercept\",\n                        [\n                            \"$localStorage\"\n                            ,($localStorage) =>\n{\n    return {\n\n            request:  (config) => {\n\n                //@ If the local user authentication object is defined\n                if( $localStorage.framify_user  )\n                {\n\n                    \n                    //@ If the authentication bypass is not set\n                    if( $localStorage.framify_user.nullify != true )\n                    {\n\n                        //@ If the user details exist\n                        if($localStorage.framify_user.me)\n                        {\n                            //@ Append them to the 'AuthData' Header\n                            config.headers.AuthData = JSON.stringify( $localStorage.framify_user.me );\n                        }\n\n                        //@ If an application key is defined\n                        if($localStorage.framify_user.key)\n                        {\n                            //@ Append the 'app_key' header\n                            config.headers.App_Key  = $localStorage.framify_user.key;\n                        }\n\n                        //@ Append the 'Authorization' header\n                        config.headers.Authorization = $localStorage.framify_user.token;\n\n                        return config;\n\n                    }\n                    //@ If the credentials bypass is specified\n                    else\n                    {\n\n                       //@ Pass the \"authorization\" header since others are not needed\n                        config.headers.Authorization = $localStorage.framify_user.token\n                        return config;\n\n                    }  \n\n                }\n                //@ If the user isn't loged in, continue as is\n                else\n                {\n\n                    return config;\n\n                }\n                \n            }\n        }\n    }]\n)\n\n//@ Basic Application Essentials\n.service(\"app\", [\n                    \"$http\"\n                    ,\"remoteAuth\"\n                    ,\"$q\"\n                    ,\"pdfGen\"\n                    ,function($http, remoteAuth, $q, pdfGen)\n{\n\n    let app             = this;\n\n    app.pdfGen         = pdfGen;\n\n    //@ Add provided numbers\n    app.add = ( a,b ) => !isNaN( (parseInt(a) + parseInt(b)) ) ? (parseInt(a) + parseInt(b)) : '...';\n\n    //!SETUP THE APPLICATION BASICS\n    const url           = window.location.href.split('/').filter( (urlPortion) => (urlPortion != '' && urlPortion != 'http:' && urlPortion != 'https:') );\n    let pathPos         = window.location.href.split('/').filter( (urlPortion) => (urlPortion != '') );\n\n    //! APP CONFIGURATIONS\n    app.scheme         = pathPos[0];\n    app.ip             = url[0].split(':')[0];\n    app.port           = url[0].split(':')[1];\n    app.hlink          = `${app.scheme}//${app.ip}${( ( app.port != undefined ) ? \":\" + app.port : \"\" )}`;\n\n    //!APPLICATION URL\n    app.url            = app.hlink;\n\n    const hlink         = app.hlink;\n\n    app.nav            = [];\n\n    app.logger         = (a) => {  console.dir(a); };\n\n    //@Perform simple redirects\n    app.redirect       = (loc) => \n    {\n        if (loc) {\n            window.location = loc\n        } else {\n            window.location = \"/\";\n        }\n        return $q.resolve(true)\n            .catch((e) => \n            {\n                console.log(\"Encountered an error when processing the redirect function.\")\n                console.dir(e)\n            })\n    };\n\n    //@ Add a Key=>value pair to an object being careful to parse integers\n    app.setVar         = (obj, key, val) => \n    {\n        obj = (obj) ? obj : {};\n        obj[key] = (!isNaN(val)) ? parseInt(val) : val;\n        return obj;\n    };\n\n    //@ Add a key=>value pair to an object without type concerns\n    app.setVarify        = (obj, key, val) => $q.resolve(app.setVar(obj,key,val));\n   \n    //@ Assign a key=>value pair to an object without creating one if not exists\n    app.set            = (obj, key, value) =>  obj[key] = value;\n    \n    //@ Fetch the value at key {X} in an object\n    app.getVal         = (obj, key) => obj[key];    \n    app.getValify      = (obj,key) => $q.resolve( app.getval(obj,key) );\n\n    //* CONDITIONALLY TRANSFORM TO STRING\n    app.str            = (obj) => (typeof(obj) === \"object\") ? JSON.stringify(obj) : obj;\n    app.stringify      = (obj) => $q.resolve(app.str(obj));\n\n    //* CONDITIONALLY TRANSFORM TO JSON\n    app.json           = (obj) => (typeof(obj) === \"object\") ? obj : JSON.parse(obj);\n    app.jsonify        = (obj) => $q.resolve(app.json(obj))\n\n    //* CONDITIONALLY RETURN AN MD5 HASH\n    app.md5            = (str) => (/^[a-f0-9]{32}$/gm.test(str)) ? str : CryptoJS.MD5(str).toString();\n    app.md5ify         = (str) => $q.resolve(app.md5(str));\n\n    //BASE64 ENCODE A STRING\n    app.base64_encode  = (string) => CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(string));\n    app.base64_encodify= (string) => $q.resolve(app.base64_encode(string));\n\n    //BASE64 DECODE A STRING\n    app.base64_decode  = (encoded) => (CryptoJS.enc.Base64.parse(encoded)).toString(CryptoJS.enc.Utf8);\n    app.base64_decodify= (encoded) => $q.resolve(app.base64_decode(encoded));\n\n    //@ THE OFFICIAL FILE UPLOAD SERVICE\n    app.upload         = (data, destination) => \n    {\n\n        return $q((resolve, reject) => {\n\n            //* create a formdata object\n            let fd = new FormData();\n\n            //* add the defined keys to the formdata object\n            for (var key in data) {\n                fd.append(key, data[key]);\n            };\n\n            //* post the data to the /upload route of the running server\n            $http.post(`${hlink}/upload/${destination}`, fd, {\n\n                transformRequest: angular.identity,\n\n                //* ensure automatic content-type settng\n                headers: { 'Content-Type': undefined }\n\n            }).then(d => resolve(d));\n\n        });\n\n    };\n\n    //@ GET A KEYS ARRAY FROM AN OBJECT\n    app.keys           = obj => Object.keys(obj);\n\n    //@ GET A VALUES ARRAY FROM AN OBJECT\n    app.vals           = obj =>  Object.keys(obj).reduce((prev,curr,idx)=> { prev[idx] = curr;  return prev;  },[]);\n    app.valsify        = obj => $q.resolve( app.vals(obj) );\n\n    //@ CREATE A COPY OF AN OBJECT\n    app.clone          = (obj) => \n    {\n\n        //* ensure that the object is defined\n        if (null == obj || \"object\" != typeof obj) return obj;\n\n        //* call the object constructor prototype\n        let copy = obj.constructor();\n\n        //* clone all attributes of the parent object into a new object\n        for (let attr in obj) {\n            if (obj.hasOwnProperty(attr)) copy[attr] = (/^[0-9]+$/.test(obj[attr])) ? parseInt(obj[attr]) : obj[attr];\n        }\n\n        //* return the newly created object\n        return copy;\n\n    };\n    app.clonify        = (obj) => $q.resolve( app.clone(obj) );\n\n\n    //! PARSE TO AN INTEGER\n    app.parseInt       = str => parseInt(str);\n    app.parseIntify    = (str) => $q.resolve( app.parseInt(str) );\n\n    //! EMPTY CALLBACK\n    app.doNothing      = () => $q.resolve();\n\n    //@ FIND NUMBERS IN A STRING\n    app.getNumbers     = (str, firstOnly = true, numMatch = /\\d+/g ) =>  (firstOnly) ? str.toString().match(numMatch)[0] : str.toString().match(numMatch);\n    app.getNumbersify  = ( str, firstOnly =true, numMatch = /\\d+/g ) => $q.resolve( app.getNumbers(( str, firstOnly =true, numMatch = /\\d+/g )) );\n\n    //! SET A NOTIFICATION \n    app.notify         = (notificationContent, notificationClass, notificationTimeout, position) => \n    {\n\n        UIkit.notify({\n            message: `<center>${( notificationContent || 'A blank notification was triggered.')}</center>`,\n            status: notificationClass || 'info',\n            timeout: notificationTimeout || 4000,\n            pos: 'top-center' || position\n        });\n\n        return $q.resolve(true)\n                .catch( (e) => \n                {\n                    console.dir(e.message);\n                });\n\n    };\n\n    const notify        = app.notify;\n\n    app.countries      = [{ name: \"Afghanistan\", value: \"1\" }, { name: \"Albania\", value: \"2\" }, { name: \"Algeria\", value: \"3\" }, { name: \"American Samoa\", value: \"4\" }, { name: \"Andorra\", value: \"5\" }, { name: \"Angola\", value: \"6\" }, { name: \"Anguilla\", value: \"7\" }, { name: \"Antarctica\", value: \"8\" }, { name: \"Antigua and Barbuda\", value: \"9\" }, { name: \"Argentina\", value: \"10\" }, { name: \"Armenia\", value: \"11\" }, { name: \"Aruba\", value: \"12\" }, { name: \"Australia\", value: \"13\" }, { name: \"Austria\", value: \"14\" }, { name: \"Azerbaijan\", value: \"15\" }, { name: \"Bahamas\", value: \"16\" }, { name: \"Bahrain\", value: \"17\" }, { name: \"Bangladesh\", value: \"18\" }, { name: \"Barbados\", value: \"19\" }, { name: \"Belarus\", value: \"20\" }, { name: \"Belgium\", value: \"21\" }, { name: \"Belize\", value: \"22\" }, { name: \"Benin\", value: \"23\" }, { name: \"Bermuda\", value: \"24\" }, { name: \"Bhutan\", value: \"25\" }, { name: \"Bolivia\", value: \"26\" }, { name: \"Bosnia and Herzegowina\", value: \"27\" }, { name: \"Botswana\", value: \"28\" }, { name: \"Bouvet Island\", value: \"29\" }, { name: \"Brazil\", value: \"30\" }, { name: \"British Indian Ocean Territory\", value: \"31\" }, { name: \"Brunei Darussalam\", value: \"32\" }, { name: \"Bulgaria\", value: \"33\" }, { name: \"Burkina Faso\", value: \"34\" }, { name: \"Burundi\", value: \"35\" }, { name: \"Cambodia\", value: \"36\" }, { name: \"Cameroon\", value: \"37\" }, { name: \"Canada\", value: \"38\" }, { name: \"Cape Verde\", value: \"39\" }, { name: \"Cayman Islands\", value: \"40\" }, { name: \"Central African Republic\", value: \"41\" }, { name: \"Chad\", value: \"42\" }, { name: \"Chile\", value: \"43\" }, { name: \"China\", value: \"44\" }, { name: \"Christmas Island\", value: \"45\" }, { name: \"Cocos (Keeling) Islands\", value: \"46\" }, { name: \"Colombia\", value: \"47\" }, { name: \"Comoros\", value: \"48\" }, { name: \"Congo\", value: \"49\" }, { name: \"Congo, the Democratic Republic of the\", value: \"50\" }, { name: \"Cook Islands\", value: \"51\" }, { name: \"Costa Rica\", value: \"52\" }, { name: \"Cote d\\'Ivoire\", value: \"53\" }, { name: \"Croatia (Hrvatska)\", value: \"54\" }, { name: \"Cuba\", value: \"55\" }, { name: \"Cyprus\", value: \"56\" }, { name: \"Czech Republic\", value: \"57\" }, { name: \"Denmark\", value: \"58\" }, { name: \"Djibouti\", value: \"59\" }, { name: \"Dominica\", value: \"60\" }, { name: \"Dominican Republic\", value: \"61\" }, { name: \"East Timor\", value: \"62\" }, { name: \"Ecuador\", value: \"63\" }, { name: \"Egypt\", value: \"64\" }, { name: \"El Salvador\", value: \"65\" }, { name: \"Equatorial Guinea\", value: \"66\" }, { name: \"Eritrea\", value: \"67\" }, { name: \"Estonia\", value: \"68\" }, { name: \"Ethiopia\", value: \"69\" }, { name: \"Falkland Islands (Malvinas)\", value: \"70\" }, { name: \"Faroe Islands\", value: \"71\" }, { name: \"Fiji\", value: \"72\" }, { name: \"Finland\", value: \"73\" }, { name: \"France\", value: \"74\" }, { name: \"France Metropolitan\", value: \"75\" }, { name: \"French Guiana\", value: \"76\" }, { name: \"French Polynesia\", value: \"77\" }, { name: \"French Southern Territories\", value: \"78\" }, { name: \"Gabon\", value: \"79\" }, { name: \"Gambia\", value: \"80\" }, { name: \"Georgia\", value: \"81\" }, { name: \"Germany\", value: \"82\" }, { name: \"Ghana\", value: \"83\" }, { name: \"Gibraltar\", value: \"84\" }, { name: \"Greece\", value: \"85\" }, { name: \"Greenland\", value: \"86\" }, { name: \"Grenada\", value: \"87\" }, { name: \"Guadeloupe\", value: \"88\" }, { name: \"Guam\", value: \"89\" }, { name: \"Guatemala\", value: \"90\" }, { name: \"Guinea\", value: \"91\" }, { name: \"Guinea-Bissau\", value: \"92\" }, { name: \"Guyana\", value: \"93\" }, { name: \"Haiti\", value: \"94\" }, { name: \"Heard and Mc Donald Islands\", value: \"95\" }, { name: \"Holy See (Vatican City State)\", value: \"96\" }, { name: \"Honduras\", value: \"97\" }, { name: \"Hong Kong\", value: \"98\" }, { name: \"Hungary\", value: \"99\" }, { name: \"Iceland\", value: \"100\" }, { name: \"India\", value: \"101\" }, { name: \"Indonesia\", value: \"102\" }, { name: \"Iran (Islamic Republic of)\", value: \"103\" }, { name: \"Iraq\", value: \"104\" }, { name: \"Ireland\", value: \"105\" }, { name: \"Israel\", value: \"106\" }, { name: \"Italy\", value: \"107\" }, { name: \"Jamaica\", value: \"108\" }, { name: \"Japan\", value: \"109\" }, { name: \"Jordan\", value: \"110\" }, { name: \"Kazakhstan\", value: \"111\" }, { name: \"Kenya\", value: \"112\" }, { name: \"Kiribati\", value: \"113\" }, { name: \"Korea, Democratic People\\'s Republic of\", value: \"114\" }, { name: \"Korea, Republic of\", value: \"115\" }, { name: \"Kuwait\", value: \"116\" }, { name: \"Kyrgyzstan\", value: \"117\" }, { name: \"Lao, People\\'s Democratic Republic\", value: \"118\" }, { name: \"Latvia\", value: \"119\" }, { name: \"Lebanon\", value: \"120\" }, { name: \"Lesotho\", value: \"121\" }, { name: \"Liberia\", value: \"122\" }, { name: \"Libyan Arab Jamahiriya\", value: \"123\" }, { name: \"Liechtenstein\", value: \"124\" }, { name: \"Lithuania\", value: \"125\" }, { name: \"Luxembourg\", value: \"126\" }, { name: \"Macau\", value: \"127\" }, { name: \"Macedonia, The Former Yugoslav Republic of\", value: \"128\" }, { name: \"Madagascar\", value: \"129\" }, { name: \"Malawi\", value: \"130\" }, { name: \"Malaysia\", value: \"131\" }, { name: \"Maldives\", value: \"132\" }, { name: \"Mali\", value: \"133\" }, { name: \"Malta\", value: \"134\" }, { name: \"Marshall Islands\", value: \"135\" }, { name: \"Martinique\", value: \"136\" }, { name: \"Mauritania\", value: \"137\" }, { name: \"Mauritius\", value: \"138\" }, { name: \"Mayotte\", value: \"139\" }, { name: \"Mexico\", value: \"140\" }, { name: \"Micronesia, Federated States of\", value: \"141\" }, { name: \"Moldova, Republic of\", value: \"142\" }, { name: \"Monaco\", value: \"143\" }, { name: \"Mongolia\", value: \"144\" }, { name: \"Montserrat\", value: \"145\" }, { name: \"Morocco\", value: \"146\" }, { name: \"Mozambique\", value: \"147\" }, { name: \"Myanmar\", value: \"148\" }, { name: \"Namibia\", value: \"149\" }, { name: \"Nauru\", value: \"150\" }, { name: \"Nepal\", value: \"151\" }, { name: \"Netherlands\", value: \"152\" }, { name: \"Netherlands Antilles\", value: \"153\" }, { name: \"New Caledonia\", value: \"154\" }, { name: \"New Zealand\", value: \"155\" }, { name: \"Nicaragua\", value: \"156\" }, { name: \"Niger\", value: \"157\" }, { name: \"Nigeria\", value: \"158\" }, { name: \"Niue\", value: \"159\" }, { name: \"Norfolk Island\", value: \"160\" }, { name: \"Northern Mariana Islands\", value: \"161\" }, { name: \"Norway\", value: \"162\" }, { name: \"Oman\", value: \"163\" }, { name: \"Pakistan\", value: \"164\" }, { name: \"Palau\", value: \"165\" }, { name: \"Panama\", value: \"166\" }, { name: \"Papua New Guinea\", value: \"167\" }, { name: \"Paraguay\", value: \"168\" }, { name: \"Peru\", value: \"169\" }, { name: \"Philippines\", value: \"170\" }, { name: \"Pitcairn\", value: \"171\" }, { name: \"Poland\", value: \"172\" }, { name: \"Portugal\", value: \"173\" }, { name: \"Puerto Rico\", value: \"174\" }, { name: \"Qatar\", value: \"175\" }, { name: \"Reunion\", value: \"176\" }, { name: \"Romania\", value: \"177\" }, { name: \"Russian Federation\", value: \"178\" }, { name: \"Rwanda\", value: \"179\" }, { name: \"Saint Kitts and Nevis\", value: \"180\" }, { name: \"Saint Lucia\", value: \"181\" }, { name: \"Saint Vincent and the Grenadines\", value: \"182\" }, { name: \"Samoa\", value: \"183\" }, { name: \"San Marino\", value: \"184\" }, { name: \"Sao Tome and Principe\", value: \"185\" }, { name: \"Saudi Arabia\", value: \"186\" }, { name: \"Senegal\", value: \"187\" }, { name: \"Seychelles\", value: \"188\" }, { name: \"Sierra Leone\", value: \"189\" }, { name: \"Singapore\", value: \"190\" }, { name: \"Slovakia (Slovak Republic)\", value: \"191\" }, { name: \"Slovenia\", value: \"192\" }, { name: \"Solomon Islands\", value: \"193\" }, { name: \"Somalia\", value: \"194\" }, { name: \"South Africa\", value: \"195\" }, { name: \"South Georgia and the South Sandwich Islands\", value: \"196\" }, { name: \"South Sudan\", value: \"197\" }, { name: \"Spain\", value: \"198\" }, { name: \"Sri Lanka\", value: \"199\" }, { name: \"St. Helena\", value: \"200\" }, { name: \"St. Pierre and Miquelon\", value: \"201\" }, { name: \"Sudan\", value: \"202\" }, { name: \"Suriname\", value: \"203\" }, { name: \"Svalbard and Jan Mayen Islands\", value: \"204\" }, { name: \"Swaziland\", value: \"205\" }, { name: \"Sweden\", value: \"206\" }, { name: \"Switzerland\", value: \"207\" }, { name: \"Syrian Arab Republic\", value: \"208\" }, { name: \"Taiwan, Province of China\", value: \"209\" }, { name: \"Tajikistan\", value: \"210\" }, { name: \"Tanzania, United Republic of\", value: \"211\" }, { name: \"Thailand\", value: \"212\" }, { name: \"Togo\", value: \"213\" }, { name: \"Tokelau\", value: \"214\" }, { name: \"Tonga\", value: \"215\" }, { name: \"Trinidad and Tobago\", value: \"216\" }, { name: \"Tunisia\", value: \"217\" }, { name: \"Turkey\", value: \"218\" }, { name: \"Turkmenistan\", value: \"219\" }, { name: \"Turks and Caicos Islands\", value: \"220\" }, { name: \"Tuvalu\", value: \"221\" }, { name: \"Uganda\", value: \"222\" }, { name: \"Ukraine\", value: \"223\" }, { name: \"United Arab Emirates\", value: \"224\" }, { name: \"United Kingdom\", value: \"225\" }, { name: \"United States\", value: \"226\" }, { name: \"United States Minor Outlying Islands\", value: \"227\" }, { name: \"Uruguay\", value: \"228\" }, { name: \"Uzbekistan\", value: \"229\" }, { name: \"Vanuatu\", value: \"230\" }, { name: \"Venezuela\", value: \"231\" }, { name: \"Vietnam\", value: \"232\" }, { name: \"Virgin Islands (British)\", value: \"233\" }, { name: \"Virgin Islands (U.S.)\", value: \"234\" }, { name: \"Wallis and Futuna Islands\", value: \"235\" }, { name: \"Western Sahara\", value: \"236\" }, { name: \"Yemen\", value: \"237\" }, { name: \"Yugoslavia\", value: \"238\" }, { name: \"Zambia\", value: \"239\" }, { name: \"Zimbabwe\", value: \"240\" }];\n\n\n    //! BASIC FRAMIFY FORMAT RESPONSE FORMATTER\n    app.makeResponse   = app.make_response = (response, message, command) => \n    {\n        return {\n            response,\n            data: { message, command }\n        };\n\n    };\n\n    //!DATE FORMATERS\n    //* date object     \n    app.date = () => new Date();\n\n    //@ Convert to a date object\n    app.toDate         = app.to_date = (d) => new Date(d);\n           \n    //* simple date\n    app.newDate        = app.new_date = () => new Date().toDateString();\n\n    //* isodate\n    app.isoDate        = app.iso_date = () => new Date().format('isoDate');\n\n    //* get the isoDate of the specified date\n    app.getIsoDate     = app.get_iso_date = (d) => new Date(d).format('isoDate');\n\n    //* get the isoDate of a date object\n    app.toIsoDate      = app.to_iso_date = dObj => dObj.format('isoDate');\n\n    //* get the isoString of a datestring\n    app.getIsoString   = app.get_iso_string = (d) => new Date(d).toISOString();    \n\n    //* custom datetime\n    app.dateTime       = app.date_time = () => new Date().format('dateTime');\n\n    //* set the date in the custom datetime format\n    app.getDateTime    = app.get_date_time = d => new Date(d).format('dateTime');\n\n    //* Convert a date to the dd-mm-yyyy hh:mm format\n    app.toDateTime     = app.to_date_time = dObj => dObj.format('dateTime');\n\n    //* month number\n    app.monthNum       = app.month_num = () => new Date().format('monthNum');\n\n    //* get month number of the specified date\n    app.getMonthNum    = app.get_month_num = d => new Date(d).format('monthNum');\n\n    //* get date objects' month number\n    app.toMonthNum     = app.to_month_num = dObj => dObj.format('monthNum');\n\n    //* MONTHS ARRAY\n    const $month_array    = app.month_array = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    app.month_o_array  = [\n        { id: 0, name: \"January\" }, { id: 1, name: \"February\" }, { id: 2, name: \"March\" }, { id: 3, name: \"April\" }, { id: 4, name: \"May\" }, { id: 5, name: \"June\" }, { id: 6, name: \"July\" }, { id: 7, name: \"August\" }, { id: 8, name: \"September\" }, { id: 9, name: \"October\" }, { id: 10, name: \"November\" }, { id: 11, name: \"December\" }\n    ];\n\n    app.printMonths = () =>  $month_o_array\n                                .reduce((mobj,m)=>{ mobj[m] = m },{})\n                                .filter(m=>m)\n\n    //! HANDLE APPLICATION SERVICE REQUESTS\n    app.ajax           = (method, target, data) => \n        $.ajax({\n            method: method || \"POST\",\n            url: target,\n            data: data,\n            dataType: 'jsonp',\n            headers: { 'Access-Control-Allow-Origin': \"*\" }\n        });\n\n    //!HANDLE JSON REQUESTS \n    app.getJSON        = app.get_json = (target) => $.getJSON(target.replace(/callback=?/ig, \"\") + '?callback=?');\n\n    //! HANDLE CORS CALLS WITH jsonp ENABLED\n    app.cgi            = (method, url, data) => \n        $.ajax({\n            method: method || \"GET\",\n            url: url || app.hlink,\n            data: data,\n            dataType: 'jsonp',\n            headers: { 'Access-Control-Allow-Origin': \"*\" }\n        });\n\n    //!HANDLE THE DISPLAY OF DIALOG BOXES\n\n    //* SHOW A \"LOADING\" ELEMENT\n    app.loadify        = (duration=6000, message) => \n        $q((resolve, reject) => \n        {\n            let modal = UIkit.modal.blockUI('<center><i style=\"color:blue;\" class=\"fa fa fa-spinner fa-pulse fa-5x fa-fw\"></i></center>' + ((message) ? `<center><br>${message}</center>` : \"\"));\n            if (duration && !isNaN(duration)) {\n                setTimeout(() => {\n                    modal.hide();\n                    resolve(true);\n                }, duration);\n            } else {\n                resolve(modal);\n            }\n\n        });\n\n    //*GENERATE A CUSTOM ALERT DIALOG\n    app.alert          = (title, message, cb) => \n    {\n\n        UIkit.modal.alert(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Notice'}</font>\n            <hr>\n            <center>${message||'</center><font color=red font-weight=bold; font-size=2em>Oops!</font><br>Something nasty happened!<center>'}</center>`);\n\n        if (cb ) {\n            if( typeof(cb) == \"function\")\n            {\n                return $q.resolve(cb(message))\n                .catch(function(e) {\n                    console.log(\"Encountered an error when processing the alert function.\")\n                    console.dir(e)\n                });\n            }\n            else\n            {\n                return $q.resolve(true)\n                .catch(function(e) {\n                    console.log(\"Encountered an error when processing the alert2 function.\")\n                    console.dir(e)\n                });\n            }\n            \n        } else {\n            return $q.resolve(true)\n                .catch(function(e) {\n                    console.log(\"Encountered an error when processing the alert2 function.\")\n                    console.dir(e)\n                });\n        }\n\n    };\n\n    //*GENERATE A CUSTOM CONFIRM DIALOG\n    app.confirm        = (title, message, cb) => \n    {\n\n        return $q((resolve) => {\n\n            UIkit.modal.confirm(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Confirmation required.'}</font>\n                <hr>\n                <center>${message}</center>`, () => {\n                if (cb && typeof(cb) == \"function\") {\n                    resolve(cb(message));\n                } else {\n                    resolve(true);\n                }\n            });\n\n        });\n\n    };\n\n    //*GENERATE A CUSTOM PROMPT DIALOG\n    app.prompt         = (title, label, placeholder, cb) => \n    {\n\n        return $q((resolve) => {\n\n            UIkit.modal.prompt(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Info required'}</font>\n            <hr>\n            ${label||'email'} :`, (placeholder || ''), (userValue) => {\n                if (cb && typeof(cb) == \"function\") {\n                    resolve(cb(userValue))\n                } else {\n                    resolve(userValue);\n                }\n            });\n\n        });\n\n    };\n\n    //!BASIC VALIDATION METHODS\n\n    //*VALIDATE EMAIL ADDRESSES\n    app.isemail        = /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/;\n    app.isEmail        = app.is_email = (prospective_email) => app.isemail.test(prospective_email);\n\n    //*VALIDATE USERNAMES\n    app.isusername     = /^[a-z0-9_-]{4,16}$/;\n    app.isUsername     = app.is_username = (prospective_username) => app.isusername.test(prospective_username);\n\n    //*VALIDATE PASSWORDS\n    app.ispassword     = /^[-@./\\!\\$\\%\\^|#&,+\\w\\s]{6,50}$/;\n    app.isPassword     = app.is_password = (prospective_password) => app.ispassword.test(prospective_password);\n\n    //* VALIDATE NUMBERS\n    app.isnumber       = /^-{0,1}\\d*\\.{0,1}\\d+$/;\n    app.isNumber       = app.is_number = prospective_number => app.isnumber.test(prospective_number);\n\n    //*VALIDATE TELEPHONE NUMBERS\n    app.istelephone      = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n    app.ismultitelephone = /^([\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}(?:,|$))+$/im;\n    app.isTelephone      = app.is_telephone = (prospective_telephone) => app.istelephone.test(prospective_telephone);\n    app.isMultiTelephone = app.is_multi_telephone = (prospective_telephone) => app.ismultitelephone.test(prospective_telephone);\n\n    //@ VALIDATE IMEI NUMBERS \n    app.isimei         = /^[0-9]{15}$/;\n    app.isImei         = app.is_imei = prospective_imei => app.isimei.test(prospective_imei);\n\n    //*VALIDATE DATETIME VALUES IN THE FORMAT  DD-MM-YYYY HH:MM e.g 29-02-2013 22:16\n    app.isdateTime     = /^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-(19|20)[0-9]{2} (2[0-3]|[0-1][0-9]):[0-5][0-9]$/;\n    app.isDateTime     = app.is_date_time = prospective_date => app.isdateTime.test(prospective_date);\n\n    //*VALIDATE WHETHER TWO GIVEN VALUES MATCH\n    app.matches        = (val1, val2) => (val1 === val2);\n\n    //*TRANFORM NUMBER TO MONTH\n    app.num2month      = (month_number) => (!isNaN(month_number) && (month_number <= 11)) ? $month_array[month_number] : \"Invalid Month Number\";\n\n    //*REMOVE DUPLICATES FROM ARRAY\n    app.unique         = app.removeDuplicates = app.remove_duplicates = ( arr_init ) => ( Array.isArray(arr_init) ) ? arr_init.filter((elem, pos, arr) =>  arr.indexOf(elem) == pos ) : ['The  applied method only processes Arrays'];\n\n \n    app.count = ( searchParam, arrayObject ) => \n    //@ Ensure that the provided 'arrayObject' parameter is an Array\n    (!Array.isArray(arrayObject)) ? \n        app.notify(\"Failed to count occurances on a non array object.\", \"danger\")\n    : ( Array.isArray(searchParam) ) \n         ?   searchParam.reduce( ( count,search_term, idx ) => {\n                 count[search_term] = arrayObject.filter(array_val => array_val == search_term ).length;\n                 return count;\n             },{}) \n         : arrayObject.filter( array_val => array_val == searchParam ).length;    \n\n    //@ POST HTTP DATA HANDLER  \n    app.post           = (destination, data) =>  \n        $q((resolve, reject) => {\n\n            $http.post(destination, data)\n                .success(resolve)\n                .error(reject)\n\n        });\n\n    //@ GET HTTP DATA HANDLER  \n    app.get            = (destination, params) => \n        $q((resolve, reject) => {\n\n            $http.get(destination, { params })\n            .success(resolve)\n            .error(reject)\n\n        });\n\n    //@ PUT HTTP DATA HANDLER \n    app.put            = (destination, data) => \n        $q((resolve, reject) => {\n\n            $http.put(destination, data)\n                .success(resolve)\n                .error(reject)\n\n        });\n\n    //@ DELETE HTTP DATA HANDLER \n    app.delete         = (destination, params) => \n        $q((resolve, reject) => {\n\n            $http.delete(destination, {params})\n                .success(resolve)\n                .error(reject)\n\n        });\n\n    //@ Handle background calls to the web server for database integration\n    app.db             = (params, destination) =>\n        $q((resolve, reject) => {\n\n            destination = (destination) ? destination : `${hlink}/sms`;\n            $http.get(destination, { params })\n            .success(resolve)\n            .error(reject)\n\n        });\n    \n    //@ Handle email sending requests\n    app.mail           = (data, destination) =>\n        $q((resolve, reject) => {\n            destination = (destination) ? destination : `${remoteAuth.url}/mail`;\n            $http.post(destination, data)\n            .success(resolve)\n            .error(reject)\n        });\n\n    //@ Handle The sending of welcome messages\n    app.welcomeMail    = (data,destination) =>\n        $q((resolve,reject)=>{\n\n            destination = (destination) ? destination : `/welcome`;\n\n            $http.post(destination, data)\n            .success(resolve)\n            .error(reject)\n\n        });\n\n    //@ Generic Process Event Handler\n    app.handler        = (response) => \n    {\n        response = (response.response) ? response : response.data;\n\n        if (response.response == 200) {\n            app.alert(\"<font color=green>Done</font>\", app.str(response.data.message));\n        } else {\n            app.alert(`<font color=red>Uh Oh!</font> ( ${response.response} Error )`, app.str(response.data.message));\n        }\n\n    };\n\n    //@ Generic Error Handler\n    app.errorHandler   = app.error_handler = app.e_handler = (response) =>\n    {\n        response = (response.response) ? response : response.data;\n        app.alert(`<font color=red>Uh Oh!</font>`, app.str(response.data.message));\n    };\n\n    //@ Generic Process Remote Event Handler\n    app.remote_handler = app.remoteHandler = (response) =>\n    {\n        app.alert(\"<font color=blue>Data Response</font>\", app.str(app.str(response)));\n    };\n\n    //@ SMS FIGURE COUNTER\n    app.countSMS       = app.count_sms = (data) => (Math.ceil(data.length / 160) == 0) ? 1 : Math.ceil((data.length) / 160);\n    app.countSMSify    = app.count_smsify = (data) => $q.resolve( app.countSMS(data) );\n\n    //@ CONVERT DATA TO A TABLE\n    app.tabulate       = ( text, headers, data ) =>\n    {\n        UIkit.modal.alert('<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\"> DOWNLOAD NOTICE</font> <hr> <center>The report is being generated.<center>');\n\n        return $q( (resolve,reject) => \n        {\n            //@ Start  an instance of the pdf generator\n            let doc = new jsPDF('l', 'pt');\n\n            //@ Add a simple title\n            doc.autoTable( headers, data, {\n                styles: {fillColor: [100, 175, 250], fontSize: 5},\n                columnStyles: {\n                    id: {fillColor: 255}\n                },\n                margin: {top: 60},\n                addPageContent: function(data) {\n                    doc.text(`${text} at ${new Date().format(\"yyyy/mm/dd HH:mm\")}`, 40, 30);\n                }\n            });\n\n            resolve( doc.save(`${text} ${new Date().format(\"yyyy/mm/dd HH:mm\")}.pdf`) )\n\n        })   \n\n    };\n\n    return app;\n\n}])\n\n//@@ The Remote authentication service\n.service(\"remoteAuth\", [\n                        \"$http\"\n                        ,\"$localStorage\"\n                        ,\"$q\"\n                        ,function($http, $localStorage, $q) \n{\n    \n    let r_auth          = this;\n\n    r_auth.url          = 'http://bixbyte.io'\n\n    r_auth.setUrl       = r_auth.set_url = (accessUrl) =>\n        $q((resolve, reject) => {\n            r_auth.url = accessUrl;\n            resolve(accessUrl);\n        })\n\n    r_auth.SetAuth      = r_auth.set_auth = (AuthToken) =>\n        $q((resolve, reject) => {\n\n            resolve($http.defaults.headers.common.Authorization = AuthToken || ($localStorage.framify_user) ? $localStorage.framify_user.token : undefined);\n\n        });\n\n    //@ Perform User Registration\n    r_auth.Register     = r_auth.register =  (credentials) =>\n        $q( (resolve, reject) =>\n        {\n\n            $http.post(`${r_auth.url}/auth/register`, credentials)\n                .success((response) => \n                {\n\n                    if (response.response == 200) \n                    {\n                        resolve(credentials);\n                    } \n                    else \n                    {\n                        reject(response.data.message);\n                    }\n\n                })\n                .error((response) =>\n                {\n                    reject(JSON.stringify(((response) ? ((response.data) ? response.data.message : response) : response) || \"Could not obtain a response from the server.\"))\n                })\n\n        });\n\n    //@ Perform a User Login\n    r_auth.Login        = r_auth.login = (params) =>\n        $q((resolve, reject) => \n        {\n\n            //@ Append the auth command to the params [jp dash auth only]\n            // params[\"action\"] = \"auth\";\n            // params[\"password\"]     = (params[\"password\"]);\n\n            //@ Push the authentication request\n            $http.get(`${r_auth.url}/auth/verify`, { params })\n            .success( (response) => \n            {\n                if (response.response == 200) \n                {\n                    $localStorage.framify_user = response.data.message;\n                    resolve(response.data.message);\n                } \n                else \n                {\n                    reject(response.data.message);\n                }\n\n            })\n            .error( (response) => \n            {\n                console.dir(response)\n                reject(JSON.stringify(((response) ? ((response.data) ? response.data.message : response) : response) || \"Could not obtain a response from the server.\"))\n            })\n\n        });\n\n    //@ Perform A User Logout\n    r_auth.Logout       = r_auth.logout = () =>\n    {\n\n        return $q( (resolve, reject) =>\n        {\n\n            //@ Clear the localstorage instance of the login data\n            delete $localStorage.framify_user;\n            \n            //@ Clear all the existing session cookies\n            document.cookie.split(\";\").forEach((c) => { document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\"); });\n\n            // r_auth.SetAuth(undefined)\n            //     .then(resolve)\n            \n            //@ Move on to the next task\n            resolve();\n\n        });\n\n    };\n\n    return r_auth;\n\n}])\n\n//@@ The Authentication service  \n// ,$http,$localStorage,$q\n.service('auth', [\n                    \"remoteAuth\"\n                    ,function(remoteAuth) \n{\n\n    Object.assign(this,remoteAuth);\n    return this;\n\n}])\n\n//@ The infobip SMS integration module\n.service(\"iSMS\", [\n                    \"$http\"\n                    ,\"$q\"\n                    ,\"app\"\n                    ,function($http, $q, app) \n{\n\n    let isms              = this;\n\n    isms.provider         = '/sms';\n\n    isms.setProvider      = isms.set_provider = (providerURL) => {\n        isms.provider = (providerURL.toString().includes('/sms')) ? providerURL : `${providerURL}/sms`;\n        console.log(`All SMS requests via the i service will now be routed to ${isms.provider}`);\n    };\n\n    isms.one              = (data) => \n        $q((resolve, reject) => {\n\n            $http.post(`${isms.provider}/one`, data)\n                .success( (response) =>\n                {\n                    if (response.response == 200) \n                    {\n                        resolve(response);\n                    } \n                    else \n                    {\n                        reject(response);\n                    }\n                })\n                .error((response) =>\n                {\n                    reject(app.make_response(500, JSON.stringify(((response) ? ((response.data) ? response.data.ismsssage : response) : response) || \"Could not obtain a response from the server.\")))\n                })\n        });\n\n    isms.many             = (data) => {\n\n        return $q((resolve, reject) => {\n\n            $http.post(`${isms.provider}/many`, data)\n            .success(function(response) {\n\n                if (response.response == 200) {\n\n                    resolve(response)\n\n                } else {\n\n                    reject(response)\n\n                }\n\n            })\n            .error(function(response) {\n                reject(app.make_response(500, JSON.stringify(((response) ? ((response.data) ? response.data.ismsssage : response) : response) || \"Could not obtain a response from the server.\")))\n            })\n\n        })\n\n    };\n\n    isms.template         = (data) => {\n\n        return $q((resolve, reject) => {\n\n            $http.post(`${isms.provider}/template`, data)\n            .success(function(response) {\n\n                if (response.response == 200) {\n\n                    resolve(response)\n\n                } else {\n\n                    reject(response)\n\n                }\n\n            })\n            .error(function(response) {\n                reject(app.make_response(500, JSON.stringify(((response) ? ((response.data) ? response.data.ismsssage : response) : response) || \"Could not obtain a response from the server.\")))\n            })\n\n        })\n\n    };\n\n    isms.test             = (data) => {\n\n        return $q((resolve, reject) => {\n\n            $http.post(`${isms.provider}`, data)\n            .success(function(response) {\n\n                if (response.response == 200) {\n\n                    resolve(response)\n\n                } else {\n\n                    reject(response)\n\n                }\n\n            })\n            .error(function(response) {\n                reject(app.make_response(500, JSON.stringify(((response) ? ((response.data) ? response.data.ismsssage : response) : response) || \"Could not obtain a response from the server.\")))\n            })\n\n        })\n\n    };\n\n    isms.echo             = (data) => {\n\n        return $q((resolve, reject) => {\n\n            $http.post(`${isms.provider}/echo`, data)\n            .success(function(response) {\n\n                if (response.response == 200) {\n\n                    app.alert(\"<font color=green>SMS ECHO</font>\", app.str(response.data.message));\n                    resolve(response)\n\n                } else {\n\n                    reject(response)\n\n                }\n\n            })\n            .error(function(response) {\n                reject(app.make_response(500, JSON.stringify(((response) ? ((response.data) ? response.data.message : response) : response) || \"Could not obtain a response from the server.\")))\n            })\n\n        })\n\n    }\n\n    isms.handler          = (responseData) => {\n\n        return $q((resolve, reject) => {\n\n            let resp = (responseData.response) ? app.clone(responseData) : app.clone(responseData.data);\n\n            if (responseData.response == 200) {\n                app.alert(\"<font color=green>SMS RESPONSE</font>\", \"The SMS messages have been queued for sending \");\n                resolve(resp)\n            } else {\n                app.alert(`<font color=red>Uh Oh!</font> ( ${responseData.response} Error )`, app.str(responseData.data.message));\n                reject(resp)\n            }\n\n        })\n\n    };\n\n    return isms;\n\n}])\n\n//@ Configure the application for execution\n.run([\n        \"app\"\n        ,\"$rootScope\"\n        ,\"$state\"\n        ,\"$localStorage\"\n        ,\"auth\"\n        ,\"remoteAuth\"\n        ,\"$http\"\n        ,\"iSMS\"\n        // ,\"$templateCache\"\n        ,function(app, $rootScope, $state, $localStorage, auth, remoteAuth, $http, iSMS) \n{\n\n    //@ Clear the application cache on page load [Breaks the datetime picker and framify pagination handler]\n    // $rootScope.$on('$viewContentLoaded', function() {\n    //     $templateCache.removeAll();\n    // });    \n\n    //! INJECT THE LOCATION SOURCE TO THE ROOT SCOPE\n    $rootScope.location     = $state;\n\n    //! INJECT THE $localStorage instance into the root scope\n    $rootScope.storage      = $localStorage;\n\n    //! INJECT THE APPLICATION'S MAIN SERVICE TO THE ROOT SCOPE SUCH THAT ALL SCOPES MAY INHERIT IT\n    $rootScope.app          = app;\n\n    //! SIMPLE APPLICATION BEHAVIOR SETUP\n    $rootScope.frame        = {};\n\n    //@ INJECT THE infobip SMS sender into the root scope\n    $rootScope.iSMS         = iSMS;\n\n    //@ INJECT THE AUTHENTICATION SERVICE\n    $rootScope.auth         = auth;\n    $rootScope.remoteAuth   = remoteAuth;\n\n    //! IDENTIFY THE CURRENT PATH\n    $rootScope.frame.path   = () => $state.absUrl().split(\"/#/\")[0] + \"/#/\" + $state.absUrl().split(\"/#/\")[1].split(\"#\")[0];\n    //p.split(\"/#/\")[0]+\"/#/\"+p.split(\"/#/\")[1].split(\"#\")[0]\n\n\n    //! RELOCATION HANDLING\n    $rootScope.frame.relocate = (loc) => $rootScope.location.go(loc);\n\n    //@ The global permissions definition object\n    $rootScope.permissions  = {\n\n        //@ ALLOW ONLY ADMIN USERS\n        admin_only          : (user) =>  ((user.role) ? (( user.role == 'admin') ? true : false ) : false),\n        \n        //@! FROM MATCHING ORGANIZATIONS\n        admin_only_org      : (user, item_org) => ((user.role) ? ((user.role == 'admin') && (user.organization == item_org) ? true : false) : false),\n\n        //@ ALLOW ONLY CLIENT USERS\n        client_only         : (user) => ((user.role) ? ((user.role == 'client') ? true : false) : false),\n\n        //@! FROM MATCHING ORGANIZATIONS\n        client_only_org     : (user, item_org) =>  ((user.role) ? (((user.role == 'client') && (user.organization == item_org)) ? true : false) : false),\n\n        //@ ALLOW ONLY AUDIT USERS\n        audit_only          : (user) => ((user.role) ? ((user.role == 'audit') ? true : false) : false),\n\n        //@! FROM MATCHING ORGANIZATIONS        \n        audit_only_org      : (user, item_org) => ((user.role) ? (((user.role == 'audit') && (user.organization == item_org)) ? true : false) : false),\n\n        //@ ALLOW BOTH ADMIN AND CLIENT USERS\n        admin_client        : (user) =>  ((user.role) ? ((user.role == 'admin' || user.role == 'client') ? true : false) : false),\n            \n        //@! FROM MATCHING ORGANIZATIONS\n        admin_client_org    : (user, item_org) => ((user.role) ? (((user.role == 'admin' || user.role == 'client') && (user.organization == item_org)) ? true : false) : false),\n\n        //@! FROM MATCHING ORGANIZATIONS WITH ADMIN EXEMPT\n        any_admin_client_org: (user, item_org) => ((user.role) ? (((user.role == 'audit')) ? false : (user.role == 'admin') ? true : (user.organization == item_org) ? true : false) : false),\n\n        //@ ALLOW ALL USERS \n        any                 : (user) => true,\n\n        //@! FROM MATCHING ORGANIZATIONS\n        any_org             : (user, item_org) => (user.organization == item_org) ? true : false,\n\n        //@! EXCLUDE ADMINS FROM SCRUTINY\n        any_admin_other_org : (user, item_org) =>  ((user.role == 'admin') ? true : ((user.organization == item_org) ? true : false))\n\n    };\n\n}])\n\n//@ The main controller\n.controller(\"framifyController\",[\n                                    \"$scope\"\n                                    ,\"$state\"\n                                    ,\"$rootScope\"\n                                    ,\"$http\"\n                                    ,\"$q\"                                 \n                                    ,function($scope, $state, $rootScope, $http, $q) \n{\n\n    //!APPLICATION GLOBAL SCOPE COMPONENTS\n    $scope.current              = {};\n    $scope.ui                   = {};\n\n    // $scope.urlParams = $stateParams;\n\n    $rootScope.nav              = [];\n    $rootScope.nav.search;\n\n    $scope.nav.hasFilters       = false;\n\n\n    //** MANAGE THE NAVIGATION SEARCH STATUS\n    $scope.openFilters          = (hasFilters) => {\n        $scope.nav.hasFilters =  (hasFilters === true) ? true : false;\n    };\n\n    //!RE-INITIALIZE APPLICATION DATA\n    $rootScope.app.reinit       = () => $scope.location.path(\"/\");\n\n    /** \n     * ++LATER++\n     */\n    //@ CHECK IF OBJECT EXISTS IN ARRAY\n    $scope.objectInArray        =  $scope.object_in_array = $scope.obj_in_array = (list, item)=> \n    {\n        var len = list.length;\n    \n        for (var i = 0; i < len; i++) {\n            var keys = Object.keys(list[i]);\n            var flg = true;\n            for (var j = 0; j < keys.length; j++) {\n                var value = list[i][keys[j]];\n                if (item[keys[j]] !== value) {\n                    flg = false;\n                }\n            }\n            if (flg == true) {\n                return i;\n            }\n        }\n        return -1;\n    };\n \n    //@ FUNCTION EXECUTOR\n    $rootScope.exec             = f => f();\n\n    //@ VARIABLE SETTER\n    $rootScope.setVar           = $rootScope.set_var = (obj, keys, v) => {\n\n        if (keys.length === 1) \n        {\n            obj[keys[0]] = v;\n        } \n        else \n        {\n            let key  = keys.shift();\n            obj[key] = $rootScope.setVar(typeof(obj[key]) === 'undefined' ? {} : obj[key], keys, v);\n        }\n\n        return obj;\n\n    };\n\n  \n    //@ PUSH TO ARRAY\n    $scope.arrayPush            = $scope.array_push = ( arr,valu ) =>\n        ( !Array.isArray(arr) ) \n            ? []\n            : ( Array.isArray(valu) )\n                ?  arr.concat(valu) \n                : (function(){ \n                    let myarr = JSON.parse( JSON.stringify( arr ) );\n                    myarr.push(valu);\n                    return myarr;\n                })();\n\n    /**\n     * DATABASE CENTRIC ADDITION AND DELETION\n     */\n\n    //Define the main application objects\n    $scope.add                  = {};\n    $scope.fetch                = {};\n    $scope.fetched              = {};\n    $scope.counted              = {};\n    $scope.data                 = {};\n    $scope.actions              = { prequeue: [] };\n\n    $scope.data.login           = {};\n    $scope.data.admin           = {};\n\n    //@ Add an action to the actions holder\n    $scope.addAction            = $scope.add_action = ( ky,val ) => $scope.actions[ky]  = val;\n\n    // $rootScope.frame.changeAdmin(false);\n    $scope.logedin              = false;\n\n    //@ Redirect to a given sub-state in the pre-defined 'app' main state\n    $scope.appRedirect          = $scope.app_redirect = (partialState) => $state.go(\"app.\" + partialState);\n\n    //@ Redirect to the specified state\n    $scope.goTo                 = $scope.go_to = (completeState) => $state.go(completeState);\n\n    //@ UNWANTED ANGULAR JS OBJECTS\n    $scope.unwanted             = [\"$$hashKey\", \"$index\",\"$$state\"];\n\n    //@ Remove the unwanted keys\n    $scope.removeUnwanted       = $scope.remove_unwanted = (insertObj) => \n    {\n        Object.keys(insertObj)\n            .forEach(insertKey => \n            {\n                if ($scope.unwanted.indexOf(insertKey) != -1) \n                {\n                    insertObj[insertKey] = undefined;\n                    delete insertObj[insertKey];\n                }\n            });\n        return insertObj;\n    };\n    $scope.removeUnwantedify    = $scope.remove_unwantedify = (insertObj) =>  $q.resolve($scope.removeUnwanted(insertObj));     \n\n    //@ Generate an MD5 checksum from the specified fields\n    $scope.encryptFields = $scope.encrypt_fields = ( fields_to_encrypt, data_to_encrypt ) => \n        fields_to_encrypt\n        .split(\",\")\n        .reduce((previous,cryptField) => \n        {\n\n            if (previous[cryptField]) \n            {\n                previous[cryptField] = $scope.app.md5(previous[cryptField]);\n            }\n\n            return previous;\n\n        },data_to_encrypt);\n\n    $scope.encryptFieldsify = $scope.encrypt_fieldsify = ( fields_to_encrypt, data_to_encrypt ) => $q.resolve( $scope.encrypt_fields( fields_to_encrypt, data_to_encrypt ) );\n\n\n    //@ HANDLE GENERIC DB REQUEST RESPONSES\n    $scope.generic_db_request_handler = ( method, table, responseData, data ) => \n        $q((resolve,reject) => \n        {    \n            let r = $scope.app.json(responseData);\n\n            // console.log(`The relevant app data is: `)\n            // console.dir(r)\n\n            if (r.response == 200) \n            {\n            \n                if( typeof(r.data.message) == \"string\" )\n                {\n                    $scope.app.notify(`<center> ${r.data.message}</center>`, \"success\");\n                }\n                \n\n                if( method == \"custom\")\n                {\n                    $scope.cFetched[table.toString()] = r.data.message;\n                    // $scope.$apply();\n                }\n                else if( method == \"count\" )\n                {\n                    $scope.counted[table.toString()] = r.data.message;\n                    // $scope.$apply();\n                }\n                else if( method != \"fetch\" )\n                {\n                    $scope.fetch(table, { specifics: data.specifics });\n                }\n                else\n                {\n                    $scope.fetched[table.toString()] = r.data.message;\n                    // $scope.$apply();\n                }            \n\n                $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                resolve(r.data.message);\n\n            } \n            else \n            {\n                // POSTGRESQL ERROR FORMAT MATCHING\n                if (Array.isArray(r.data.message)) \n                {\n\n                    let v = r.data.message[2].match(/DETAIL:(.*)/);\n\n                    if (v != undefined || v != null) \n                    {\n                        r.data.message = v[1];\n                    } \n                    else \n                    {\n                        r.data.message = r.data.message[2];\n                    }\n\n                    resolve(r.data.message);\n\n                }\n\n                $scope.app.notify(`<center>${ r.data.message }</center>`, 'danger');\n                reject($scope.app.makeResponse(500, v[1]))\n\n            }\n\n        });\n\n\n    //! BASIC ADDITION\n    $scope.add                  = (table, data, cryptFields, cb) => \n        $q((resolve, reject) => \n        {\n            //* populate the data object \n            data            = (data) ? $scope.app.json(data) : {};\n            data.command    = \"add\";\n            data.table      = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n            data.extras     = (data) ? ((data.extras) ? data.extras.replace(/LIMIT 1/ig, '') : undefined) : undefined;\n\n            //* Encrypt the specified cryptFields\n            if (cryptFields) \n            {\n                data =  $scope.encrypt_fields(cryptFields,data);\n            }\n\n            //* Perform the actual addition\n            $scope.app.db($scope.removeUnwanted(data))\n            .then((r) => \n            {\n\n                $scope.generic_db_request_handler( \"add\", table, r, data )\n                .then( d => \n                {\n                    if( cb )\n                    {\n                        cb(d);\n                    }\n                    else\n                    {\n                        resolve(d)\n                    }\n                })\n                .catch(reject);\n\n            });\n\n        });\n\n    //! BASIC UPDATING\n    $scope.update               = (table, data, cryptFields, cb) => \n        $q((resolve, reject) => \n        {\n\n            //* pack the relevant info into the data object\n            data            = (data) ? $scope.app.json(data) : {};\n            data.command    = \"update\";\n            data.table      = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n            data.extras     = (data) ? ((data.extras) ? data.extras.replace(/LIMIT 1/ig, '') : undefined) : undefined;\n\n            //* Encrypt the specified cryptFields\n            if (cryptFields) \n            {\n               \n                data =  $scope.encrypt_fields(cryptFields,data);\n\n                // cryptFields.split(\",\")\n                //     .forEach((cryptField) => \n                //     {\n                //         if (data[cryptField]) \n                //         {\n                //             data[cryptField] = $scope.app.md5(data[cryptField])\n                //         }\n                //     });\n            }\n\n            //* perform the actual update\n            $scope.app.db($scope.removeUnwanted(data))\n            .then((r) => \n            {\n\n                $scope.generic_db_request_handler( \"update\", table, r, data )\n                .then( d => \n                {\n                    if( cb )\n                    {\n                        cb(d);\n                    }\n                    else\n                    {\n                        resolve(d)\n                    }\n                })\n                .catch(reject);\n                \n            })\n\n        });\n\n    //! BASIC DATA FETCHING\n    var do_fetch                = (table, data, cryptFields) => \n        $q((resolve, reject) => \n        {\n\n            //* populate the \"data\" object\n            data            = (data) ? $scope.app.json(data) : {};\n            data.command    = \"get\";\n            data.table      = table;\n\n            //* Encrypt the specified cryptFields\n            if (cryptFields) \n            {\n                data =  $scope.encrypt_fields(cryptFields,data);\n            }\n\n            //* perform the actual data fetching\n            $scope.app.db($scope.removeUnwanted(data))\n            .then((r) => \n            {\n\n                $scope.generic_db_request_handler( \"fetch\", table, r, data )\n                .then( d => \n                {\n                    resolve(d);\n                })\n                .catch(reject);                \n\n            })\n\n        });\n\n    $scope.fetch                = (table, data, cryptFields, cb) => \n    {\n\n        if (Array.isArray(table)) \n        {\n\n            let promiseArr = new Array();\n\n            table\n            .filter(e => typeof(e[0]) != 'undefined')\n            .forEach((tData, tkey) => \n            {\n                promiseArr.push(do_fetch(tData[0], (tData[1] || {})), cryptFields)\n            });\n\n            promiseArr = promiseArr.filter(e => typeof(e) != 'undefined');\n\n            return $q.all(promiseArr);\n\n        } else {\n            return $q.resolve(do_fetch(table, data, cryptFields))\n            .catch(function(e) {\n                // console.log(\"Encountered an error when processing the fetch function.\")\n                // console.dir(e)\n            });\n        }\n\n    };\n\n    //! BASIC DELETION  \n    $scope.del                  = (table, data, cryptFields, cb) => \n        $q((reject, resolve) => \n        {\n\n            //* populate the data object\n            data            = (data) ? $scope.app.json(data) : {};\n            data.command    = \"del\";\n            data.table      = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n\n            //* Encrypt the specified cryptFields\n            if (cryptFields) \n            {\n                data =  $scope.encrypt_fields(cryptFields,data);\n            }\n\n            $scope.app.db($scope.removeUnwanted(data))\n            .then((r) => \n            {\n\n                $scope.generic_db_request_handler( \"del\", table, r, data )\n                .then( d => \n                {\n                    if( cb )\n                    {\n                        cb(d);\n                    }\n                    else\n                    {\n                        resolve(d)\n                    }\n                })\n                .catch(reject);\n\n            })\n\n        });\n\n\n    //@ Handle basic application redirection\n    $scope.redirect             = (loc) => \n    {\n\n        if (loc) \n        {\n            window.location = loc\n        } else {\n            window.location = \"/#/framify\";\n        }\n        return $q.resolve(true)\n        .catch( (e) =>\n        {\n            console.log(\"Encountered an error when processing the redirect function.\")\n            console.dir(e)\n        })\n\n    };\n\n    // BASIC Custom Queries\n    $scope.custom               = (table, data, cryptFields, cb) => \n    {\n\n        return $q((resolve, reject) => \n        {\n\n            //* initialize the data object\n            data            = (data) ? $scope.app.json(data) : {};\n            data.command    = \"custom\";\n\n            //* Encrypt the specified cryptFields\n            if (cryptFields) \n            {\n                data =  $scope.encrypt_fields(cryptFields,data);\n            }\n\n            //* Perform the actual custom query\n            $scope.app.db($scope.removeUnwanted(data))\n            .then((r) => \n            {\n\n                $scope.generic_db_request_handler( \"add\", table, r, data )\n                .then( d => \n                {\n                    if( cb )\n                    {\n                        cb(d);\n                    }\n                    else\n                    {\n                        resolve(d)\n                    }\n                })\n                .catch(reject);\n               \n            })\n\n        });\n\n    };\n\n    //BASIC DATABASE INSTANCEOF COUNTER\n    $scope.count                = (table, data, cryptFields, cb) =>\n        $q((resolve, reject) => {\n\n            data            = (data) ? $scope.app.json(data) : {};\n            data.table      = table;\n            data.command    = \"count\";\n            data.token      = data.token || {};\n\n            //* Encrypt the specified cryptFields\n            if (cryptFields) \n            {\n                data =  $scope.encrypt_fields(cryptFields,data);\n            }\n\n            //* perform the actual count\n            $scope.app.db($scope.removeUnwanted(data))\n            .then((r) => {\n\n                $scope.generic_db_request_handler( \"add\", table, r, data )\n                .then( d => \n                {\n                    if( cb )\n                    {\n                        cb(d);\n                    }\n                    else\n                    {\n                        resolve(d)\n                    }\n                })\n                .catch(reject);\n\n            })\n\n        });\n\n    /**\n     * TABLE SORTER\n     */\n    $scope.sort                 = function(keyname) {\n        $scope.sortKey = keyname; //set the sortKey to the param passed\n        $scope.reverse = !$scope.reverse; //if true make it false and vice versa\n    }\n\n\n    /**\n     *  DELETE UNWANTED FIELDS\n     */\n    $scope.sanitize             = (data, keys) => \n    {        \n        if (keys) \n        {\n\n            keys.split(\",\").forEach((key) => \n            {\n                delete data[key];\n            });\n\n            return $q.resolve(data)\n            .catch( (e) => \n            {\n                console.log(\"Encountered an error when processing the sanitize function.\")\n                console.dir(e)\n            });\n\n        }\n\n    };\n\n    /**\n     * PUSH DATA TO OBJECT\n     */\n    $scope.dPush                = $scope.d_push = (obj, key, val) => \n    {\n        obj[key] = val;\n        return obj;\n    };\n\n    $scope.dPushify             = $scope.d_pushify = (obj, key, val) => $q.resolve($scope.dPush(obj, key, val));\n  \n    /**\n     * @ MONTH REGULATION\n     */\n    $scope.currmoin             = $scope.app.monthNum();\n    $scope.setMoin              = $scope.set_moin = (moin) => { $scope.currmoin = moin; };\n\n    //@ DELETE UNWANTED PARAMETERS\n    $scope.delParams            = $scope.del_params = (mainObj, removeKeys) => \n    {\n        // $scope.app.clone\n        mainObj = (mainObj) || {};\n        removeKeys = (removeKeys) ? removeKeys.split(',') : [];\n\n        removeKeys.forEach(e => {\n            mainObj[e] = null;\n            delete mainObj[e];\n        });\n\n        return mainObj;\n\n    };\n\n    //@ INJECT A STANDARD WHERE \"Extras\" OBJECT\n    // addExtras(data.my_services,{username: storage.user.username},'username:WHERE owner','password,name,email,telephone,account_number,entity,active'),' ' )\n    $scope.addExtras            = (targetObj, extrasObj, subStrings, removeKeys) => \n        $q((resolve, reject) => \n        {\n\n            targetObj   = targetObj || {};\n            extrasObj   = extrasObj || {};\n            subStrings  = subStrings || '';\n            removeKeys  = removeKeys || '';\n\n            var extras = '';\n\n            var k = [],\n                v = [];\n\n            //@ CAPTURE THE REMOVE KEYS\n            removeKeys  = removeKeys.split(',').filter(e => e);\n\n            removeKeys.forEach(e => {\n                extrasObj[e] = null;\n                delete extrasObj[e];\n            });\n\n            //@ CAPTURE REPLACE STRINGS\n            subStrings\n            .split(',')\n            .forEach((e, i) => {\n                let x = e.split(':');\n                k[i] = (x[0]);\n                v[i] = (x[1]);\n            })\n\n            //@ GET THE DEFINED KEYS\n            var keys = Object.keys(extrasObj);\n\n            //@ REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n            k.forEach((e, i) => {\n\n                if (keys.indexOf(e) != -1) {\n\n                    extrasObj[v[i]] = extrasObj[e];\n                    extrasObj[e] = null;\n                    delete extrasObj[e];\n\n                }\n\n            });\n\n            k = Object.keys(extrasObj);\n            v = null;\n\n            k.forEach((e, i) => {\n\n                var fg = (!isNaN(extrasObj[e])) ? parseInt(extrasObj[e]) : \"'\" + extrasObj[e] + \"'\";\n                extras += ' ' + e + \"=\" + fg + \" AND\";\n\n            });\n\n            k = null;\n\n            targetObj.extras = extras.replace(/AND+$/, '');\n\n            resolve(targetObj);\n\n        });\n\n\n    $scope.add_extras           = (targetObj, extrasObj, subStrings, removeKeys) => \n        $q((resolve, reject) => \n        {\n\n            targetObj   = targetObj || {};\n            extrasObj   = extrasObj || {};\n            subStrings  = subStrings || ['', ''];\n            removeKeys  = removeKeys || ['', ''];\n\n            var target  = '';\n            var extras  = '';\n\n            var target_k = [],\n                extras_k = [],\n                target_v = [],\n                extras_v = [];\n\n            //@ Ensure that the substitution and removal parameters are arrays \n            if (!Array.isArray(subStrings) || !Array.isArray(removeKeys)) {\n                reject('This Method only allows substitution and removal Arrays, <br> please consider using the <b><i>addExtras</i></b> object instead.');\n            } else {\n\n                //@ CAPTURE THE REMOVE KEYS\n                let target_removeKeys = removeKeys[0].split(',').filter(e => e);\n                let extras_removeKeys = removeKeys[1].split(',').filter(e => e);\n\n                //@ Remove specified keys from the target object\n                target_removeKeys.forEach(e => {\n                    targetObj[e] = null;\n                    delete targetObj[e];\n                });\n\n                //@ Remove specified keys from the extras object\n                extras_removeKeys.forEach(e => {\n                    extrasObj[e] = null;\n                    delete extrasObj[e];\n                });\n\n                //@ CAPTURE REPLACE STRINGS\n                let target_subStrings = subStrings[0].split(',');\n                let extras_subStrings = subStrings[1].split(',');\n\n                //@ Specify target key-value pairs\n                target_subStrings.forEach((e, i) => {\n                    let x = e.split(':');\n                    target_k[i] = (x[0]);\n                    target_v[i] = (x[1]);\n                });\n\n                //@ Specify extras key-value pairs\n                extras_subStrings.forEach((e, i) => {\n                    let x = e.split(':');\n                    extras_k[i] = (x[0]);\n                    extras_v[i] = (x[1]);\n                });\n\n                //@ GET THE DEFINED KEYS\n                var extras_keys = Object.keys(extrasObj);\n                var target_keys = Object.keys(targetObj);\n\n                //@ TARGET - REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n                target_k.forEach((e, i) => {\n\n                    if (target_keys.indexOf(e) != -1) {\n\n                        // // console.log( `Renaming the target ${e} to ${target_v[i]}` )\n\n                        targetObj[target_v[i]] = targetObj[e];\n                        targetObj[e] = null;\n                        delete targetObj[e];\n\n                    }\n\n                });\n\n                //@ EXTRAS - REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n                extras_k.forEach((e, i) => {\n\n                    if (extras_keys.indexOf(e) != -1) {\n\n                        // // console.log( `Renaming the extras ${e} to ${extras_v[i]}` )\n                        extrasObj[extras_v[i]] = extrasObj[e];\n                        extrasObj[e] = null;\n                        delete extrasObj[e];\n\n                    }\n\n                });\n\n                //@ SQLify the extras object\n                extras_k = null;\n\n                extras_k = Object.keys(extrasObj);\n                extras_v = null;\n\n                extras_k.forEach((e, i) => {\n\n                    var fg = (!isNaN(extrasObj[e])) ? parseInt(extrasObj[e]) : \"'\" + extrasObj[e] + \"'\";\n                    extras += ' ' + e + \"=\" + fg + \" AND\";\n\n                });\n\n                extras_k = null;\n\n                targetObj.extras = extras.replace(/AND+$/, '');\n\n                resolve(targetObj);\n\n\n            }\n\n        });\n\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\n    // ADDITIONS ON PROBATION\n    // ----\n\n    //@ LOAD A SERVICE ONTO THE STAGE\n    $scope.service              = {};\n    $scope.entity               = {};\n\n    $scope.showService          = (serviceData) => \n    {\n        $scope.service.available = true;\n        $scope.service.current = serviceData;\n        //$scope.$apply();\n    };\n\n    $scope.showEntity           = (serviceData) => \n    {        \n        $scope.entity.available = true;\n        $scope.entity.current = serviceData;\n        //$scope.$apply();\n    };\n\n    //@ Count my entities\n    $scope.howMany              = (table, data) => \n    {\n        var data = data || { owner: $scope.storage.user.username };\n        data = (data) ? $scope.app.json(data) : {};\n        data.table = table || 'entities';\n        data.command = \"count\";\n        data.token = {};\n\n        $scope.app.db($scope.removeUnwanted(data))\n        .then((r) => \n        {\n\n            $scope.generic_db_request_handler( \"count\", table, r, data )\n            .then( d => \n            {\n                    resolve(d)                \n            })\n            .catch(reject);\n\n        })\n\n    };\n\n    // ----\n\n    //@ FRAMIFY HANDLERS\n\n    $scope.data.login           = $scope.data.login || {};\n\n    $scope.data.me              = $scope.data.me || {};\n\n    $scope.setData;\n\n    //@ Initialize the handlers object\n    $scope.handlers             = {};\n    $scope.r_handlers           = $scope.handlers;\n\n    //@ The registration success handler\n    $scope.handlers.regSuccess  = $scope.r_handlers.regSuccess= $scope.handlers.reg_success = $scope.r_handlers.reg_success = \n    (message) =>\n    {\n        $scope.app.notify(\"The user has been registered\");\n        $state.go(\"app.login\");\n    };\n    \n     \n    //@ The successful login handler\n    $scope.handlers.loginSuccess = $scope.r_handlers.loginSuccess= $scope.handlers.login_success = $scope.r_handlers.login_success= \n    (message) =>\n    {\n        $scope.app.notify(\"<i class='fa fa-2x fa-spin fa-circle-o-notch'></i> Processing your login data\", 'success', 4000);\n        $state.go(\"app.panel\");\n    };\n\n    //@ The registration error handler\n    $scope.handlers.regError     = $scope.r_handlers.regError  = $scope.handlers.reg_error = $scope.r_handlers.reg_error =\n    (message) =>\n    {\n        $scope.app.alert(\"<font color='red'>Signup Error</font>\", message);\n    };    \n\n    //@ The login error handler\n    $scope.handlers.loginError  = $scope.r_handlers.loginError= $scope.handlers.login_error = $scope.r_handlers.login_error= \n    (message) =>\n    {\n        $scope.app.alert(\"<font color='red'>Login Error</font>\", message);\n    };\n    \n    //@ The identity check verification handler\n    $scope.handlers.identity    = $scope.r_handlers.identity = ()  =>\n        $q( (reject, resolve) =>\n        {\n\n            $http( { \n                method: \"GET\", \n                url: `${$scope.app.hlink.replace(/:2433/ig,'')}:2433/auth/me`,  //`${$scope.remoteAuth}:2433/auth/me`, \n                headers : { Authorization: $scope.storage.framify_user.token  } \n            })\n            .success( (response) => \n            {\n                resolve($scope.data.me = response.data.message);\n            })\n            .error( (error) => \n            {\n                console.dir(error);\n                $scope.auth.Logout()\n                .then( () => \n                {                    \n                    $scope.data.me = undefined;\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Your lease has expired <br>Please Login to continue.\", 'danger');\n                    reject($state.go(\"app.login\"));\n                });\n\n            })\n\n        });\n\n    //@ The login status check handler\n    $scope.handlers.isLogedIn   = $scope.handlers.is_loged_in  = () =>\n        $q( (resolve, reject) =>\n        {\n            if (!$scope.storage.framify_user) \n            {\n                $scope.data.me = undefined;\n                // console.log(\"\\nNo localstorage value is defined\\n\")\n\n                if ($state.current.name != \"app.login\") \n                {\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Please Login to continue.\", 'danger');\n                    reject($state.go(\"app.login\"));\n                }\n\n            } \n            else if (!$http.defaults.headers.common.Authorization || $http.defaults.headers.common.Authorization == undefined || $http.defaults.headers.common.Authorization == '') \n            {\n\n                // console.log(\"\\nThe authentication header is not yet defined\\n\")\n                $scope.auth.SetAuth(undefined)\n                .then( () => \n                {\n                    // console.log(`\\nThe authentication header has been set to ${$http.defaults.headers.common.Authorization}\\n`)\n\n                    if ($state.current.name == \"app.login\") \n                    {\n                        resolve($state.go(\"app.panel\"));\n                    } \n                    else \n                    {\n                        resolve();\n                    }\n\n                })\n\n            } \n            else \n            {\n\n                if ($state.current.name == \"app.login\") \n                {\n                    resolve($state.go(\"app.panel\"));\n                } \n                else \n                {\n                    resolve();\n                }\n\n            }\n\n        });\n    \n\n    $scope.r_handlers.isLogedIn = $scope.r_handlers.is_loged_in = () => \n        $q(function(resolve, reject) \n        {\n            if (!$scope.storage.framify_user) \n            {\n                $scope.data.me = undefined;\n\n                if ($state.current.name != \"app.login\") \n                {\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Please Login to continue.\", 'danger');\n                    reject($state.go(\"app.login\"));\n                }\n            } \n            else if (!$http.defaults.headers.common.Authorization || $http.defaults.headers.common.Authorization == undefined || $http.defaults.headers.common.Authorization == '') \n            {\n                $scope.remoteAuth.SetAuth(undefined)\n                .then(function() \n                {\n\n                    if ($state.current.name == \"app.login\") \n                    {\n                        resolve($state.go(\"app.panel\"));\n                    } \n                    else \n                    {\n                        resolve();\n                    }\n                })\n            } \n            else \n            {\n                if ($state.current.name == \"app.login\") \n                {\n                    resolve($state.go(\"app.panel\"));\n                } \n                else \n                {\n                    resolve();\n                }\n            }\n\n        });\n    \n\n    $scope.data.recovery        = {};\n    $scope.data.queued          = [];\n    \n    //@ The recovery attempt function\n    $scope.recover_password     = (email) =>\n    {\n        \n        $scope.data.recovery.response = \"Loading ...\";\n\n        $http({\n            method: \"POST\",\n            url: `${$scope.remoteAuth.url}/passwords/forgot`,\n            data: {\n                email: email\n            }\n        })\n        .then(function(response) {\n            $scope.data.recovery.response = response.data.data.message;\n            $scope.app.alert('Password Recovery',response.data.data.message)\n            $scope.data.recovery.email = \"\";\n        })\n\n    };\n\n    //@ iNITIATE THE SENDING OF A WELCOME EMAIL UPON SIGNUP\n    $scope.isSignedUp           = (obj) => \n        $q( (resolve,reject) => \n        {\n            $scope.app.welcomeMail({\n                from :      \"Framify Accounts <accounts@bixbyte.io>\"\n                ,to :       obj.email\n                ,subject:   \"Welcome to our platform\"\n                ,data : {  name: obj[\"name.first\"], telephone: obj.telephone , username: obj[\"account.name\"] }\n            },`${$scope.remoteAuth.url}/welcome`)                               \n            .then((r)=>\n            {                \n                $scope.app.alert(\"User Added\",\"<center style='font-size:1.4em;'>The user <font color='green'>\"+obj['name.first'] + \"</font>.<br><br> has successfully been registered.</center>\");                    // window.location = \"http://admin.infomed.co.ke\";\n                resolve(true);\n            })\n            .catch((e)=>\n            {\n                $scope.app.alert(\"User Added\",\"<center style='font-size:1.4em;'>The user <font color='green'>\"+obj['name.first'] + \"</font>.<br><br> has successfully been registered.</center>\"); \n                resolve(true);\n            })\n        });\n\n    $scope.SmsSuccess = (response) => \n    {\n        delete $scope.storage.framify_user[\"nullify\"];\n        $scope.app.alert('SMS REQUEUE RESPONSE', \"Message(s) successfuly requeued!\" );\n    };\n\n    $scope.SmsError = (response) => \n    {\n        delete $scope.storage.framify_user[\"nullify\"];\n        $scope.app.alert('<font color=\"red\">SMS REQUEUE RESPONSE</font>', $scope.app.str(response.data || response));\n    };\n\n\n}])\n\n//@ A DIRECTIVE THAT ALLOWS THE EDITING OF DATA IN A MODEL\n.directive(\"contenteditable\", [\n                                function() \n{\n    return {\n        restrict: \"A\",\n        require: \"ngModel\",\n        link: (scope, element, attrs, ngModel) =>\n        {\n\n            function read() \n            {\n                ngModel.$setViewValue(element.html());\n            }\n\n            ngModel.$render = function() \n            {\n                element.html(ngModel.$viewValue || \"\");\n            };\n\n            element.bind(\"blur keyup change\", function() \n            {\n                scope.$apply(read);\n            });\n        }\n    };\n\n}])\n\n//@ Handle the upload of files in angular\n.directive(\"fileModel\", [\n                            \"$parse\"\n                            ,function($parse) \n{\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var model = $parse(attrs.fileModel);\n            var modelSetter = model.assign;\n\n            element.bind('change', function() {\n                scope.$apply(function() {\n                    if (attrs.multiple) {\n                        modelSetter(scope, element[0].files);\n                    } else {\n                        modelSetter(scope, element[0].files[0]);\n                    }\n                });\n            });\n        }\n    };\n\n}])\n\n\n//!CONFIGURE THE BNASIC PRE-RUNTIME STATES OF THE APPLICATION\n.config([\n            \"ChartJsProvider\"\n            ,\"$httpProvider\"\n            ,(ChartJsProvider,$httpProvider) =>\n{\n\n    //@ Set the authentication header for each request\n    $httpProvider.interceptors.push('authIntercept');\n\n    //@SET THE DEFAULT CHART COLORS\n    // ChartJsProvider.setOptions({ colors: ['#FF0000', '#FF00FF', '#00FFFF', '#00FF00', '#0000FF', '#FF00FF', '#4D5360'] });\n\n}])\n\n\n//@ Allow ng-bind-html with directives\n.directive(\"compile\", [\n                        \"$compile\"\n                        ,function ($compile) \n{\n    return function(scope, element, attrs) \n    {\n        scope.$watch(\n            function(scope) \n            {\n                // watch the 'compile' expression for changes\n                return scope.$eval(attrs.compile);\n            },\n            function(value) \n            {\n                // when the 'compile' expression changes\n                // assign it into the current DOM\n                element.html(value);\n\n                // compile the new DOM and link it to the current\n                // scope.\n                // NOTE: we only compile .childNodes so that\n                // we don't get into infinite loop compiling ourselves\n                $compile(element.contents())(scope);\n            }\n        );\n    };\n}])"]}